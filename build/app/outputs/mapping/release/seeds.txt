androidx.annotation.Keep
com.google.android.gms.common.data.DataHolder
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer
androidx.window.layout.FoldingFeature
android.support.v4.media.AudioAttributesImplBaseParcelizer
io.flutter.embedding.engine.FlutterOverlaySurface
androidx.window.embedding.EmbeddingCompat$Companion
androidx.lifecycle.Lifecycling$1
com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver
androidx.window.embedding.SplitController$Companion
com.google.android.material.snackbar.SnackbarContentLayout
androidx.window.layout.WindowInfoTracker
com.dexterous.flutterlocalnotifications.models.MessageDetails
android.support.v4.media.RatingCompat
com.google.android.gms.common.api.internal.LifecycleCallback
com.dexterous.flutterlocalnotifications.RepeatInterval
androidx.window.layout.SidecarCompat$Companion
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency
com.google.android.gms.location.LocationResult
androidx.window.embedding.EmbeddingRule
com.google.android.material.button.MaterialButtonToggleGroup
androidx.window.embedding.EmbeddingInterfaceCompat
androidx.constraintlayout.widget.Guideline
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthRegistrar
com.google.android.material.bottomappbar.BottomAppBar$Behavior
android.support.v4.media.MediaMetadataCompat
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory
androidx.window.layout.EmptyDecorator
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
androidx.window.layout.WindowMetricsCalculatorDecorator
androidx.window.embedding.EmptyEmbeddingComponent
com.dexterous.flutterlocalnotifications.NotificationStyle
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
androidx.window.embedding.EmbeddingAdapter
com.google.android.gms.common.GooglePlayServicesManifestException
com.google.android.gms.maps.model.LatLng
androidx.window.embedding.EmbeddingTranslatingCallback
androidx.media.AudioAttributesImplBase
com.dexterous.flutterlocalnotifications.utils.BooleanUtils
androidx.versionedparcelable.CustomVersionedParcelable
androidx.window.layout.ExtensionWindowLayoutInfoBackend
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver
androidx.appcompat.view.menu.ListMenuItemView
com.google.android.gms.common.internal.ReflectedParcelable
io.flutter.plugins.firebase.core.FlutterFirebasePlugin
androidx.core.app.RemoteActionCompatParcelizer
android.support.v4.media.session.ParcelableVolumeInfo
co.paystack.flutterpaystack.AuthActivity
androidx.window.embedding.ActivityRule
androidx.window.layout.HardwareFoldingFeature$Companion
android.support.v4.media.MediaBrowserCompat$ItemReceiver
androidx.window.layout.WindowMetricsCalculatorCompat
androidx.window.layout.WindowMetricsCalculator$Companion
androidx.window.layout.SidecarCompat$FirstAttachAdapter
androidx.activity.ComponentActivity$3
com.google.firebase.provider.FirebaseInitProvider
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
com.google.android.gms.auth.api.signin.internal.SignInConfiguration
io.grpc.internal.PickFirstLoadBalancerProvider
io.flutter.plugins.urllauncher.WebViewActivity
androidx.window.embedding.ActivityFilter
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar
androidx.window.layout.FoldingFeature$OcclusionType
com.dexterous.flutterlocalnotifications.models.IconSource
androidx.constraintlayout.widget.Barrier
androidx.viewpager2.adapter.FragmentStateAdapter$2
androidx.transition.FragmentTransitionSupport
com.google.android.material.transformation.ExpandableTransformationBehavior
androidx.window.layout.SidecarWindowBackend$Companion
androidx.fragment.app.Fragment$2
androidx.window.layout.FoldingFeature$OcclusionType$Companion
com.google.firebase.messaging.FirebaseMessagingService
androidx.core.graphics.drawable.IconCompat
androidx.window.layout.SidecarCompat$DistinctElementCallback
androidx.window.layout.ActivityCompatHelperApi30
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver
com.google.android.material.internal.BaselineLayout
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver
androidx.savedstate.SavedStateRegistry$1
com.google.android.material.textfield.TextInputLayout
io.flutter.view.FlutterCallbackInformation
androidx.window.embedding.ExtensionEmbeddingBackend$Companion
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1
androidx.window.layout.SidecarWindowBackend
androidx.window.layout.WindowMetricsCalculator
io.flutter.plugins.firebase.messaging.FlutterFirebaseAppRegistrar
androidx.core.app.RemoteActionCompat
com.google.android.material.appbar.AppBarLayout$BaseBehavior
com.razorpay.RzpTokenReceiver
com.dexterous.flutterlocalnotifications.models.styles.StyleInformation
com.google.android.gms.location.LocationRequest
com.google.firebase.auth.internal.RecaptchaActivity
kotlinx.coroutines.internal.StackTraceRecoveryKt
androidx.window.layout.HardwareFoldingFeature
io.flutter.plugin.platform.SingleViewPresentation
com.google.firebase.FirebaseCommonRegistrar
com.google.android.gms.common.annotation.KeepName
androidx.appcompat.widget.SearchView
com.google.android.gms.auth.api.signin.RevocationBoundService
com.google.android.material.transformation.ExpandableBehavior
android.support.v4.media.session.MediaSessionCompat$Token
com.google.firebase.components.ComponentRegistrar
io.grpc.internal.JndiResourceResolverFactory
com.google.firebase.firestore.FirestoreRegistrar
androidx.window.R
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery
com.google.android.material.appbar.AppBarLayout$Behavior
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl
androidx.coordinatorlayout.widget.CoordinatorLayout
androidx.window.core.Version
com.google.android.material.transformation.FabTransformationBehavior
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction
androidx.media.AudioAttributesImplApi21
androidx.window.layout.DisplayCompatHelperApi17
io.grpc.util.SecretRoundRobinLoadBalancerProvider$Provider
androidx.appcompat.view.menu.ActionMenuItemView
com.dexterous.flutterlocalnotifications.ScheduledNotificationBootReceiver
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation
com.google.android.gms.common.api.internal.BasePendingResult
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior
androidx.window.embedding.SplitRule
androidx.window.layout.WindowMetrics
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider
kotlinx.coroutines.android.AndroidDispatcherFactory
com.dexterous.flutterlocalnotifications.models.BitmapSource
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl
androidx.window.embedding.SplitInfo
androidx.window.layout.HardwareFoldingFeature$Type
androidx.recyclerview.widget.LinearLayoutManager
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingReceiver
io.flutter.view.AccessibilityViewEmbedder
com.google.android.material.textview.MaterialTextView
io.flutter.embedding.engine.FlutterJNI
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1
androidx.window.embedding.SplitPairFilter
androidx.media.AudioAttributesCompat
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin
com.google.firebase.firestore.FirebaseFirestore
androidx.core.graphics.drawable.IconCompatParcelizer
com.jhatfat.MainActivity
com.dexterous.flutterlocalnotifications.models.DateTimeComponents
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingService
com.google.android.material.timepicker.ClockHandView
kotlin.internal.jdk7.JDK7PlatformImplementations
androidx.appcompat.widget.ActionBarContextView
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
androidx.lifecycle.DefaultLifecycleObserver
com.jhatfat.Application
androidx.appcompat.widget.ActivityChooserView$InnerLayout
com.google.android.material.chip.Chip
io.flutter.plugins.imagepicker.ImagePickerFileProvider
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException
android.support.v4.media.session.MediaSessionCompat$QueueItem
io.flutter.plugins.GeneratedPluginRegistrant
androidx.window.embedding.SplitController
android.support.v4.media.MediaBrowserCompat$MediaItem
androidx.appcompat.widget.DialogTitle
androidx.window.layout.SidecarAdapter$Companion
io.flutter.embedding.android.FlutterSplashView$SavedState
androidx.window.layout.SidecarAdapter
androidx.window.embedding.SplitRuleParser
com.google.firebase.installations.FirebaseInstallationsRegistrar
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1
com.google.android.material.internal.NavigationMenuItemView
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreRegistrar
com.google.android.material.timepicker.TimePickerView
kotlin.coroutines.jvm.internal.BaseContinuationImpl
androidx.window.layout.WindowInfoTrackerDecorator
androidx.window.layout.FoldingFeature$State$Companion
androidx.window.layout.WindowLayoutInfo
androidx.window.layout.DisplayFeature
com.dexterous.flutterlocalnotifications.models.PersonDetails
androidx.media.AudioAttributesImplApi26Parcelizer
androidx.core.widget.NestedScrollView
androidx.appcompat.widget.ContentFrameLayout
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback
com.google.android.material.transformation.FabTransformationSheetBehavior
android.support.v4.media.AudioAttributesImplApi26Parcelizer
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation
androidx.window.layout.SidecarCompat$TranslatingCallback
androidx.window.layout.WindowInfoTrackerImpl
androidx.window.embedding.MatcherUtils
com.google.android.material.internal.NavigationMenuView
androidx.lifecycle.ReflectiveGenericLifecycleObserver
com.dexterous.flutterlocalnotifications.models.Time
com.google.android.gms.common.util.DynamiteApi
com.google.android.material.theme.MaterialComponentsViewInflater
com.dexterous.flutterlocalnotifications.models.SoundSource
androidx.window.core.Bounds
androidx.window.embedding.EmbeddingBackend
android.support.v4.media.session.PlaybackStateCompat$CustomAction
androidx.viewpager2.adapter.FragmentStateAdapter$5
androidx.appcompat.widget.ActionMenuView
com.google.android.gms.common.api.GoogleApiActivity
androidx.appcompat.app.AlertController$RecycleListView
com.baseflow.geolocator.GeolocatorLocationService
androidx.lifecycle.LiveData$LifecycleBoundObserver
com.google.android.gms.auth.api.signin.GoogleSignInOptions
com.google.android.gms.maps.model.LatLngBounds
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService
androidx.media.AudioAttributesCompatParcelizer
androidx.browser.browseractions.BrowserActionsFallbackMenuView
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation
androidx.appcompat.widget.Toolbar
com.google.android.material.datepicker.MaterialCalendarGridView
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3
androidx.appcompat.view.menu.ExpandedMenuView
android.support.v4.media.MediaDescriptionCompat
com.google.android.material.bottomsheet.BottomSheetBehavior
kotlin.internal.jdk8.JDK8PlatformImplementations
androidx.window.layout.ActivityCompatHelperApi24
androidx.savedstate.Recreator
androidx.window.embedding.SplitPlaceholderRule
com.google.android.material.chip.ChipGroup
com.google.android.gms.common.api.Scope
com.google.android.material.button.MaterialButton
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry
com.google.firebase.messaging.FirebaseMessaging
kotlinx.coroutines.android.AndroidExceptionPreHandler
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails
com.google.android.material.internal.CheckableImageButton
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior
android.support.v4.graphics.drawable.IconCompatParcelizer
androidx.window.embedding.SplitRule$Api30Impl
androidx.window.embedding.ExtensionEmbeddingBackend
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation
android.support.v4.media.AudioAttributesImplApi21Parcelizer
com.google.android.material.appbar.MaterialToolbar
androidx.constraintlayout.widget.ConstraintLayout
androidx.lifecycle.CompositeGeneratedAdaptersObserver
androidx.appcompat.widget.FitWindowsFrameLayout
io.grpc.okhttp.OkHttpChannelProvider
androidx.appcompat.widget.ViewStubCompat
androidx.window.R$id
com.google.firebase.auth.FirebaseAuth
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior
androidx.window.java.R
androidx.window.layout.FoldingFeature$State
androidx.window.core.Version$Companion
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1
androidx.window.layout.DisplayCompatHelperApi28
androidx.window.layout.HardwareFoldingFeature$Type$Companion
com.google.android.material.timepicker.ClockFaceView
androidx.appcompat.widget.ButtonBarLayout
androidx.window.layout.FoldingFeature$Orientation$Companion
androidx.window.layout.ExtensionInterfaceCompat
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
com.google.firebase.iid.FirebaseInstanceIdReceiver
androidx.window.embedding.SplitPairRule
com.google.android.gms.dynamite.descriptors.com.google.firebase.auth.ModuleDescriptor
com.google.android.material.timepicker.ChipTextInputComboView
androidx.lifecycle.FullLifecycleObserverAdapter
androidx.core.app.CoreComponentFactory
com.google.android.gms.common.GooglePlayServicesIncorrectManifestValueException
androidx.appcompat.widget.SearchView$SearchAutoComplete
com.google.firebase.messaging.FirebaseMessagingRegistrar
androidx.window.layout.WindowInfoTrackerImpl$Companion
androidx.window.R$styleable
androidx.window.embedding.EmbeddingCompat
androidx.window.layout.SidecarCompat
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface
android.support.v4.media.session.PlaybackStateCompat
com.google.firebase.components.ComponentDiscoveryService
androidx.recyclerview.widget.StaggeredGridLayoutManager
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver
com.google.android.material.transformation.FabTransformationScrimBehavior
androidx.media.AudioAttributesImplApi21Parcelizer
com.google.android.material.textfield.TextInputEditText
androidx.window.core.ExperimentalWindowApi
com.google.android.gms.auth.api.signin.SignInAccount
com.google.android.material.behavior.SwipeDismissBehavior
androidx.window.layout.WindowBackend
androidx.window.layout.FoldingFeature$Orientation
com.razorpay.CircularProgressView
com.google.android.gms.auth.api.signin.internal.SignInHubActivity
androidx.window.embedding.SplitRule$LayoutDir
com.razorpay.CheckoutActivity
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter
com.google.firebase.datatransport.TransportRegistrar
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation
io.grpc.internal.DnsNameResolverProvider
com.google.firebase.auth.internal.GenericIdpActivity
com.google.android.gms.location.LocationAvailability
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior
androidx.window.R$attr
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
com.google.android.material.behavior.HideBottomViewOnScrollBehavior
kotlinx.coroutines.CoroutineExceptionHandler
com.google.android.gms.auth.api.signin.GoogleSignInAccount
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver
androidx.activity.ImmLeaksCleaner
com.dexterous.flutterlocalnotifications.utils.StringUtils
androidx.media.AudioAttributesImpl
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1
androidx.window.embedding.ActivityStack
androidx.appcompat.widget.ActionBarOverlayLayout
com.google.android.datatransport.cct.CctBackendFactory
androidx.appcompat.widget.ActionBarContainer
androidx.lifecycle.SingleGeneratedAdapterObserver
kotlinx.coroutines.internal.MainDispatcherFactory
com.google.android.material.snackbar.Snackbar$SnackbarLayout
androidx.recyclerview.widget.GridLayoutManager
com.dexterous.flutterlocalnotifications.models.NotificationDetails
com.google.android.gms.maps.model.CameraPosition
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
android.support.v4.app.RemoteActionCompatParcelizer
androidx.media.AudioAttributesImplBaseParcelizer
androidx.versionedparcelable.ParcelImpl
androidx.appcompat.widget.AlertDialogLayout
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper
androidx.window.core.Version$bigInteger$2
com.lyokone.location.FlutterLocationService
com.google.firebase.auth.FirebaseAuthRegistrar
androidx.appcompat.widget.FitWindowsLinearLayout
com.google.android.gms.common.api.Status
androidx.window.layout.WindowInfoTracker$Companion
androidx.recyclerview.widget.RecyclerView
androidx.activity.ComponentActivity$2
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails
android.support.v4.media.AudioAttributesCompatParcelizer
androidx.media.AudioAttributesImplApi26
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
com.google.android.gms.maps.GoogleMapOptions
io.flutter.plugins.googlemaps.GoogleMapController
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1
com.google.firestore.bundle.BundledQuery: java.lang.Object queryType_
com.google.android.gms.auth.api.signin.internal.SignInConfiguration: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.Value: int ARRAY_VALUE_FIELD_NUMBER
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent placeholderIntent
androidx.window.embedding.ActivityStack: java.util.List activities
com.google.android.gms.internal.firebase-auth-api.zzly: com.google.android.gms.internal.firebase-auth-api.zzmb zze
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList splitChangeCallbacks
androidx.window.layout.SidecarAdapter: androidx.window.layout.SidecarAdapter$Companion Companion
com.google.firestore.v1.DocumentTransform$FieldTransform: int REMOVE_ALL_FROM_ARRAY_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource FlutterBitmapAsset
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_ALPHA
com.google.android.gms.common.internal.zat: android.os.Parcelable$Creator CREATOR
androidx.window.R$styleable: int SplitPairFilter_primaryActivityName
com.google.firestore.v1.WriteRequest: int WRITES_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.util.ArrayList lines
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
com.google.firestore.v1.StructuredQuery$CollectionSelector: com.google.protobuf.Parser PARSER
kotlin.coroutines.jvm.internal.SuspendLambda: int arity
com.google.firestore.v1.Target: int QUERY_FIELD_NUMBER
com.google.firestore.v1.TransactionOptions$ReadWrite: com.google.firestore.v1.TransactionOptions$ReadWrite DEFAULT_INSTANCE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ICON
androidx.window.layout.SidecarWindowBackend: boolean DEBUG
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String NUMBER
com.google.android.gms.internal.firebase-auth-api.zzjb: com.google.android.gms.internal.firebase-auth-api.zzjh zze
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzmb: com.google.android.gms.internal.firebase-auth-api.zzmb zzb
kotlin.jvm.internal.FunctionReference: int flags
com.google.firestore.v1.WriteResponse: java.lang.String streamId_
com.google.android.gms.internal.firebase-auth-api.zzach: int zzd
com.google.rpc.Status: int DETAILS_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction CreateIfNotExists
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PAYLOAD
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock globalLock
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String NAME
com.google.firestore.v1.StructuredQuery: int OFFSET_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_BLUE
com.google.firebase.firestore.proto.MaybeDocument: int DOCUMENT_FIELD_NUMBER
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext _context
com.google.firestore.v1.StructuredQuery$UnaryFilter: int OP_FIELD_NUMBER
androidx.window.layout.HardwareFoldingFeature: androidx.window.core.Bounds featureBounds
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean enableLights
com.google.firestore.v1.Write: com.google.firestore.v1.Precondition currentDocument_
com.google.android.gms.internal.firebase-auth-api.zzrc: android.os.Parcelable$Creator CREATOR
androidx.window.layout.FoldingFeature$State: java.lang.String description
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer callback
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BOT
com.google.firestore.admin.v1.Index$IndexField: com.google.protobuf.Parser PARSER
com.google.android.gms.internal.firebase-auth-api.zzqg: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long calledAt
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat windowExtension
com.google.android.gms.maps.model.VisibleRegion: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TICKER
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter sidecarAdapter
com.google.firestore.v1.Write: int VERIFY_FIELD_NUMBER
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
com.google.firestore.v1.StructuredQuery$FieldFilter: int FIELD_FIELD_NUMBER
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack primaryActivityStack
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: java.util.Map registeredPlugins
com.google.android.gms.internal.firebase-auth-api.zzkr: com.google.android.gms.internal.firebase-auth-api.zzkr zzb
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
com.google.firestore.v1.ListenResponse: int DOCUMENT_CHANGE_FIELD_NUMBER
com.google.firestore.v1.Value: int TIMESTAMP_VALUE_FIELD_NUMBER
com.google.android.gms.location.LocationSettingsStates: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ENABLE_LIGHTS
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
androidx.window.R$styleable: int SplitPlaceholderRule_splitRatio
com.dexterous.flutterlocalnotifications.models.Time: java.lang.String SECOND
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String IMPORTANT
com.google.android.gms.internal.firebase-auth-api.zzjb: com.google.android.gms.internal.firebase-auth-api.zzjb zzb
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.styles.StyleInformation styleInformation
com.google.firestore.v1.MapValue: int FIELDS_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_ACTIVE_NOTIFICATION_MESSAGING_STYLE_METHOD
com.google.android.gms.internal.firebase-auth-api.zzlc: com.google.android.gms.internal.firebase-auth-api.zzkw zzf
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: androidx.window.layout.WindowLayoutInfo lastKnownValue
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_CONTENT
androidx.window.R$attr: int alwaysExpand
com.google.firestore.v1.StructuredQuery$FieldFilter: int VALUE_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzmg: com.google.android.gms.internal.firebase-auth-api.zzmg zzb
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinSmallestWidth
com.google.firebase.firestore.proto.WriteBatch: com.google.protobuf.Timestamp localWriteTime_
com.google.firestore.v1.ListenRequest: int REMOVE_TARGET_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zziy: com.google.android.gms.internal.firebase-auth-api.zzlv zzg
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.String typeFieldName
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation completion
com.google.android.gms.maps.model.MapStyleOptions: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String id
com.google.android.gms.internal.firebase-auth-api.zzje: com.google.android.gms.internal.firebase-auth-api.zzabe zzg
com.google.firestore.v1.Write: com.google.firestore.v1.Write DEFAULT_INSTANCE
com.google.android.gms.internal.firebase-auth-api.zzsc: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.BatchGetDocumentsRequest: int consistencySelectorCase_
com.google.firebase.auth.GithubAuthCredential: android.os.Parcelable$Creator CREATOR
androidx.window.R$attr: int secondaryActivityName
com.google.firestore.bundle.BundledQuery: int queryTypeCase_
com.google.rpc.Status: com.google.rpc.Status DEFAULT_INSTANCE
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource[] $VALUES
com.google.rpc.Status: com.google.protobuf.Parser PARSER
com.google.android.gms.internal.firebase-auth-api.zzmp: int zze
com.google.android.gms.internal.firebase-auth-api.zzkc: int zze
com.google.android.gms.internal.firebase-auth-api.zzmb: int zzf
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityName
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.RepeatInterval repeatInterval
com.google.android.material.textfield.TextInputLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.google.type.LatLng: com.google.type.LatLng DEFAULT_INSTANCE
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval EveryMinute
com.google.android.gms.internal.firebase-auth-api.zzmp: com.google.android.gms.internal.firebase-auth-api.zzabe zzg
androidx.window.R$attr: int primaryActivityName
com.google.firestore.v1.Value: int BYTES_VALUE_FIELD_NUMBER
com.google.firebase.auth.internal.zzp: android.os.Parcelable$Creator CREATOR
com.google.android.gms.auth.api.signin.GoogleSignInOptions: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zznl: java.lang.String zze
com.google.firestore.v1.DocumentRemove: com.google.protobuf.Parser PARSER
com.google.firestore.v1.StructuredQuery: int SELECT_FIELD_NUMBER
com.google.firestore.v1.DocumentMask: com.google.protobuf.Parser PARSER
com.google.android.gms.internal.firebase-auth-api.zzll: com.google.android.gms.internal.firebase-auth-api.zzabe zzg
io.flutter.plugins.GeneratedPluginRegistrant: java.lang.String TAG
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PLAY_SOUND
androidx.window.R$styleable: int SplitPairRule_clearTop
com.google.android.gms.internal.firebase-auth-api.zzip: com.google.android.gms.internal.firebase-auth-api.zzabe zzf
com.google.protobuf.GeneratedMessageLite: int memoizedSerializedSize
com.google.firebase.firestore.proto.Target: com.google.protobuf.Parser PARSER
com.google.firestore.admin.v1.Index: com.google.protobuf.Parser PARSER
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String USES_CHRONOMETER
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: int label
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle BigPicture
com.google.android.gms.location.LocationResult: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ticker
com.google.firestore.v1.StructuredQuery$CollectionSelector: com.google.firestore.v1.StructuredQuery$CollectionSelector DEFAULT_INSTANCE
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
kotlin.jvm.internal.CallableReference: java.lang.String name
com.google.firestore.v1.WriteRequest: int LABELS_FIELD_NUMBER
com.google.rpc.Status: int MESSAGE_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.String text
com.google.firestore.v1.StructuredQuery$Filter: java.lang.Object filterType_
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean attached
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String DAY
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents DayOfWeekAndTime
com.google.android.gms.internal.firebase-auth-api.zzjt: int zze
androidx.window.R$id: int ltr
com.google.android.gms.internal.firebase-auth-api.zzjt: com.google.android.gms.internal.firebase-auth-api.zzjt zzb
com.google.firestore.v1.StructuredQuery: com.google.protobuf.Int32Value limit_
com.google.firestore.v1.DocumentDelete: int READ_TIME_FIELD_NUMBER
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String description
com.google.android.gms.internal.firebase-auth-api.zzse: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.TargetChange: com.google.protobuf.Internal$IntList targetIds_
com.google.android.gms.internal.firebase-auth-api.zzoj: int zze
com.google.android.gms.internal.location.zzh: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.WriteResponse: com.google.protobuf.Timestamp commitTime_
com.google.firestore.v1.CommitRequest: com.google.protobuf.Internal$ProtobufList writes_
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.DateTimeComponents matchDateTimeComponents
com.google.firestore.v1.StructuredQuery: com.google.firestore.v1.Cursor startAt_
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SELECT_NOTIFICATION
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ALLOW_WHILE_IDLE
com.google.android.gms.internal.firebase-auth-api.zznl: int zzf
com.google.firestore.v1.DocumentTransform$FieldTransform: int MAXIMUM_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zziy: int zze
com.google.firebase.firestore.proto.NoDocument: int READ_TIME_FIELD_NUMBER
com.google.firestore.v1.BatchGetDocumentsRequest: int MASK_FIELD_NUMBER
com.google.firestore.admin.v1.Index: int FIELDS_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.Time: java.lang.Integer minute
com.google.android.gms.location.LocationSettingsRequest: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: long[] vibrationPattern
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$1
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String WHEN
com.google.type.LatLng: com.google.protobuf.Parser PARSER
com.google.firestore.v1.StructuredQuery$Order: com.google.firestore.v1.StructuredQuery$Order DEFAULT_INSTANCE
com.google.firestore.v1.WriteRequest: com.google.protobuf.Internal$ProtobufList writes_
com.google.firestore.v1.TransactionOptions$ReadOnly: java.lang.Object consistencySelector_
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SOUND_SOURCE
com.google.firestore.v1.DocumentRemove: int READ_TIME_FIELD_NUMBER
com.google.firestore.v1.DocumentTransform: java.lang.String document_
kotlinx.coroutines.CommonPool: java.util.concurrent.Executor pool
com.google.firebase.auth.zze: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.Target$DocumentsTarget: com.google.protobuf.Internal$ProtobufList documents_
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction Update
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key key
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.Boolean htmlFormatContentTitle
com.google.firestore.v1.ArrayValue: int VALUES_FIELD_NUMBER
androidx.window.embedding.SplitController: java.util.Set staticSplitRules
kotlinx.coroutines.CompletedExceptionally: int _handled
com.google.firestore.v1.DocumentRemove: int REMOVED_TARGET_IDS_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zznl: int zzh
com.google.android.gms.internal.firebase-auth-api.zzqy: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.BatchGetDocumentsRequest: java.lang.Object consistencySelector_
com.google.android.gms.internal.firebase-auth-api.zzmj: int zzf
com.google.android.gms.internal.firebase-auth-api.zzjn: com.google.android.gms.internal.firebase-auth-api.zzabe zzg
com.google.firestore.v1.WriteResponse: int STREAM_TOKEN_FIELD_NUMBER
com.google.android.material.datepicker.CalendarConstraints: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.Value: int GEO_POINT_VALUE_FIELD_NUMBER
com.google.firestore.v1.WriteRequest: int DATABASE_FIELD_NUMBER
com.google.firebase.auth.PhoneMultiFactorInfo: android.os.Parcelable$Creator CREATOR
androidx.window.R$attr: int splitMinWidth
com.google.firestore.v1.ExistenceFilter: int count_
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_LED_DETAILS_ERROR_CODE
com.google.firestore.v1.DocumentDelete: java.lang.String document_
com.google.protobuf.GeneratedMessageLite: java.util.Map defaultInstanceMap
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String description
androidx.customview.widget.ExploreByTouchHelper: int mHoveredVirtualViewId
androidx.window.layout.SidecarCompat$TranslatingCallback: androidx.window.layout.SidecarCompat this$0
com.google.firestore.v1.DocumentMask: com.google.protobuf.Internal$ProtobufList fieldPaths_
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type$Companion Companion
com.google.android.gms.dynamite.descriptors.com.google.firebase.auth.ModuleDescriptor: int MODULE_VERSION
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityAction
com.google.android.gms.internal.firebase-auth-api.zzoj: com.google.android.gms.internal.firebase-auth-api.zzoj zzb
androidx.window.embedding.SplitPairFilter: java.lang.String secondaryActivityIntentAction
androidx.window.R$styleable: int SplitPairRule_finishPrimaryWithSecondary
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean allowWhileIdle
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend globalInstance
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation HORIZONTAL
com.google.firestore.v1.Write: int TRANSFORM_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery$FieldReference: com.google.firestore.v1.StructuredQuery$FieldReference DEFAULT_INSTANCE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer ledColor
androidx.window.R$styleable: int ActivityRule_alwaysExpand
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
com.google.firestore.v1.Value: int BOOLEAN_VALUE_FIELD_NUMBER
com.google.firestore.v1.ExistenceFilter: int COUNT_FIELD_NUMBER
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
com.google.firestore.v1.DocumentTransform$FieldTransform: java.lang.String fieldPath_
com.google.firestore.v1.ExistenceFilter: int targetId_
com.google.firestore.admin.v1.Index$IndexField: int FIELD_PATH_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzzn: android.os.Parcelable$Creator CREATOR
android.support.v4.media.session.PlaybackStateCompat: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer maxProgress
com.dexterous.flutterlocalnotifications.models.SoundSource: com.dexterous.flutterlocalnotifications.models.SoundSource Uri
androidx.window.R$styleable: int SplitPairRule_splitLayoutDirection
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String description
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TIMEOUT_AFTER
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzlc: com.google.android.gms.internal.firebase-auth-api.zzlc zzb
com.google.firestore.v1.Cursor: boolean before_
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
com.google.android.material.internal.CheckableImageButton$SavedState: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.StructuredQuery$Projection: com.google.firestore.v1.StructuredQuery$Projection DEFAULT_INSTANCE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String shortcutId
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SCHEDULED_DATE_TIME
androidx.window.R$styleable: int SplitPairRule_finishSecondaryWithPrimary
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long millisecondsSinceEpoch
com.google.android.gms.internal.firebase-auth-api.zzyr: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.DocumentRemove: com.google.firestore.v1.DocumentRemove DEFAULT_INSTANCE
com.google.firestore.v1.StructuredQuery$Projection: com.google.protobuf.Internal$ProtobufList fields_
com.google.android.gms.internal.firebase-auth-api.zznh: com.google.android.gms.internal.firebase-auth-api.zzacm zzf
com.google.android.gms.internal.firebase-auth-api.zzli: int zze
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TAG
com.google.android.gms.internal.firebase-auth-api.zzjk: com.google.android.gms.internal.firebase-auth-api.zzjk zzb
com.google.protobuf.Any: java.lang.String typeUrl_
kotlin.jvm.internal.FunctionReference: int arity
com.google.firestore.v1.Write: int CURRENT_DOCUMENT_FIELD_NUMBER
com.google.firebase.firestore.proto.WriteBatch: com.google.protobuf.Parser PARSER
com.google.firebase.auth.GoogleAuthCredential: android.os.Parcelable$Creator CREATOR
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
androidx.window.R$attr: int secondaryActivityAction
com.google.android.gms.auth.api.signin.SignInAccount: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.DocumentDelete: int DOCUMENT_FIELD_NUMBER
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingAdapter adapter
com.google.firebase.firestore.proto.MaybeDocument: int documentTypeCase_
com.google.firestore.v1.ExistenceFilter: com.google.protobuf.Parser PARSER
kotlinx.coroutines.DispatchedCoroutine: int _decision
com.google.firestore.v1.Target: com.google.firestore.v1.Target DEFAULT_INSTANCE
com.google.android.gms.internal.firebase-auth-api.zzjw: int zze
com.google.firebase.firestore.proto.WriteBatch: int BATCH_ID_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DELETE_NOTIFICATION_CHANNEL_METHOD
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
com.google.android.gms.internal.firebase-auth-api.zzkf: com.google.android.gms.internal.firebase-auth-api.zzkf zzb
com.google.android.gms.internal.firebase-auth-api.zzrg: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_ACTIVE_NOTIFICATIONS_ERROR_MESSAGE
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction[] $VALUES
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String body
com.google.firestore.v1.TransactionOptions: java.lang.Object mode_
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.content.Intent launchIntent
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DRAWABLE
com.google.firebase.firestore.proto.WriteBatch: int LOCAL_WRITE_TIME_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.PersonDetails: com.dexterous.flutterlocalnotifications.models.IconSource iconBitmapSource
com.google.android.gms.internal.firebase-auth-api.zzach: com.google.android.gms.internal.firebase-auth-api.zzaeq zzc
com.google.firestore.v1.DocumentRemove: com.google.protobuf.Internal$IntList removedTargetIds_
com.google.firestore.v1.BatchGetDocumentsResponse: com.google.protobuf.Timestamp readTime_
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval[] $VALUES
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
com.google.firestore.v1.StructuredQuery$CollectionSelector: int ALL_DESCENDANTS_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String payload
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String FULL_SCREEN_INTENT
com.google.android.gms.internal.firebase-auth-api.zznm: com.google.android.gms.internal.firebase-auth-api.zzacm zzf
com.google.firestore.v1.Write: int UPDATE_MASK_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String ENABLE_VIBRATION
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.models.SoundSource soundSource
com.google.firestore.v1.ListenRequest: int targetChangeCase_
androidx.window.R$attr: int placeholderActivityName
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State$Companion Companion
com.google.firestore.admin.v1.Index$IndexField: com.google.firestore.admin.v1.Index$IndexField DEFAULT_INSTANCE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_SUMMARY_TEXT
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface sidecar
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_RED
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
com.google.android.gms.internal.firebase-auth-api.zzll: int zze
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency[] $VALUES
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean indeterminate
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.concurrent.Executor executor
com.google.firestore.v1.StructuredQuery$Filter: com.google.protobuf.Parser PARSER
com.google.firebase.firestore.proto.Target: int targetTypeCase_
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
com.google.firestore.v1.Value: int REFERENCE_VALUE_FIELD_NUMBER
androidx.window.embedding.MatcherUtils: androidx.window.embedding.MatcherUtils INSTANCE
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: com.dexterous.flutterlocalnotifications.models.BitmapSource bigPictureBitmapSource
com.google.firestore.v1.DocumentChange: com.google.protobuf.Parser PARSER
androidx.window.R$styleable: int[] SplitPairRule
com.google.firestore.v1.StructuredQuery$UnaryFilter: java.lang.Object operandType_
com.google.firestore.v1.Target: java.lang.Object resumeType_
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SCHEDULE_METHOD
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: java.lang.Boolean groupConversation
com.google.firestore.v1.WriteRequest: int STREAM_TOKEN_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zznv: com.google.android.gms.internal.firebase-auth-api.zzny zzf
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.Time: java.lang.Integer hour
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SHOW_DAILY_AT_TIME_METHOD
com.google.firebase.firestore.proto.UnknownDocument: com.google.firebase.firestore.proto.UnknownDocument DEFAULT_INSTANCE
androidx.transition.ChangeBounds$7: androidx.transition.ChangeBounds$ViewBounds mViewBounds
android.support.v4.media.MediaBrowserCompat$MediaItem: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String groupId
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.internal.zas mResultGuardian
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String PLAY_SOUND
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
com.google.android.gms.internal.firebase-auth-api.zznc: java.lang.String zze
com.google.firebase.firestore.proto.Target: int targetId_
com.google.android.gms.internal.firebase-auth-api.zzre: android.os.Parcelable$Creator CREATOR
androidx.window.R$attr: int splitMinSmallestWidth
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String name
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: int NOTIFICATION_PERMISSION_REQUEST_CODE
androidx.window.embedding.ExtensionEmbeddingBackend: java.lang.String TAG
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_BIG_PICTURE_ERROR_CODE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction channelAction
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.google.firebase.firestore.proto.Target: int TARGET_ID_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery$Filter: int filterTypeCase_
androidx.window.layout.SidecarCompat: java.util.Map windowListenerRegisteredContexts
androidx.window.layout.WindowInfoTracker$Companion: boolean DEBUG
com.google.android.gms.internal.firebase-auth-api.zzip: com.google.android.gms.internal.firebase-auth-api.zzip zzb
com.google.firestore.v1.Target$DocumentsTarget: int DOCUMENTS_FIELD_NUMBER
com.google.firestore.v1.Precondition: com.google.firestore.v1.Precondition DEFAULT_INSTANCE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_BLUE
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.concurrent.locks.ReentrantLock extensionWindowBackendLock
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.os.Parcelable$Creator CREATOR
com.google.protobuf.Int32Value: com.google.protobuf.Int32Value DEFAULT_INSTANCE
com.google.firestore.v1.StructuredQuery$UnaryFilter: com.google.firestore.v1.StructuredQuery$UnaryFilter DEFAULT_INSTANCE
com.google.android.gms.common.internal.MethodInvocation: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String scheduledDateTime
com.google.firebase.firestore.proto.MaybeDocument: com.google.firebase.firestore.proto.MaybeDocument DEFAULT_INSTANCE
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.String summaryText
com.google.firestore.v1.Write: int UPDATE_FIELD_NUMBER
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
com.google.android.gms.cloudmessaging.CloudMessage: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_BLUE
com.google.firestore.v1.TargetChange: int targetIdsMemoizedSerializedSize
com.google.firebase.firestore.proto.MaybeDocument: int HAS_COMMITTED_MUTATIONS_FIELD_NUMBER
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: android.app.Activity $activity
com.google.android.gms.maps.model.Tile: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
com.google.firestore.v1.Cursor: com.google.protobuf.Internal$ProtobufList values_
com.google.firestore.admin.v1.Index: int QUERY_SCOPE_FIELD_NUMBER
com.google.firestore.admin.v1.Index: java.lang.String name_
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type FOLD
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SHOW_PROGRESS
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String STYLE
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
com.google.firestore.v1.Precondition: int UPDATE_TIME_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean playSound
com.google.android.gms.internal.firebase-auth-api.zznp: int zze
com.google.firebase.firestore.proto.UnknownDocument: int VERSION_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzkw: com.google.android.gms.internal.firebase-auth-api.zzmz zze
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer progress
com.google.firestore.v1.TransactionOptions: int READ_WRITE_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzrw: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzsa: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.DefaultExecutor: int debugStatus
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.concurrent.locks.ReentrantLock lock
com.google.android.gms.internal.location.zzj: android.os.Parcelable$Creator CREATOR
androidx.window.core.Version: androidx.window.core.Version$Companion Companion
com.google.android.gms.signin.internal.zai: android.os.Parcelable$Creator CREATOR
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type type
com.google.firestore.v1.Cursor: com.google.firestore.v1.Cursor DEFAULT_INSTANCE
com.google.firestore.v1.Cursor: int BEFORE_FIELD_NUMBER
com.google.protobuf.Timestamp: int SECONDS_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzlf: com.google.android.gms.internal.firebase-auth-api.zzlf zzb
com.google.android.gms.internal.firebase-auth-api.zzje: int zze
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.concurrent.locks.ReentrantLock lock
com.google.firestore.v1.DocumentTransform: int FIELD_TRANSFORMS_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery$Filter: int FIELD_FILTER_FIELD_NUMBER
com.google.firebase.firestore.proto.NoDocument: com.google.firebase.firestore.proto.NoDocument DEFAULT_INSTANCE
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$0
com.google.android.gms.internal.firebase-auth-api.zzkl: int zze
com.google.firestore.v1.DocumentTransform: int DOCUMENT_FIELD_NUMBER
com.google.android.gms.common.internal.zzj: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.ExistenceFilter: com.google.firestore.v1.ExistenceFilter DEFAULT_INSTANCE
androidx.window.embedding.ActivityRule: java.util.Set filters
androidx.window.core.Version: androidx.window.core.Version VERSION_1_0
com.google.firestore.v1.Target$QueryTarget: com.google.protobuf.Parser PARSER
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity activity
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_ID
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.String dataUri
com.google.android.gms.internal.firebase-auth-api.zzkf: int zzf
androidx.window.R$attr: int clearTop
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Integer importance
com.google.android.gms.internal.firebase-auth-api.zzlv: com.google.android.gms.internal.firebase-auth-api.zzabe zzg
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.util.Map subtypeToLabel
io.flutter.embedding.engine.FlutterJNI: java.util.concurrent.locks.ReentrantReadWriteLock shellHolderLock
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String icon
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SHARED_PREFERENCES_KEY
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ENABLE_VIBRATION
com.google.android.gms.location.LocationAvailability: android.os.Parcelable$Creator CREATOR
androidx.window.layout.SidecarWindowBackend: java.lang.String TAG
com.google.firestore.v1.CommitRequest: com.google.firestore.v1.CommitRequest DEFAULT_INSTANCE
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable reflected
androidx.window.embedding.SplitPairRule: boolean finishPrimaryWithSecondary
com.google.firestore.v1.CommitResponse: com.google.protobuf.Timestamp commitTime_
com.google.firestore.v1.DocumentTransform$FieldTransform: int INCREMENT_FIELD_NUMBER
com.google.android.gms.location.zzw: android.os.Parcelable$Creator CREATOR
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowMetricsCalculator windowMetricsCalculator
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.String summaryText
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval Hourly
com.google.android.gms.internal.firebase-auth-api.zzns: com.google.android.gms.internal.firebase-auth-api.zzns zzb
androidx.window.layout.EmptyDecorator: androidx.window.layout.EmptyDecorator INSTANCE
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean showBadge
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.ActivityStack: boolean isEmpty
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BIG_PICTURE
com.google.firestore.v1.StructuredQuery$FieldFilter: com.google.firestore.v1.Value value_
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer callback
androidx.window.layout.ActivityCompatHelperApi30: androidx.window.layout.ActivityCompatHelperApi30 INSTANCE
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
com.google.android.gms.internal.firebase-auth-api.zzmm: com.google.android.gms.internal.firebase-auth-api.zzmp zzf
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
androidx.window.R$styleable: int SplitPairRule_splitMinWidth
kotlinx.coroutines.JobSupport: java.lang.Object _state
com.google.firestore.v1.WriteRequest: java.lang.String streamId_
com.google.android.gms.internal.firebase-auth-api.zzqk: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzqw: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zziy: com.google.android.gms.internal.firebase-auth-api.zziy zzb
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String AUTO_CANCEL
androidx.window.core.Version: int minor
com.google.android.gms.internal.firebase-auth-api.zzmm: int zze
com.google.android.gms.location.LocationSettingsResult: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.DocumentTransform$FieldTransform: int MINIMUM_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_ALPHA
com.google.firestore.v1.StructuredQuery$Order: com.google.protobuf.Parser PARSER
com.google.android.gms.internal.firebase-auth-api.zzqi: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.CommitRequest: com.google.protobuf.Parser PARSER
com.google.firestore.v1.MapValue: com.google.protobuf.MapFieldLite fields_
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: com.dexterous.flutterlocalnotifications.models.BitmapSource largeIconBitmapSource
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String name
com.google.firestore.v1.TransactionOptions$ReadOnly: com.google.firestore.v1.TransactionOptions$ReadOnly DEFAULT_INSTANCE
com.google.firestore.v1.Target$QueryTarget: com.google.firestore.v1.Target$QueryTarget DEFAULT_INSTANCE
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList windowLayoutChangeCallbacks
com.google.android.gms.internal.firebase-auth-api.zzza: android.os.Parcelable$Creator CREATOR
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarInterface$SidecarCallback callbackInterface
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: java.lang.String conversationTitle
com.google.firestore.v1.CommitRequest: int WRITES_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean usesChronometer
kotlinx.coroutines.scheduling.LimitingDispatcher: int inFlightTasks
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource[] $VALUES
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.os.Parcelable$Creator CREATOR
com.google.android.gms.auth.api.signin.internal.GoogleSignInOptionsExtensionParcelable: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.String contentTitle
com.google.firebase.firestore.proto.Target: int LAST_LISTEN_SEQUENCE_NUMBER_FIELD_NUMBER
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: android.app.Activity activity
com.google.firestore.v1.StructuredQuery$CompositeFilter: com.google.protobuf.Parser PARSER
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String AUDIO_ATTRIBUTES_USAGE
com.google.android.gms.internal.firebase-auth-api.zzjq: com.google.android.gms.internal.firebase-auth-api.zzjq zzb
com.google.android.gms.internal.firebase-auth-api.zzog: int zze
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource ByteArray
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String REQUEST_PERMISSION_METHOD
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.util.Map labelToSubtype
com.google.firestore.v1.Target: com.google.protobuf.Parser PARSER
com.google.android.gms.internal.firebase-auth-api.zzkl: com.google.android.gms.internal.firebase-auth-api.zzkl zzb
com.google.firestore.v1.TransactionOptions$ReadWrite: com.google.protobuf.Parser PARSER
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
com.google.android.gms.internal.firebase-auth-api.zzmj: com.google.android.gms.internal.firebase-auth-api.zzmj zzb
com.google.firebase.firestore.proto.Target: com.google.firebase.firestore.proto.Target DEFAULT_INSTANCE
com.google.firebase.firestore.proto.WriteBatch: com.google.protobuf.Internal$ProtobufList writes_
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CONVERSATION_TITLE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MESSAGES
com.google.firestore.v1.CommitResponse: com.google.protobuf.Parser PARSER
com.google.android.gms.internal.firebase-auth-api.zzmz: java.lang.String zze
com.google.android.gms.internal.firebase-auth-api.zzje: com.google.android.gms.internal.firebase-auth-api.zzjk zzf
com.google.firestore.v1.ListenResponse: java.lang.Object responseType_
com.dexterous.flutterlocalnotifications.models.Time: java.lang.Integer second
com.google.firestore.v1.StructuredQuery$UnaryFilter: int FIELD_FIELD_NUMBER
android.support.v4.media.session.MediaSessionCompat$Token: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzjh: com.google.android.gms.internal.firebase-auth-api.zzjk zze
com.google.firebase.firestore.proto.WriteBatch: com.google.protobuf.Internal$ProtobufList baseWrites_
com.google.firestore.v1.BatchGetDocumentsRequest: int READ_TIME_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzmz: com.google.android.gms.internal.firebase-auth-api.zzmz zzb
com.google.android.gms.internal.firebase-auth-api.zzll: com.google.android.gms.internal.firebase-auth-api.zzll zzb
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_ICON_ERROR_CODE
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.Long timestamp
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.concurrent.locks.ReentrantLock lock
com.google.firebase.auth.UserProfileChangeRequest: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.BatchGetDocumentsRequest: com.google.protobuf.Internal$ProtobufList documents_
com.google.firestore.v1.StructuredQuery: com.google.protobuf.Internal$ProtobufList from_
com.google.android.gms.internal.location.zzaa: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.String name
com.google.android.gms.internal.firebase-auth-api.zznl: int zzg
com.google.type.LatLng: int LONGITUDE_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery$FieldFilter: com.google.firestore.v1.StructuredQuery$FieldFilter DEFAULT_INSTANCE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_LARGE_ICON_ERROR_CODE
com.google.firestore.v1.StructuredQuery$Filter: com.google.firestore.v1.StructuredQuery$Filter DEFAULT_INSTANCE
com.google.firestore.v1.Target$QueryTarget: int queryTypeCase_
com.google.firestore.v1.DocumentTransform$FieldTransform: int transformTypeCase_
androidx.window.layout.WindowMetricsCalculator$Companion: kotlin.jvm.functions.Function1 decorator
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CALLED_AT
com.google.android.gms.common.data.DataHolder: android.os.Parcelable$Creator CREATOR
com.google.type.LatLng: int LATITUDE_FIELD_NUMBER
androidx.window.core.Version: androidx.window.core.Version CURRENT
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String CHANNEL_ACTION
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PERIODICALLY_SHOW_METHOD
com.google.android.gms.internal.firebase-auth-api.zzmz: int zzg
com.google.firebase.auth.internal.zzbb: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzng: com.google.android.gms.internal.firebase-auth-api.zzng zzb
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PROGRESS
com.google.firestore.v1.StructuredQuery$CompositeFilter: int FILTERS_FIELD_NUMBER
com.google.firestore.v1.MapValue: com.google.protobuf.Parser PARSER
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.Boolean htmlFormatContentTitle
com.google.firestore.admin.v1.Index$IndexField: java.lang.Object valueMode_
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
com.google.android.gms.internal.firebase-auth-api.zzri: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
androidx.window.core.Version$bigInteger$2: androidx.window.core.Version this$0
com.google.firebase.firestore.proto.WriteBatch: int BASE_WRITES_FIELD_NUMBER
com.google.firestore.v1.WriteResult: com.google.protobuf.Internal$ProtobufList transformResults_
com.google.firestore.v1.CommitResponse: int WRITE_RESULTS_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzkw: com.google.android.gms.internal.firebase-auth-api.zzkw zzb
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer number
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock globalLock
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.Object icon
com.google.android.gms.internal.firebase-auth-api.zzis: com.google.android.gms.internal.firebase-auth-api.zziv zzf
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
com.google.firestore.v1.DocumentTransform$FieldTransform: int FIELD_PATH_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzmp: com.google.android.gms.internal.firebase-auth-api.zzmj zzf
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
com.google.android.gms.internal.firebase-auth-api.zzqm: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlinx.coroutines.flow.Flow $flow
com.dexterous.flutterlocalnotifications.models.Time: java.lang.String HOUR
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
com.google.firestore.v1.DocumentChange: com.google.protobuf.Internal$IntList targetIds_
com.google.firestore.v1.StructuredQuery$Filter: int UNARY_FILTER_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MILLISECONDS_SINCE_EPOCH
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_DRAWABLE_RESOURCE_ERROR_MESSAGE
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_GREEN
com.google.android.gms.internal.firebase-auth-api.zzsm: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ONLY_ALERT_ONCE
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl splitInfoEmbeddingCallback
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_NAME
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TEXT
com.google.android.gms.internal.firebase-auth-api.zzmb: int zze
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.WeakHashMap activityWindowLayoutInfo
android.support.v4.media.MediaMetadataCompat: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.StructuredQuery$CollectionSelector: boolean allDescendants_
io.flutter.plugin.platform.SingleViewPresentation: java.lang.Object createParams
androidx.window.R$attr: int activityName
com.google.firestore.v1.TargetChange: com.google.protobuf.ByteString resumeToken_
com.google.firestore.v1.Target: int resumeTypeCase_
com.google.firestore.v1.StructuredQuery: com.google.firestore.v1.Cursor endAt_
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: java.lang.Runnable onFrameConsumed
com.google.firestore.bundle.BundledQuery: java.lang.String parent_
com.google.firestore.v1.ListenResponse: int TARGET_CHANGE_FIELD_NUMBER
com.google.android.gms.common.internal.safeparcel.SafeParcelable: java.lang.String NULL
com.google.android.gms.internal.firebase-auth-api.zzlf: com.google.android.gms.internal.firebase-auth-api.zzli zzf
com.google.firestore.v1.StructuredQuery: com.google.protobuf.Internal$ProtobufList orderBy_
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String channelId
com.google.android.gms.internal.firebase-auth-api.zzli: com.google.android.gms.internal.firebase-auth-api.zzli zzb
com.google.android.gms.maps.model.LatLng: android.os.Parcelable$Creator CREATOR
com.google.firebase.auth.FacebookAuthCredential: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzsi: android.os.Parcelable$Creator CREATOR
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: java.util.concurrent.Executor executor
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer importance
com.google.firebase.auth.PlayGamesAuthCredential: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ID
com.google.firestore.v1.Document: int CREATE_TIME_FIELD_NUMBER
com.google.firebase.firestore.proto.UnknownDocument: com.google.protobuf.Parser PARSER
com.google.firestore.v1.Value: com.google.protobuf.Parser PARSER
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.Boolean htmlFormatSummaryText
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation$Companion Companion
com.google.firestore.v1.BatchGetDocumentsRequest: int NEW_TRANSACTION_FIELD_NUMBER
androidx.window.embedding.MatcherUtils: boolean sDebugMatchers
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LINES
com.google.firebase.firestore.proto.Target: int SNAPSHOT_VERSION_FIELD_NUMBER
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
com.google.firestore.v1.TargetChange: com.google.protobuf.Timestamp readTime_
com.google.android.gms.location.LastLocationRequest: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: java.lang.String observatoryUri
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String channelName
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean showProgress
com.google.firebase.auth.PhoneAuthProvider$ForceResendingToken: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.internal.TelemetryData: android.os.Parcelable$Creator CREATOR
com.google.firebase.auth.TwitterAuthCredential: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.ArrayValue: com.google.firestore.v1.ArrayValue DEFAULT_INSTANCE
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
androidx.window.R$styleable: int SplitPairRule_splitRatio
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
com.google.firestore.admin.v1.Index: com.google.firestore.admin.v1.Index DEFAULT_INSTANCE
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
com.google.firestore.v1.CommitResponse: com.google.protobuf.Internal$ProtobufList writeResults_
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object onCloseHandler
com.google.android.gms.internal.firebase-auth-api.zznc: java.lang.String zzi
com.google.firestore.v1.MapValue: com.google.firestore.v1.MapValue DEFAULT_INSTANCE
com.google.firebase.firestore.proto.Target: java.lang.Object targetType_
com.google.firestore.v1.WriteRequest: com.google.protobuf.ByteString streamToken_
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency Weekly
com.google.firestore.v1.DocumentTransform$FieldTransform: java.lang.Object transformType_
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarCompat$Companion Companion
androidx.window.embedding.EmbeddingCompat: java.lang.String TAG
com.google.firestore.v1.DocumentTransform: com.google.firestore.v1.DocumentTransform DEFAULT_INSTANCE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_NOTIFICATION_CHANNELS_METHOD
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String GROUP_CONVERSATION
androidx.window.R$styleable: int SplitPairRule_splitMinSmallestWidth
com.google.firestore.v1.BatchGetDocumentsRequest: int TRANSACTION_FIELD_NUMBER
com.google.firebase.firestore.proto.MaybeDocument: com.google.protobuf.Parser PARSER
androidx.window.R$id: int locale
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean channelShowBadge
com.google.firestore.v1.Value: int valueTypeCase_
com.google.firestore.v1.StructuredQuery$FieldReference: int FIELD_PATH_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery$UnaryFilter: com.google.protobuf.Parser PARSER
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker$Companion $$INSTANCE
com.google.firestore.v1.DocumentChange: int DOCUMENT_FIELD_NUMBER
com.google.android.gms.maps.model.LatLngBounds: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.StructuredQuery$CompositeFilter: int OP_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzjh: int zzf
com.google.android.gms.internal.firebase-auth-api.zzqc: android.os.Parcelable$Creator CREATOR
com.google.firebase.firestore.proto.Target: int LAST_LIMBO_FREE_SNAPSHOT_VERSION_FIELD_NUMBER
com.google.firestore.v1.DocumentDelete: com.google.firestore.v1.DocumentDelete DEFAULT_INSTANCE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CREATE_NOTIFICATION_CHANNEL_METHOD
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type HINGE
com.google.firestore.v1.StructuredQuery$FieldFilter: int OP_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String VIBRATION_PATTERN
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SOUND
com.google.android.gms.internal.firebase-auth-api.zzlv: com.google.android.gms.internal.firebase-auth-api.zzlv zzb
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_RAW_RESOURCE_ERROR_MESSAGE
com.google.firestore.v1.StructuredQuery: int START_AT_FIELD_NUMBER
com.google.firestore.v1.DocumentDelete: int REMOVED_TARGET_IDS_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery$FieldReference: java.lang.String fieldPath_
com.google.firestore.admin.v1.Index: com.google.protobuf.Internal$ProtobufList fields_
com.google.firestore.v1.ListenResponse: com.google.protobuf.Parser PARSER
com.google.firestore.v1.ListenResponse: int FILTER_FIELD_NUMBER
com.google.protobuf.Timestamp: int nanos_
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String ID
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
com.google.firestore.v1.StructuredQuery$CompositeFilter: com.google.firestore.v1.StructuredQuery$CompositeFilter DEFAULT_INSTANCE
com.google.android.gms.internal.firebase-auth-api.zzmg: com.google.android.gms.internal.firebase-auth-api.zzmj zze
com.google.firebase.auth.internal.zzae: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String GROUP_ALERT_BEHAVIOR
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String DESCRIPTION
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.Boolean htmlFormatBigText
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean playSound
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_NOTIFICATION_APP_LAUNCH_DETAILS_METHOD
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.ExtensionsWindowLayoutInfoAdapter INSTANCE
com.dexterous.flutterlocalnotifications.models.SoundSource: com.dexterous.flutterlocalnotifications.models.SoundSource[] $VALUES
kotlinx.coroutines.CancellableContinuationImpl: int _decision
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String timeZoneName
com.google.firebase.firestore.proto.NoDocument: com.google.protobuf.Timestamp readTime_
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.Boolean important
com.google.firestore.v1.StructuredQuery: int ORDER_BY_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzkz: com.google.android.gms.internal.firebase-auth-api.zzlc zze
com.google.android.gms.internal.firebase-auth-api.zzlq: com.google.android.gms.internal.firebase-auth-api.zzabe zze
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: androidx.window.layout.SidecarWindowBackend this$0
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: int label
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ONGOING
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String DATA_URI
com.google.firestore.v1.DocumentMask: com.google.firestore.v1.DocumentMask DEFAULT_INSTANCE
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State FLAT
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetricsCalculator$Companion Companion
com.google.android.gms.internal.firebase-auth-api.zzjw: com.google.android.gms.internal.firebase-auth-api.zzjw zzb
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
com.google.firebase.firestore.proto.NoDocument: java.lang.String name_
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_SOUND_ERROR_CODE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String DATA_MIME_TYPE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_CONTENT_TITLE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: long[] vibrationPattern
com.google.android.gms.common.internal.RootTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzlv: com.google.android.gms.internal.firebase-auth-api.zzmb zzf
com.google.firestore.v1.DocumentRemove: int DOCUMENT_FIELD_NUMBER
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowInfoTrackerImpl$Companion Companion
com.google.protobuf.Any: int VALUE_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ICON_SOURCE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HIDE_EXPANDED_LARGE_ICON
com.google.android.gms.internal.firebase-auth-api.zzjk: int zze
com.google.firestore.v1.DocumentDelete: com.google.protobuf.Internal$IntList removedTargetIds_
com.google.firestore.v1.BatchGetDocumentsResponse: java.lang.Object result_
com.google.firestore.v1.ListenRequest: com.google.firestore.v1.ListenRequest DEFAULT_INSTANCE
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.TransactionOptions$ReadWrite: int RETRY_TRANSACTION_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery: int LIMIT_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: com.dexterous.flutterlocalnotifications.PermissionRequestListener callback
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator$Companion$reset$1 INSTANCE
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map activityToListeners
com.google.android.gms.internal.firebase-auth-api.zzjn: int zze
com.google.android.gms.internal.firebase-auth-api.zzru: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzmp: com.google.android.gms.internal.firebase-auth-api.zzmp zzb
com.google.firestore.v1.Value: int MAP_VALUE_FIELD_NUMBER
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
com.google.android.gms.internal.firebase-auth-api.zznc: boolean zzh
com.google.android.gms.internal.firebase-auth-api.zzzy: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.TargetChange: com.google.protobuf.Parser PARSER
com.google.android.gms.internal.firebase-auth-api.zzqo: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long timeoutAfter
com.google.android.gms.internal.firebase-auth-api.zzjh: com.google.android.gms.internal.firebase-auth-api.zzjh zzb
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Integer audioAttributesUsage
com.google.android.gms.internal.firebase-auth-api.zzzl: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource ByteArray
androidx.window.layout.WindowMetrics: androidx.window.core.Bounds _bounds
com.google.firestore.v1.Write: com.google.firestore.v1.DocumentMask updateMask_
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String ID
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.List lastValue
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.String bigText
com.google.android.gms.internal.firebase-auth-api.zzly: int zzf
com.google.android.gms.internal.firebase-auth-api.zzkc: com.google.android.gms.internal.firebase-auth-api.zzabe zzf
android.support.v4.media.MediaDescriptionCompat: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String tag
com.google.firebase.messaging.RemoteMessage: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.EmbeddingCompat: boolean DEBUG
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TIMESTAMP
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BODY
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_TAG
com.google.firestore.v1.Target: int READ_TIME_FIELD_NUMBER
com.google.android.material.bottomappbar.BottomAppBar$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzki: com.google.android.gms.internal.firebase-auth-api.zzabe zzf
com.google.firestore.v1.Document: com.google.protobuf.Timestamp updateTime_
com.google.android.gms.safetynet.SafeBrowsingData: android.os.Parcelable$Creator CREATOR
com.google.firebase.firestore.proto.MaybeDocument: int UNKNOWN_DOCUMENT_FIELD_NUMBER
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
com.google.firestore.v1.Document: java.lang.String name_
androidx.window.core.Bounds: int bottom
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MAX_PROGRESS
com.google.android.gms.internal.firebase-auth-api.zzng: com.google.android.gms.internal.firebase-auth-api.zzmu zze
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingAdapter adapter
com.google.android.gms.signin.internal.zak: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzqu: android.os.Parcelable$Creator CREATOR
com.google.android.gms.maps.model.PatternItem: android.os.Parcelable$Creator CREATOR
androidx.window.R$styleable: int SplitPlaceholderRule_splitLayoutDirection
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
com.google.firestore.v1.BatchGetDocumentsRequest: int DOCUMENTS_FIELD_NUMBER
androidx.window.core.Version: kotlin.Lazy bigInteger$delegate
kotlin.jvm.internal.CallableReference: java.lang.Object receiver
com.google.android.material.button.MaterialButton$SavedState: android.os.Parcelable$Creator CREATOR
com.google.firebase.auth.internal.zzag: android.os.Parcelable$Creator CREATOR
androidx.window.layout.SidecarCompat: java.lang.String TAG
com.google.firestore.v1.Value: int INTEGER_VALUE_FIELD_NUMBER
com.google.firestore.v1.ListenRequest: java.lang.String database_
com.google.firestore.bundle.BundledQuery: com.google.firestore.bundle.BundledQuery DEFAULT_INSTANCE
com.google.firestore.v1.DocumentRemove: int removedTargetIdsMemoizedSerializedSize
com.google.firebase.Timestamp: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.DocumentDelete: int removedTargetIdsMemoizedSerializedSize
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer ledOnMs
com.google.android.gms.internal.firebase-auth-api.zzng: int zzf
com.google.android.gms.internal.firebase-auth-api.zzly: com.google.android.gms.internal.firebase-auth-api.zzly zzb
com.dexterous.flutterlocalnotifications.models.Time: java.lang.String MINUTE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer priority
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DELETE_NOTIFICATION_CHANNEL_GROUP_METHOD
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MATCH_DATE_TIME_COMPONENTS
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: androidx.window.layout.WindowInfoTracker tracker
androidx.window.layout.SidecarCompat: java.util.Map componentCallbackMap
com.google.android.gms.internal.location.zzbf: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzra: android.os.Parcelable$Creator CREATOR
com.google.android.gms.maps.model.PolylineOptions: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource DrawableResource
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
com.google.firestore.v1.WriteResult: int UPDATE_TIME_FIELD_NUMBER
com.google.firestore.v1.TransactionOptions$ReadOnly: int READ_TIME_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LARGE_ICON_BITMAP_SOURCE
com.google.android.gms.internal.firebase-auth-api.zznm: int zze
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetricsCalculatorCompat INSTANCE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SHOW_WEEKLY_AT_DAY_AND_TIME_METHOD
com.google.firestore.v1.StructuredQuery$CompositeFilter: int op_
com.google.firestore.v1.DocumentTransform$FieldTransform: com.google.firestore.v1.DocumentTransform$FieldTransform DEFAULT_INSTANCE
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String previousCompletedSplashIsolate
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
com.google.android.gms.internal.firebase-auth-api.zzjq: com.google.android.gms.internal.firebase-auth-api.zzjt zze
com.google.android.gms.internal.firebase-auth-api.zznh: com.google.android.gms.internal.firebase-auth-api.zznh zzb
androidx.window.layout.SidecarCompat$FirstAttachAdapter: java.lang.ref.WeakReference activityWeakReference
com.google.android.gms.internal.firebase-auth-api.zzmj: int zzg
com.google.android.gms.internal.firebase-auth-api.zzqe: android.os.Parcelable$Creator CREATOR
android.support.v4.media.session.ParcelableVolumeInfo: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle splashScreenState
com.google.android.gms.internal.location.zzbh: android.os.Parcelable$Creator CREATOR
com.google.rpc.Status: com.google.protobuf.Internal$ProtobufList details_
com.google.firestore.v1.BatchGetDocumentsRequest: int DATABASE_FIELD_NUMBER
com.google.firestore.v1.DocumentTransform$FieldTransform: com.google.protobuf.Parser PARSER
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat embeddingExtension
com.google.firestore.v1.CommitResponse: com.google.firestore.v1.CommitResponse DEFAULT_INSTANCE
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SHORTCUT_ID
androidx.window.layout.SidecarAdapter: java.lang.String TAG
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.Time repeatTime
com.google.android.gms.internal.firebase-auth-api.zzaae: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String SOUND
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean showWhen
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: androidx.core.util.Consumer $consumer
com.google.firestore.v1.CommitResponse: int COMMIT_TIME_FIELD_NUMBER
com.google.firestore.v1.ListenRequest: java.lang.Object targetChange_
com.google.firestore.v1.WriteResponse: com.google.firestore.v1.WriteResponse DEFAULT_INSTANCE
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String IMPORTANCE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String IMPORTANCE
com.google.firestore.v1.DocumentMask: int FIELD_PATHS_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzso: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.StructuredQuery: com.google.protobuf.Parser PARSER
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
androidx.window.embedding.SplitPairRule: java.util.Set filters
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
com.google.android.material.stateful.ExtendableSavedState: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean autoCancel
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
com.google.firestore.v1.StructuredQuery$FieldFilter: com.google.firestore.v1.StructuredQuery$FieldReference field_
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SHOW_WHEN
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
com.google.android.gms.internal.firebase-auth-api.zzog: com.google.android.gms.internal.firebase-auth-api.zzabe zzf
com.google.android.gms.common.internal.ClientIdentity: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzmm: com.google.android.gms.internal.firebase-auth-api.zzabe zzg
com.dexterous.flutterlocalnotifications.models.MessageDetails: com.dexterous.flutterlocalnotifications.models.PersonDetails person
com.google.android.gms.internal.firebase-auth-api.zzko: com.google.android.gms.internal.firebase-auth-api.zzabe zzf
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CREATE_NOTIFICATION_CHANNEL_GROUP_METHOD
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
io.flutter.embedding.engine.FlutterOverlaySurface: int id
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.app.Activity mainActivity
com.google.android.gms.internal.firebase-auth-api.zzko: com.google.android.gms.internal.firebase-auth-api.zzko zzb
com.google.rpc.Status: java.lang.String message_
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
com.google.firebase.firestore.proto.MaybeDocument: boolean hasCommittedMutations_
com.google.android.material.datepicker.Month: android.os.Parcelable$Creator CREATOR
com.google.android.gms.location.LocationRequest: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.StructuredQuery$Order: int FIELD_FIELD_NUMBER
kotlin.jvm.internal.CallableReference: java.lang.String signature
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle[] $VALUES
com.google.firestore.v1.DocumentTransform: com.google.protobuf.Internal$ProtobufList fieldTransforms_
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer audioAttributesUsage
androidx.window.core.Version: androidx.window.core.Version UNKNOWN
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle Default
androidx.window.R$styleable: int SplitPlaceholderRule_placeholderActivityName
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SUMMARY_TEXT
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource FilePath
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Boolean hideExpandedLargeIcon
com.google.firebase.firestore.proto.UnknownDocument: java.lang.String name_
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.String uri
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String DESCRIPTION
com.google.firestore.admin.v1.Index$IndexField: int valueModeCase_
com.google.firebase.firestore.proto.Target: com.google.protobuf.Timestamp lastLimboFreeSnapshotVersion_
com.google.android.gms.internal.firebase-auth-api.zzach: java.util.Map zzb
android.support.v4.os.ResultReceiver: android.os.Parcelable$Creator CREATOR
com.google.firebase.firestore.proto.Target: int QUERY_FIELD_NUMBER
com.google.firestore.v1.DocumentChange: int removedTargetIdsMemoizedSerializedSize
com.google.android.gms.internal.firebase-auth-api.zzip: int zze
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1 INSTANCE
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String ZONED_SCHEDULE_METHOD
com.google.protobuf.Int32Value: int VALUE_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation: java.lang.Boolean htmlFormatBody
com.google.protobuf.AbstractMessageLite: int memoizedHashCode
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.WeakHashMap mActivityWindowLayoutInfo
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_ACTIVE_NOTIFICATIONS_ERROR_CODE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer iconResourceId
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Boolean htmlFormatSummaryText
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_DESCRIPTION
com.google.firestore.v1.BatchGetDocumentsRequest: com.google.protobuf.Parser PARSER
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SET_AS_GROUP_SUMMARY
com.google.firestore.v1.Target: int TARGET_ID_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.Boolean htmlFormatLines
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
com.google.firestore.v1.WriteResponse: int COMMIT_TIME_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_ACTIVE_NOTIFICATIONS_METHOD
com.google.android.gms.safetynet.zzh: android.os.Parcelable$Creator CREATOR
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.Set registeredListeners
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_LED_DETAILS_ERROR_MESSAGE
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: androidx.window.embedding.ExtensionEmbeddingBackend this$0
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: com.google.gson.Gson gson
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents Time
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String sound
com.google.android.gms.internal.firebase-auth-api.zzlf: int zze
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval Daily
com.google.android.gms.internal.firebase-auth-api.zzkf: int zze
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation VERTICAL
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_RED
com.google.firestore.v1.StructuredQuery: int WHERE_FIELD_NUMBER
com.google.protobuf.Timestamp: com.google.protobuf.Parser PARSER
com.google.protobuf.Any: com.google.protobuf.Parser PARSER
com.google.firestore.v1.ListenRequest: com.google.protobuf.Parser PARSER
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Boolean htmlFormatContentTitle
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List lastInfo
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation: java.lang.Boolean htmlFormatTitle
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.BitmapSource largeIconBitmapSource
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String category
com.google.firestore.v1.StructuredQuery$FieldFilter: com.google.protobuf.Parser PARSER
com.google.android.gms.internal.firebase-auth-api.zzng: int zzg
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval Weekly
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
androidx.window.embedding.SplitRule$Api30Impl: androidx.window.embedding.SplitRule$Api30Impl INSTANCE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String NOTIFICATION_LAUNCHED_APP
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String AUDIO_ATTRIBUTES_USAGE
com.google.firestore.v1.WriteResponse: com.google.protobuf.Internal$ProtobufList writeResults_
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
androidx.window.layout.WindowInfoTracker: androidx.window.layout.WindowInfoTracker$Companion Companion
androidx.window.layout.ExtensionWindowLayoutInfoBackend: androidx.window.extensions.layout.WindowLayoutComponent component
androidx.window.embedding.MatcherUtils: java.lang.String sMatchersTag
com.google.android.gms.internal.firebase-auth-api.zzjz: int zzf
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zznc: com.google.android.gms.internal.firebase-auth-api.zznc zzb
com.google.android.gms.internal.firebase-auth-api.zzmz: com.google.android.gms.internal.firebase-auth-api.zzabe zzf
android.support.v4.media.RatingCompat: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.DocumentRemove: java.lang.String document_
com.google.firebase.firestore.proto.Target: int DOCUMENTS_FIELD_NUMBER
com.google.android.gms.maps.GoogleMapOptions: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents[] $VALUES
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.String summaryText
com.google.android.gms.internal.firebase-auth-api.zznp: com.google.android.gms.internal.firebase-auth-api.zznp zzb
com.google.firestore.v1.Precondition: int conditionTypeCase_
com.google.android.gms.safetynet.HarmfulAppsData: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzyv: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency Daily
com.google.android.gms.internal.firebase-auth-api.zzze: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzrq: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.WriteResponse: com.google.protobuf.ByteString streamToken_
com.google.firestore.v1.ListenResponse: int responseTypeCase_
com.google.firebase.firestore.proto.UnknownDocument: com.google.protobuf.Timestamp version_
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CATEGORY
com.google.firestore.bundle.BundledQuery: int PARENT_FIELD_NUMBER
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$2
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_NOTIFICATION_CHANNELS_ERROR_CODE
com.google.firestore.v1.Target: int DOCUMENTS_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource DrawableResource
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Integer ledColor
com.google.protobuf.Timestamp: long seconds_
com.google.android.gms.internal.firebase-auth-api.zzly: int zzg
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_ID
com.google.firebase.firestore.proto.UnknownDocument: int NAME_FIELD_NUMBER
com.google.firestore.admin.v1.Index: int queryScope_
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle BigText
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PAYLOAD
io.grpc.internal.SerializingExecutor: int runState
androidx.window.embedding.SplitPairFilter: android.content.ComponentName secondaryActivityName
com.google.firestore.v1.Document: com.google.protobuf.MapFieldLite fields_
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String VIBRATION_PATTERN
com.google.firestore.v1.Value: java.lang.Object valueType_
com.google.android.gms.internal.firebase-auth-api.zznh: int zze
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State state
com.google.firestore.v1.TransactionOptions: com.google.firestore.v1.TransactionOptions DEFAULT_INSTANCE
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
com.google.firestore.v1.Target: java.lang.Object targetType_
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String STYLE_INFORMATION
com.google.firestore.v1.WriteResponse: int STREAM_ID_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzjw: com.google.android.gms.internal.firebase-auth-api.zzabe zzf
com.google.android.gms.signin.internal.zaa: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.BatchGetDocumentsRequest: java.lang.String database_
com.google.firestore.v1.ListenRequest: int ADD_TARGET_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents DateAndTime
com.google.android.gms.internal.firebase-auth-api.zzjb: com.google.android.gms.internal.firebase-auth-api.zzly zzf
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean ongoing
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String ARE_NOTIFICATIONS_ENABLED_METHOD
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ADDITIONAL_FLAGS
com.google.protobuf.Any: int TYPE_URL_FIELD_NUMBER
com.google.firebase.firestore.proto.WriteBatch: int batchId_
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.String key
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzli: com.google.android.gms.internal.firebase-auth-api.zzlc zzf
com.google.android.gms.internal.firebase-auth-api.zzko: int zze
androidx.window.R$attr: int activityAction
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String title
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
kotlin.jvm.internal.CallableReference: boolean isTopLevel
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType NONE
com.google.firestore.v1.ListenRequest: int LABELS_FIELD_NUMBER
com.google.firestore.v1.TransactionOptions: com.google.protobuf.Parser PARSER
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String NOTIFICATION_DETAILS
kotlin.jvm.internal.Lambda: int arity
com.google.firebase.auth.ActionCodeSettings: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzace: com.google.android.gms.internal.firebase-auth-api.zzabz zzb
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String NAME
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
androidx.window.R$attr: int finishPrimaryWithSecondary
androidx.window.core.Bounds: int top
androidx.window.R$styleable: int ActivityFilter_activityName
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String INDETERMINATE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String GROUP_KEY
com.google.firestore.v1.TargetChange: int CAUSE_FIELD_NUMBER
com.google.firestore.v1.BatchGetDocumentsResponse: com.google.protobuf.Parser PARSER
com.google.firestore.v1.Value: int NULL_VALUE_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzmu: com.google.android.gms.internal.firebase-auth-api.zzmu zzb
com.google.android.gms.internal.firebase-auth-api.zzis: int zze
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController globalInstance
com.google.firestore.v1.WriteRequest: com.google.firestore.v1.WriteRequest DEFAULT_INSTANCE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.SoundSource soundSource
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer day
com.google.firestore.v1.Target$QueryTarget: int PARENT_FIELD_NUMBER
com.google.firestore.v1.TargetChange: com.google.firestore.v1.TargetChange DEFAULT_INSTANCE
com.google.firestore.v1.StructuredQuery: int offset_
com.google.android.gms.internal.firebase-auth-api.zzjz: int zze
kotlinx.coroutines.InvokeOnCancelling: int _invoked
com.google.firestore.v1.WriteRequest: int STREAM_ID_FIELD_NUMBER
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController$Companion Companion
com.google.android.gms.safetynet.zzd: android.os.Parcelable$Creator CREATOR
com.google.type.LatLng: double longitude_
com.google.firestore.v1.WriteResult: com.google.protobuf.Parser PARSER
com.google.android.gms.internal.firebase-auth-api.zznv: com.google.android.gms.internal.firebase-auth-api.zznv zzb
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String sound
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArraySet splitRules
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.String contentTitle
com.google.protobuf.Any: com.google.protobuf.Any DEFAULT_INSTANCE
com.google.android.gms.internal.firebase-auth-api.zznl: com.google.android.gms.internal.firebase-auth-api.zznl zzb
androidx.window.embedding.SplitRule: int layoutDirection
com.google.android.gms.cloudmessaging.zzd: android.os.Parcelable$Creator CREATOR
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: android.app.Activity $activity
androidx.window.layout.WindowMetricsCalculatorCompat: java.lang.String TAG
com.google.android.gms.internal.firebase-auth-api.zzip: com.google.android.gms.internal.firebase-auth-api.zziv zzg
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SCHEDULED_NOTIFICATIONS
com.google.firestore.v1.WriteRequest: com.google.protobuf.MapFieldLite labels_
com.google.android.gms.internal.firebase-auth-api.zzng: int zzh
androidx.window.layout.DisplayCompatHelperApi28: androidx.window.layout.DisplayCompatHelperApi28 INSTANCE
com.google.firestore.v1.DocumentTransform$FieldTransform: int APPEND_MISSING_ELEMENTS_FIELD_NUMBER
com.google.firebase.firestore.proto.WriteBatch: int WRITES_FIELD_NUMBER
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.Map consumerToJobMap
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_OFF_MS
androidx.window.R$attr: int splitRatio
com.google.firestore.v1.BatchGetDocumentsResponse: int MISSING_FIELD_NUMBER
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.StructuredQuery$FieldReference: com.google.protobuf.Parser PARSER
androidx.window.core.Bounds: int left
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType FULL
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.String contentTitle
androidx.window.core.Version: int patch
com.google.android.gms.internal.firebase-auth-api.zzsk: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingCompat$Companion Companion
com.google.android.gms.internal.firebase-auth-api.zzod: com.google.android.gms.internal.firebase-auth-api.zzod zzb
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.ListenRequest: int DATABASE_FIELD_NUMBER
com.google.firestore.v1.ListenResponse: com.google.firestore.v1.ListenResponse DEFAULT_INSTANCE
androidx.window.embedding.SplitPairRule: boolean clearTop
com.google.firestore.v1.StructuredQuery$Order: int DIRECTION_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TIME_ZONE_NAME
com.google.android.gms.internal.firebase-auth-api.zzyf: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CONTENT_TITLE
com.google.firestore.v1.StructuredQuery$CollectionSelector: int COLLECTION_ID_FIELD_NUMBER
androidx.window.R$id: int rtl
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer color
com.google.android.gms.maps.model.Cap: android.os.Parcelable$Creator CREATOR
com.google.firebase.firestore.proto.Target: com.google.protobuf.ByteString resumeToken_
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer ledOffMs
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
com.google.firestore.v1.TransactionOptions$ReadWrite: com.google.protobuf.ByteString retryTransaction_
com.google.android.gms.internal.firebase-auth-api.zznc: java.lang.String zzf
androidx.window.layout.FoldingFeature$Orientation: java.lang.String description
com.google.android.gms.internal.firebase-auth-api.zzrm: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.StructuredQuery$UnaryFilter: int operandTypeCase_
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean $assertionsDisabled
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface callback
com.google.android.gms.internal.firebase-auth-api.zzmu: com.google.android.gms.internal.firebase-auth-api.zzabe zzf
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinWidth
com.google.firestore.v1.StructuredQuery$CollectionSelector: java.lang.String collectionId_
com.google.android.gms.internal.firebase-auth-api.zzro: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.BatchGetDocumentsResponse: int READ_TIME_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DEFAULT_ICON
com.dexterous.flutterlocalnotifications.models.NotificationDetails: int[] additionalFlags
com.google.firebase.auth.internal.zzt: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
androidx.window.core.Version: androidx.window.core.Version VERSION_0_1
androidx.window.layout.DisplayCompatHelperApi17: androidx.window.layout.DisplayCompatHelperApi17 INSTANCE
com.google.firestore.v1.BatchGetDocumentsResponse: int resultCase_
com.google.android.gms.internal.firebase-auth-api.zzmm: com.google.android.gms.internal.firebase-auth-api.zzmm zzb
com.google.firestore.v1.Precondition: java.lang.Object conditionType_
com.google.firestore.v1.Document: int FIELDS_FIELD_NUMBER
com.google.firestore.v1.TransactionOptions: int READ_ONLY_FIELD_NUMBER
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend$Companion Companion
com.google.firestore.v1.StructuredQuery: com.google.firestore.v1.StructuredQuery$Filter where_
com.google.firestore.admin.v1.Index$IndexField: java.lang.String fieldPath_
com.google.firestore.v1.DocumentChange: com.google.protobuf.Internal$IntList removedTargetIds_
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String NAME
com.google.firestore.v1.Value: int STRING_VALUE_FIELD_NUMBER
com.google.firebase.auth.internal.zzr: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.Write: com.google.protobuf.Parser PARSER
com.google.android.gms.internal.firebase-auth-api.zzis: com.google.android.gms.internal.firebase-auth-api.zzis zzb
com.google.android.gms.internal.firebase-auth-api.zznv: int zze
com.google.android.gms.internal.firebase-auth-api.zzqs: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.SoundSource: com.dexterous.flutterlocalnotifications.models.SoundSource RawResource
com.google.protobuf.Int32Value: int value_
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.concurrent.locks.ReentrantLock multicastConsumerLock
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
com.google.protobuf.Int32Value: com.google.protobuf.Parser PARSER
com.google.firestore.v1.DocumentChange: com.google.firestore.v1.DocumentChange DEFAULT_INSTANCE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String METHOD_CHANNEL
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: java.util.concurrent.ExecutorService cachedThreadPool
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
com.google.firestore.v1.Document: com.google.protobuf.Timestamp createTime_
com.google.android.gms.internal.firebase-auth-api.zzod: com.google.android.gms.internal.firebase-auth-api.zzacm zzf
com.google.firestore.v1.DocumentChange: int targetIdsMemoizedSerializedSize
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean setAsGroupSummary
com.google.protobuf.Timestamp: int NANOS_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zziv: int zze
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
androidx.window.R$styleable: int[] SplitPairFilter
androidx.window.embedding.EmbeddingCompat: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingExtension
io.flutter.plugin.platform.SingleViewPresentation: int viewId
com.google.android.gms.internal.firebase-auth-api.zznp: com.google.android.gms.internal.firebase-auth-api.zzns zzf
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String URI
com.google.firestore.v1.Precondition: int EXISTS_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzki: int zze
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: androidx.window.layout.WindowInfoTrackerImpl this$0
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
androidx.window.embedding.SplitRule: float splitRatio
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
com.google.android.gms.location.zzbv: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.WriteRequest: com.google.protobuf.Parser PARSER
androidx.window.layout.WindowLayoutInfo: java.util.List displayFeatures
androidx.window.embedding.SplitRule: int minSmallestWidth
com.google.firebase.firestore.proto.Target: int RESUME_TOKEN_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle Messaging
androidx.window.R$styleable: int ActivityFilter_activityAction
io.grpc.util.RoundRobinLoadBalancer$ReadyPicker: int index
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PLATFORM_SPECIFICS
androidx.window.embedding.SplitController: boolean sDebug
com.google.android.gms.maps.model.MarkerOptions: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.StructuredQuery$Order: com.google.firestore.v1.StructuredQuery$FieldReference field_
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean enableLights
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String START_FOREGROUND_SERVICE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_ALL_METHOD
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
com.google.android.gms.internal.firebase-auth-api.zzqa: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BIG_PICTURE_BITMAP_SOURCE
com.google.firestore.v1.StructuredQuery$Projection: int FIELDS_FIELD_NUMBER
androidx.window.core.Version: java.lang.String description
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock globalLock
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency scheduledNotificationRepeatFrequency
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_ALPHA
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Object largeIcon
com.google.android.gms.internal.firebase-auth-api.zzlc: int zzg
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INITIALIZE_METHOD
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend globalInstance
com.google.rpc.Status: int CODE_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String SHOW_BADGE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_METHOD
com.google.android.gms.internal.firebase-auth-api.zzns: java.lang.String zze
com.google.android.gms.internal.firebase-auth-api.zzzg: android.os.Parcelable$Creator CREATOR
com.google.firebase.firestore.proto.NoDocument: int NAME_FIELD_NUMBER
com.google.firestore.v1.WriteResponse: com.google.protobuf.Parser PARSER
com.google.firestore.v1.Cursor: com.google.protobuf.Parser PARSER
com.google.android.gms.internal.firebase-auth-api.zzjq: int zzf
com.google.firestore.v1.StructuredQuery$Projection: com.google.protobuf.Parser PARSER
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Companion Companion
androidx.window.embedding.SplitPlaceholderRule: java.util.Set filters
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LARGE_ICON
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_SHOW_BADGE
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents DayOfMonthAndTime
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer groupAlertBehavior
com.google.firestore.v1.DocumentTransform: com.google.protobuf.Parser PARSER
com.google.firestore.v1.TargetChange: int RESUME_TOKEN_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String subText
com.google.firestore.v1.TargetChange: com.google.rpc.Status cause_
com.google.android.gms.safetynet.zza: android.os.Parcelable$Creator CREATOR
kotlin.jvm.internal.CallableReference: java.lang.Class owner
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_ACTIVE_MESSAGING_STYLE_ERROR_CODE
androidx.window.embedding.ActivityFilter: java.lang.String intentAction
com.google.firestore.v1.Document: int NAME_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean fullScreenIntent
com.google.protobuf.Timestamp: com.google.protobuf.Timestamp DEFAULT_INSTANCE
com.google.protobuf.GeneratedMessageLite$ExtendableMessage: com.google.protobuf.FieldSet extensions
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String KEY
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int overlayInsetTypes
com.google.firestore.v1.ArrayValue: com.google.protobuf.Internal$ProtobufList values_
com.google.firestore.v1.Write: com.google.protobuf.Internal$ProtobufList updateTransforms_
com.google.android.gms.internal.firebase-auth-api.zzlq: com.google.android.gms.internal.firebase-auth-api.zzlq zzb
com.google.firestore.v1.BatchGetDocumentsResponse: com.google.firestore.v1.BatchGetDocumentsResponse DEFAULT_INSTANCE
com.google.firestore.v1.StructuredQuery: int FROM_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery$CompositeFilter: com.google.protobuf.Internal$ProtobufList filters_
androidx.window.core.Version: java.lang.String VERSION_PATTERN_STRING
com.google.android.gms.internal.firebase-auth-api.zzry: android.os.Parcelable$Creator CREATOR
androidx.window.R$attr: int splitLayoutDirection
com.google.firebase.auth.internal.zzx: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzog: com.google.android.gms.internal.firebase-auth-api.zzog zzb
com.google.firestore.v1.WriteResult: int TRANSFORM_RESULTS_FIELD_NUMBER
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
com.google.firebase.firestore.proto.MaybeDocument: int NO_DOCUMENT_FIELD_NUMBER
com.google.android.gms.safetynet.zzf: android.os.Parcelable$Creator CREATOR
com.google.rpc.Status: int code_
androidx.window.embedding.SplitController: androidx.window.embedding.EmbeddingBackend embeddingBackend
com.google.firestore.bundle.BundledQuery: int limitType_
com.google.firestore.v1.StructuredQuery: com.google.firestore.v1.StructuredQuery DEFAULT_INSTANCE
androidx.window.embedding.SplitPairRule: boolean finishSecondaryWithPrimary
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_ACTION
com.google.android.gms.internal.firebase-auth-api.zzje: com.google.android.gms.internal.firebase-auth-api.zzje zzb
com.google.firestore.bundle.BundledQuery: com.google.protobuf.Parser PARSER
com.google.android.gms.internal.firebase-auth-api.zzyt: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.DocumentDelete: com.google.protobuf.Parser PARSER
com.google.firestore.v1.Write: int operationCase_
com.google.firestore.v1.BatchGetDocumentsResponse: int TRANSACTION_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery: int END_AT_FIELD_NUMBER
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator$Companion $$INSTANCE
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
com.google.firestore.v1.TargetChange: int targetChangeType_
com.google.firestore.v1.Value: int DOUBLE_VALUE_FIELD_NUMBER
androidx.window.embedding.SplitInfo: float splitRatio
com.google.firestore.admin.v1.Index: int state_
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo lastInfo
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean colorized
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_ON_MS
com.google.firebase.firestore.proto.Target: long lastListenSequenceNumber_
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String ENABLE_LIGHTS
com.google.android.gms.internal.firebase-auth-api.zzny: java.lang.String zze
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLORIZED
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean enableVibration
com.google.protobuf.GeneratedMessageLite: com.google.protobuf.UnknownFieldSetLite unknownFields
com.google.android.gms.internal.firebase-auth-api.zzjn: com.google.android.gms.internal.firebase-auth-api.zzjn zzb
com.google.firestore.v1.Target: int targetTypeCase_
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.os.Parcelable$Creator CREATOR
androidx.window.core.Version: int major
com.google.android.gms.internal.firebase-auth-api.zzlq: com.google.android.gms.internal.firebase-auth-api.zznm zzf
com.google.android.gms.maps.model.CameraPosition: android.os.Parcelable$Creator CREATOR
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: androidx.core.util.Consumer $consumer$inlined
com.google.android.gms.internal.firebase-auth-api.zzlf: com.google.android.gms.internal.firebase-auth-api.zzabe zzg
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer visibility
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map listenerToActivity
kotlinx.coroutines.CancelledContinuation: int _resumed
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource BitmapFilePath
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
com.google.firestore.v1.Target$QueryTarget: java.lang.Object queryType_
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SUB_TEXT
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack secondaryActivityStack
com.google.android.gms.internal.firebase-auth-api.zzny: com.google.android.gms.internal.firebase-auth-api.zzny zzb
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
androidx.window.layout.SidecarCompat$FirstAttachAdapter: androidx.window.layout.SidecarCompat sidecarCompat
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.String dataMimeType
com.google.firestore.v1.ListenResponse: int DOCUMENT_REMOVE_FIELD_NUMBER
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType$Companion Companion
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface extensionCallback
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
com.google.firestore.v1.DocumentChange: com.google.firestore.v1.Document document_
com.google.android.gms.internal.firebase-auth-api.zzqq: android.os.Parcelable$Creator CREATOR
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend windowBackend
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SHOW_METHOD
com.google.firebase.auth.internal.zzz: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.WriteResult: com.google.protobuf.Timestamp updateTime_
androidx.window.embedding.ActivityRule: boolean alwaysExpand
com.google.firestore.v1.WriteRequest: java.lang.String database_
com.google.firebase.auth.PhoneAuthCredential: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource ContentUri
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.content.Context applicationContext
com.google.firestore.v1.BatchGetDocumentsRequest: com.google.firestore.v1.BatchGetDocumentsRequest DEFAULT_INSTANCE
com.google.firestore.v1.DocumentRemove: com.google.protobuf.Timestamp readTime_
com.google.android.gms.internal.firebase-auth-api.zzli: com.google.android.gms.internal.firebase-auth-api.zzabe zzg
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_LINES
com.google.android.gms.internal.firebase-auth-api.zzlc: com.google.android.gms.internal.firebase-auth-api.zzll zze
com.google.firestore.v1.StructuredQuery$UnaryFilter: int op_
androidx.window.embedding.ActivityFilter: android.content.ComponentName componentName
androidx.window.R$attr: int finishSecondaryWithPrimary
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.layout.SidecarAdapter sidecarAdapter
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BIG_TEXT
com.google.android.gms.internal.firebase-auth-api.zziy: com.google.android.gms.internal.firebase-auth-api.zzje zzf
com.google.firestore.v1.BatchGetDocumentsRequest: com.google.firestore.v1.DocumentMask mask_
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long when
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String id
com.google.firestore.v1.Target: int targetId_
com.google.firebase.firestore.proto.Target: com.google.protobuf.Timestamp snapshotVersion_
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle Media
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PERSON
com.google.android.material.timepicker.TimeModel: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzll: int zzf
com.google.android.gms.internal.firebase-auth-api.zzlv: int zze
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.NotificationStyle style
com.google.android.gms.internal.firebase-auth-api.zzmu: int zzg
androidx.window.R$styleable: int[] SplitPlaceholderRule
com.google.firestore.v1.StructuredQuery$Order: int direction_
com.google.firebase.firestore.proto.WriteBatch: com.google.firebase.firestore.proto.WriteBatch DEFAULT_INSTANCE
com.google.firestore.v1.DocumentChange: int TARGET_IDS_FIELD_NUMBER
com.google.firestore.v1.Write: int DELETE_FIELD_NUMBER
com.google.firestore.v1.CommitRequest: int TRANSACTION_FIELD_NUMBER
com.google.firestore.v1.CommitRequest: int DATABASE_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_GREEN
com.google.android.gms.internal.firebase-auth-api.zzod: java.lang.String zze
com.google.android.gms.internal.firebase-auth-api.zzmu: java.lang.String zze
kotlinx.coroutines.channels.ArrayChannel: int size
com.google.firestore.admin.v1.Index: int STATE_FIELD_NUMBER
androidx.window.core.Bounds: int right
com.google.android.gms.internal.firebase-auth-api.zzjn: com.google.android.gms.internal.firebase-auth-api.zzjt zzf
com.google.firestore.v1.Target$DocumentsTarget: com.google.protobuf.Parser PARSER
com.google.firestore.v1.TargetChange: int TARGET_CHANGE_TYPE_FIELD_NUMBER
com.google.firestore.v1.Document: int UPDATE_TIME_FIELD_NUMBER
com.google.firestore.v1.TransactionOptions: int modeCase_
androidx.window.R$id: int androidx_window_activity_scope
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String description
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String REPEAT_INTERVAL
com.google.android.gms.internal.firebase-auth-api.zzaao: int zza
com.google.firestore.admin.v1.Index$IndexField: int ORDER_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: io.flutter.plugin.common.MethodChannel channel
com.google.android.gms.internal.firebase-auth-api.zznc: int zzg
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: com.dexterous.flutterlocalnotifications.models.PersonDetails person
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PRIORITY
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.Boolean bot
com.google.firestore.v1.TargetChange: int TARGET_IDS_FIELD_NUMBER
com.google.firebase.firestore.proto.MaybeDocument: java.lang.Object documentType_
com.google.firestore.v1.Write: java.lang.Object operation_
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean permissionRequestInProgress
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String REPEAT_TIME
com.google.firestore.v1.ExistenceFilter: int TARGET_ID_FIELD_NUMBER
com.google.android.gms.dynamite.descriptors.com.google.firebase.auth.ModuleDescriptor: java.lang.String MODULE_ID
com.google.android.gms.maps.model.PolygonOptions: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.DocumentTransform$FieldTransform: int SET_TO_SERVER_VALUE_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzki: com.google.android.gms.internal.firebase-auth-api.zzki zzb
androidx.window.layout.WindowInfoTrackerImpl: int BUFFER_CAPACITY
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean enableVibration
com.google.android.gms.internal.firebase-auth-api.zzzi: android.os.Parcelable$Creator CREATOR
androidx.window.layout.WindowInfoTracker$Companion: java.lang.String TAG
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SCHEDULED_NOTIFICATION_REPEAT_FREQUENCY
com.google.android.gms.internal.firebase-auth-api.zzmj: int zze
com.google.firestore.v1.DocumentDelete: com.google.protobuf.Timestamp readTime_
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String channelDescription
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TITLE
com.google.android.gms.common.internal.zav: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.WriteResult: com.google.firestore.v1.WriteResult DEFAULT_INSTANCE
com.google.android.gms.internal.firebase-auth-api.zznm: com.google.android.gms.internal.firebase-auth-api.zznm zzb
com.google.firestore.v1.StructuredQuery$FieldFilter: int op_
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: androidx.window.layout.SidecarCompat this$0
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Object bigPicture
com.google.android.gms.internal.firebase-auth-api.zzaaa: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.ArrayValue: com.google.protobuf.Parser PARSER
com.google.android.gms.internal.firebase-auth-api.zzjz: com.google.android.gms.internal.firebase-auth-api.zzjz zzb
com.google.protobuf.Any: com.google.protobuf.ByteString value_
kotlin.jvm.internal.CallableReference: java.lang.Object NO_RECEIVER
com.google.firestore.admin.v1.Index: int NAME_FIELD_NUMBER
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: android.app.Activity activity
com.google.firestore.v1.Target: int RESUME_TOKEN_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PENDING_NOTIFICATION_REQUESTS_METHOD
com.google.android.gms.maps.model.CircleOptions: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzkc: com.google.android.gms.internal.firebase-auth-api.zzkc zzb
com.google.firestore.v1.Target$QueryTarget: java.lang.String parent_
com.google.firestore.v1.CommitRequest: com.google.protobuf.ByteString transaction_
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarDeviceState lastDeviceState
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String STOP_FOREGROUND_SERVICE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String groupKey
com.google.firestore.v1.TargetChange: int READ_TIME_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzny: com.google.android.gms.internal.firebase-auth-api.zzmz zzf
com.google.firestore.v1.BatchGetDocumentsResponse: int FOUND_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zzrs: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_BIG_TEXT
com.google.firestore.v1.WriteResponse: int WRITE_RESULTS_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery: com.google.firestore.v1.StructuredQuery$Projection select_
com.google.firestore.v1.ListenResponse: int DOCUMENT_DELETE_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String GROUP_ID
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: java.util.ArrayList messages
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTrackerDecorator decorator
androidx.window.R$styleable: int[] ActivityRule
com.google.firestore.v1.BatchGetDocumentsResponse: com.google.protobuf.ByteString transaction_
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
com.google.android.gms.internal.firebase-auth-api.zzkl: int zzf
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.Class baseType
com.google.firestore.bundle.BundledQuery: int LIMIT_TYPE_FIELD_NUMBER
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_GREEN
com.google.firestore.v1.CommitRequest: java.lang.String database_
com.google.firestore.v1.Target: boolean once_
com.google.firestore.v1.Target: int ONCE_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean onlyAlertOnce
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String SOUND_SOURCE
com.google.type.LatLng: double latitude_
com.google.android.gms.internal.firebase-auth-api.zzli: com.google.android.gms.internal.firebase-auth-api.zzabe zzh
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.SplitRule: int minWidth
com.google.android.gms.internal.firebase-auth-api.zzsg: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.TransactionOptions$ReadOnly: com.google.protobuf.Parser PARSER
com.google.firestore.admin.v1.Index$IndexField: int ARRAY_CONFIG_FIELD_NUMBER
com.google.firestore.v1.Write: int UPDATE_TRANSFORMS_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.Boolean htmlFormatSummaryText
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
com.google.android.gms.internal.firebase-auth-api.zzkz: com.google.android.gms.internal.firebase-auth-api.zzkz zzb
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
com.google.firestore.v1.Cursor: int VALUES_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String VISIBILITY
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
androidx.window.R$styleable: int[] ActivityFilter
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State HALF_OPENED
com.google.android.gms.signin.internal.zag: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.ListenRequest: com.google.protobuf.MapFieldLite labels_
com.google.firestore.v1.Value: com.google.firestore.v1.Value DEFAULT_INSTANCE
androidx.window.layout.SidecarCompat$DistinctElementCallback: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface callbackInterface
com.google.firestore.v1.Precondition: com.google.protobuf.Parser PARSER
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction channelAction
com.google.firebase.firestore.proto.NoDocument: com.google.protobuf.Parser PARSER
com.google.firebase.auth.EmailAuthCredential: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.DocumentChange: int REMOVED_TARGET_IDS_FIELD_NUMBER
androidx.window.layout.ActivityCompatHelperApi24: androidx.window.layout.ActivityCompatHelperApi24 INSTANCE
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle Inbox
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.Document: com.google.protobuf.Parser PARSER
com.google.firestore.v1.Document: com.google.firestore.v1.Document DEFAULT_INSTANCE
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$Companion Companion
com.google.firestore.v1.StructuredQuery$Filter: int COMPOSITE_FILTER_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_TITLE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_RED
androidx.window.embedding.SplitPairFilter: android.content.ComponentName primaryActivityName
com.google.firestore.v1.TransactionOptions$ReadOnly: int consistencySelectorCase_
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
com.google.android.gms.maps.model.TileOverlayOptions: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.Target$DocumentsTarget: com.google.firestore.v1.Target$DocumentsTarget DEFAULT_INSTANCE
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Object largeIcon
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer id
com.google.firestore.v1.Target$QueryTarget: int STRUCTURED_QUERY_FIELD_NUMBER
com.google.firestore.bundle.BundledQuery: int STRUCTURED_QUERY_FIELD_NUMBER
com.google.android.gms.internal.firebase-auth-api.zziv: com.google.android.gms.internal.firebase-auth-api.zziv zzb
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationX()
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpecResource(int)
androidx.appcompat.widget.Toolbar: void setLogo(int)
io.grpc.Status$Code: io.grpc.Status$Code valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getEndIconContentDescription()
com.google.android.material.button.MaterialButton: void setStrokeColorResource(int)
com.razorpay.CheckoutBridge: void setAppToken(java.lang.String)
com.google.android.material.timepicker.ClockHandView: ClockHandView(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
androidx.window.embedding.MatcherUtils: MatcherUtils()
com.google.android.material.floatingactionbutton.FloatingActionButton: boolean getUseCompatPadding()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
com.google.protobuf.NullValue: com.google.protobuf.NullValue valueOf(java.lang.String)
androidx.window.layout.WindowMetricsCalculator$Companion: void overrideDecorator(androidx.window.layout.WindowMetricsCalculatorDecorator)
com.google.android.material.textfield.TextInputLayout: void setErrorTextColor(android.content.res.ColorStateList)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
androidx.cardview.widget.CardView: boolean getPreventCornerOverlap()
com.google.android.material.card.MaterialCardView: float getCardViewRadius()
com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType: com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(int)
androidx.window.layout.WindowMetrics: android.graphics.Rect getBounds()
com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator: com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator valueOf(java.lang.String)
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_0_1()
com.google.android.material.textfield.TextInputLayout: void setStartIconOnClickListener(android.view.View$OnClickListener)
androidx.window.layout.SidecarCompat: androidx.window.layout.WindowLayoutInfo getWindowLayoutInfo(android.app.Activity)
androidx.window.embedding.SplitInfo: java.lang.String toString()
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundMode()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setHelperTextColor(android.content.res.ColorStateList)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)
kotlin.jvm.internal.CallableReference: boolean isSuspend()
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior(android.content.Context,android.util.AttributeSet)
androidx.window.core.Version$Companion: androidx.window.core.Version parse(java.lang.String)
com.dexterous.flutterlocalnotifications.models.styles.StyleInformation: StyleInformation()
androidx.window.core.Version: int getPatch()
com.google.protobuf.GeneratedMessageLite$MethodToInvoke: com.google.protobuf.GeneratedMessageLite$MethodToInvoke valueOf(java.lang.String)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: WindowInfoTrackerCallbackAdapter(androidx.window.layout.WindowInfoTracker)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeErrorColor(android.content.res.ColorStateList)
io.flutter.embedding.android.FlutterSplashView$SavedState: void writeToParcel(android.os.Parcel,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnClickListener(android.view.View$OnClickListener)
com.google.firebase.firestore.core.DocumentViewChange$Type: com.google.firebase.firestore.core.DocumentViewChange$Type valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetTop(android.view.DisplayCutout)
androidx.window.embedding.ExtensionEmbeddingBackend: void setSplitRules(java.util.Set)
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.util.Map describePerson(androidx.core.app.Person)
androidx.window.layout.SidecarWindowBackend$Companion: boolean isSidecarVersionSupported(androidx.window.core.Version)
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
org.threeten.bp.chrono.JapaneseEra: java.lang.Object writeReplace()
androidx.core.widget.CompoundButtonCompat$Api23Impl: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getType(java.lang.Object)
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onLowMemory()
androidx.appcompat.widget.Toolbar: void setTitle(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setBigTextStyle(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type valueOf(java.lang.String)
androidx.core.content.FileProvider: FileProvider()
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.util.ArrayList loadScheduledNotifications(android.content.Context)
androidx.window.embedding.SplitInfo: int hashCode()
com.razorpay.CheckoutBridge: void showAlertDialog(java.lang.String,java.lang.String,java.lang.String)
androidx.window.layout.SidecarCompat: void unregisterComponentCallback(android.app.Activity)
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
androidx.window.embedding.ActivityRule: boolean equals(java.lang.Object)
com.google.android.material.button.MaterialButton: void setStrokeColor(android.content.res.ColorStateList)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void cancelNotification(java.lang.Integer,java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean onNewIntent(android.content.Intent)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity getActivity()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.util.ArrayList readMessages(java.util.ArrayList)
com.google.android.material.textfield.TextInputLayout: void setErrorContentDescription(java.lang.CharSequence)
androidx.cardview.widget.CardView: float getCardElevation()
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction valueOf(java.lang.String)
io.flutter.plugins.camera.CameraState: io.flutter.plugins.camera.CameraState[] values()
androidx.constraintlayout.widget.Guideline: void setGuidelineEnd(int)
org.threeten.bp.ZoneRegion: java.lang.Object writeReplace()
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCloseIcon()
androidx.core.widget.TextViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
com.google.android.material.button.MaterialButtonToggleGroup: int getFirstVisibleChildIndex()
com.google.firestore.bundle.BundledQuery$LimitType: com.google.firestore.bundle.BundledQuery$LimitType[] values()
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] values()
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDeviceState(androidx.window.sidecar.SidecarDeviceState,androidx.window.sidecar.SidecarDeviceState)
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController access$getGlobalInstance$cp()
com.google.android.material.chip.Chip: void setChipIconSize(float)
com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)
com.google.android.material.card.MaterialCardView: void setProgress(float)
io.grpc.okhttp.OkHttpChannelBuilder: io.grpc.okhttp.OkHttpChannelBuilder transportExecutor(java.util.concurrent.Executor)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
org.threeten.bp.chrono.HijrahDate: java.lang.Object writeReplace()
androidx.window.embedding.ActivityRule: boolean getAlwaysExpand()
com.google.firestore.v1.ListenResponse$ResponseTypeCase: com.google.firestore.v1.ListenResponse$ResponseTypeCase valueOf(java.lang.String)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.android.HandlerContext createDispatcher(java.util.List)
androidx.window.embedding.SplitController: void unregisterRule(androidx.window.embedding.EmbeddingRule)
androidx.window.embedding.EmbeddingInterfaceCompat: void setSplitRules(java.util.Set)
com.google.android.material.card.MaterialCardView: int getCheckedIconSize()
androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
com.google.android.material.textfield.TextInputLayout: void setPrefixTextAppearance(int)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.internal.VisibilityAwareImageButton: int getUserSetVisibility()
androidx.window.embedding.ActivityStack: java.util.List getActivities$window_release()
com.google.android.material.button.MaterialButton: void setCornerRadius(int)
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int,kotlin.coroutines.Continuation)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: boolean validBounds(android.app.Activity,androidx.window.core.Bounds)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken valueOf(java.lang.String)
androidx.core.app.ActivityCompat$Api16Impl: void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
com.google.firestore.v1.BatchGetDocumentsResponse$ResultCase: com.google.firestore.v1.BatchGetDocumentsResponse$ResultCase[] values()
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend access$getGlobalInstance$cp()
androidx.window.R$id: R$id()
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getChild(android.graphics.drawable.DrawableContainer$DrawableContainerState,int)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_1_0()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] values()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.graphics.Bitmap getBitmapFromSource(android.content.Context,java.lang.Object,com.dexterous.flutterlocalnotifications.models.BitmapSource)
androidx.window.embedding.SplitPairRule: androidx.window.embedding.SplitPairRule plus$window_release(androidx.window.embedding.SplitPairFilter)
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.firestore.v1.Value$ValueTypeCase: com.google.firestore.v1.Value$ValueTypeCase[] values()
com.google.android.material.internal.NavigationMenuItemView: NavigationMenuItemView(android.content.Context,android.util.AttributeSet)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(int)
androidx.core.app.ActivityCompat$Api23Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
androidx.window.embedding.SplitPairRule: boolean getFinishSecondaryWithPrimary()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
org.threeten.bp.temporal.IsoFields$Unit: org.threeten.bp.temporal.IsoFields$Unit valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setBigPictureStyle(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
androidx.window.layout.WindowMetricsCalculatorCompat: WindowMetricsCalculatorCompat()
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
com.razorpay.CheckoutBridge: void onsubmit(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
com.google.android.material.chip.Chip: void setCloseIconVisible(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.app.AlarmManager getAlarmManager(android.content.Context)
com.google.android.material.chip.Chip: float getCloseIconStartPadding()
com.google.android.material.chip.Chip: void setChipBackgroundColorResource(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedScheduleNextNotificationMatchingDateComponents(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
org.threeten.bp.chrono.HijrahEra: org.threeten.bp.chrono.HijrahEra valueOf(java.lang.String)
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
com.google.android.material.button.MaterialButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.razorpay.CheckoutBridge: void requestExtraAnalyticsData()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setInboxStyle(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
androidx.constraintlayout.widget.ConstraintHelper: int[] getReferencedIds()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPasswordVisibilityToggleContentDescription()
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetLeft(android.view.DisplayCutout)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsP$window_release(android.app.Activity)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.appcompat.widget.SearchView: void setInputType(int)
com.google.android.material.chip.ChipGroup: int getChipCount()
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
com.google.firebase.auth.FirebaseAuth: com.google.firebase.auth.FirebaseAuth getInstance()
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getStrokeColorStateList()
org.threeten.bp.DayOfWeek: org.threeten.bp.DayOfWeek[] values()
androidx.window.layout.WindowMetricsCalculatorDecorator: androidx.window.layout.WindowMetricsCalculator decorate(androidx.window.layout.WindowMetricsCalculator)
com.google.android.material.card.MaterialCardView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.ExtensionEmbeddingBackend getInstance()
androidx.core.view.ViewCompat$Api16Impl: boolean hasTransientState(android.view.View)
com.google.protobuf.FieldType: com.google.protobuf.FieldType valueOf(java.lang.String)
com.razorpay.P$_S_: void relay(java.lang.String)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: boolean isAutoMirrored(android.graphics.drawable.Drawable)
androidx.core.view.accessibility.AccessibilityEventCompat$Api19Impl: int getContentChangeTypes(android.view.accessibility.AccessibilityEvent)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnLayoutChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnLayoutChangeListener)
androidx.window.layout.HardwareFoldingFeature: int hashCode()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(android.content.res.ColorStateList)
org.threeten.bp.zone.Ser: java.lang.Object readResolve()
androidx.core.view.ViewCompat$Api16Impl: android.view.ViewParent getParentForAccessibility(android.view.View)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: RuntimeTypeAdapterFactory(java.lang.Class,java.lang.String)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite valueOf(java.lang.String)
androidx.core.widget.TextViewCompat$Api17Impl: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
org.threeten.bp.zone.ZoneOffsetTransitionRule: java.lang.Object writeReplace()
com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy valueOf(java.lang.String)
androidx.window.layout.WindowMetricsCalculator$Companion: void reset()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZResource(int)
com.google.android.material.button.MaterialButton: int getTextWidth()
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
androidx.appcompat.widget.SearchView: void setIconified(boolean)
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontal(int)
com.google.android.material.button.MaterialButton: int getIconGravity()
androidx.window.core.Bounds: Bounds(int,int,int,int)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
org.threeten.bp.Instant: java.lang.Object writeReplace()
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] values()
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
com.google.firebase.firestore.MetadataChanges: com.google.firebase.firestore.MetadataChanges valueOf(java.lang.String)
androidx.window.core.Bounds: int getHeight()
com.razorpay.CheckoutActivity: CheckoutActivity()
com.google.android.material.chip.Chip: android.text.TextUtils$TruncateAt getEllipsize()
androidx.window.embedding.EmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
androidx.window.embedding.SplitInfo: boolean equals(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(java.lang.CharSequence)
co.paystack.flutterpaystack.AuthActivity$setup$AuthResponse17JI: void processContent(java.lang.String)
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
com.google.android.material.internal.FlowLayout: int getRowCount()
com.google.android.material.textfield.TextInputLayout: void setSuffixText(java.lang.CharSequence)
com.google.android.material.bottomappbar.BottomAppBar: void setElevation(float)
androidx.window.layout.WindowInfoTracker$-CC: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
com.google.common.util.concurrent.DirectExecutor: com.google.common.util.concurrent.DirectExecutor valueOf(java.lang.String)
com.google.firebase.firestore.util.AsyncQueue$TimerId: com.google.firebase.firestore.util.AsyncQueue$TimerId[] values()
androidx.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
com.google.android.material.chip.Chip: void setHideMotionSpecResource(int)
com.google.android.material.appbar.AppBarLayout: void setElevation(float)
com.google.android.material.chip.Chip: java.lang.CharSequence getChipText()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.String toString()
io.grpc.okhttp.internal.framed.HeadersMode: io.grpc.okhttp.internal.framed.HeadersMode[] values()
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context,android.util.AttributeSet)
com.google.firebase.database.collection.LLRBNode$Color: com.google.firebase.database.collection.LLRBNode$Color valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidth()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getErrorIconDrawable()
com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver: ScheduledNotificationReceiver()
androidx.core.view.ViewCompat$Api17Impl: int getPaddingStart(android.view.View)
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void removeNotificationFromCache(android.content.Context,java.lang.Integer)
androidx.constraintlayout.widget.Barrier: int getMargin()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthResource(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.chip.Chip: void setTextEndPadding(float)
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setGravity(int)
com.razorpay.l: boolean getBoolean(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap decodeImage(java.nio.ByteBuffer,long)
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
io.flutter.plugins.camera.DartMessenger$DeviceEventType: io.flutter.plugins.camera.DartMessenger$DeviceEventType[] values()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedSchedule(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.view.ViewCompat$Api15Impl: boolean hasOnClickListeners(android.view.View)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void initialize(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.media.AudioAttributesImplApi26Parcelizer: AudioAttributesImplApi26Parcelizer()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.Integer tryParseInt(java.lang.String)
androidx.core.view.ViewConfigurationCompat$Api28Impl: int getScaledHoverSlop(android.view.ViewConfiguration)
androidx.window.layout.FoldingFeature: boolean isSeparating()
com.google.firebase.FirebaseCommonRegistrar: FirebaseCommonRegistrar()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
androidx.constraintlayout.widget.Placeholder: void setContentId(int)
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitXml(android.content.Context,int)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.PersonDetails readPersonDetails(java.util.Map)
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
com.google.android.material.chip.Chip: void setCheckedIconVisible(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void scheduleNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.lang.Boolean)
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion()
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCustomSize(int)
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
androidx.cardview.widget.CardView: void setUseCompatPadding(boolean)
com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite[] values()
com.google.android.material.chip.Chip: void setChipEndPadding(float)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconView()
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat()
io.flutter.plugins.firebase.messaging.FlutterFirebaseAppRegistrar: FlutterFirebaseAppRegistrar()
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
androidx.window.embedding.MatcherUtils: boolean areActivityOrIntentComponentsMatching$window_release(android.app.Activity,android.content.ComponentName)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportImageTintList()
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getHINGE$cp()
androidx.window.layout.SidecarAdapter$Companion: java.util.List getSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipStrokeColor()
androidx.core.view.ViewCompat$Api16Impl: int getImportantForAccessibility(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: BigTextStyleInformation(java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean)
com.google.android.material.textfield.TextInputLayout: void setPrefixTextColor(android.content.res.ColorStateList)
org.threeten.bp.OffsetDateTime: java.lang.Object writeReplace()
com.baseflow.geolocator.location.ServiceStatus: com.baseflow.geolocator.location.ServiceStatus[] values()
com.google.android.material.circularreveal.CircularRevealFrameLayout: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
io.flutter.app.FlutterApplication: FlutterApplication()
androidx.core.view.MenuItemCompat$Api26Impl: int getAlphabeticModifiers(android.view.MenuItem)
com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar: void setBackgroundTint(android.content.res.ColorStateList)
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
org.threeten.bp.Year: java.lang.Object readResolve()
androidx.window.core.Version: java.lang.String toString()
io.grpc.TlsChannelCredentials$Feature: io.grpc.TlsChannelCredentials$Feature[] values()
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: long lseek(java.io.FileDescriptor,long,int)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnLongClickListener(android.view.View$OnLongClickListener)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type valueOf(java.lang.String)
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getObbDirs(android.content.Context)
com.google.firebase.firestore.LoadBundleTaskProgress$TaskState: com.google.firebase.firestore.LoadBundleTaskProgress$TaskState valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String getNextFireDate(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readLargeIconInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
com.google.android.material.internal.NavigationMenuItemView: void setIconSize(int)
org.threeten.bp.chrono.ChronoLocalDateTimeImpl: java.lang.Object writeReplace()
androidx.core.view.ViewCompat$Api18Impl: void setClipBounds(android.view.View,android.graphics.Rect)
io.grpc.ConnectivityState: io.grpc.ConnectivityState[] values()
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion()
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_1_0$cp()
kotlin.jvm.internal.FunctionReference: int getArity()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getStrokeColor()
com.google.firebase.datatransport.TransportRegistrar: com.google.android.datatransport.TransportFactory lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.google.android.material.internal.CheckableImageButton: CheckableImageButton(android.content.Context,android.util.AttributeSet)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setStyle(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setNumericShortcut(android.view.MenuItem,char,int)
androidx.window.embedding.ActivityFilter: java.lang.String toString()
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior()
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$702(io.flutter.embedding.android.FlutterSplashView$SavedState,android.os.Bundle)
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimation(android.view.View,java.lang.Runnable)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
androidx.window.layout.HardwareFoldingFeature: boolean equals(java.lang.Object)
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
com.google.firestore.admin.v1.Index$IndexField$ValueModeCase: com.google.firestore.admin.v1.Index$IndexField$ValueModeCase valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColorStateList(android.content.res.ColorStateList)
kotlin.jvm.internal.CallableReference: java.lang.Object call(java.lang.Object[])
androidx.window.embedding.SplitPairRule: int hashCode()
androidx.window.R$styleable: R$styleable()
androidx.core.app.ActivityCompat$Api16Impl: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)
androidx.window.layout.SidecarCompat: SidecarCompat(androidx.window.sidecar.SidecarInterface,androidx.window.layout.SidecarAdapter)
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField valueOf(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
com.google.android.material.card.MaterialCardView: void setDragged(boolean)
androidx.core.view.ViewCompat$Api17Impl: int getLabelFor(android.view.View)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
androidx.core.view.ViewCompat$Api19Impl: void setAccessibilityLiveRegion(android.view.View,int)
com.google.android.material.button.MaterialButton: int getCornerRadius()
com.google.android.material.textfield.TextInputLayout: int getHelperTextCurrentTextColor()
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnClickListener(android.view.View$OnClickListener)
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void loadLibrary()
com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator: com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator[] values()
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getRippleColor()
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.window.layout.SidecarWindowBackend: void getWindowLayoutChangeCallbacks$annotations()
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
org.threeten.bp.OffsetDateTime: java.lang.Object readResolve()
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorResource(int)
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.core.Bounds: int getRight()
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterTextColor()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.NotificationDetails from(java.util.Map)
com.google.android.material.card.MaterialCardView: void setRippleColorResource(int)
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
io.grpc.okhttp.internal.Protocol: io.grpc.okhttp.internal.Protocol valueOf(java.lang.String)
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)
androidx.cardview.widget.CardView: int getContentPaddingBottom()
com.google.android.material.card.MaterialCardView: void setUseCompatPadding(boolean)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
androidx.core.widget.EdgeEffectCompat$Api21Impl: void onPull(android.widget.EdgeEffect,float,float)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
androidx.core.view.MenuItemCompat$Api26Impl: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
com.google.android.material.textfield.TextInputLayout: void setHintTextColor(android.content.res.ColorStateList)
androidx.core.os.ConfigurationCompat$Api24Impl: android.os.LocaleList getLocales(android.content.res.Configuration)
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
com.google.android.material.button.MaterialButton: void setInsetTop(int)
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String toString()
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.FoldingFeature translate$window_release(android.app.Activity,androidx.window.extensions.layout.FoldingFeature)
com.google.android.gms.internal.firebase-auth-api.zzafg: com.google.android.gms.internal.firebase-auth-api.zzafg[] values()
androidx.core.view.ViewCompat$Api29Impl: java.util.List getSystemGestureExclusionRects(android.view.View)
org.threeten.bp.chrono.JapaneseEra: java.lang.Object readResolve()
com.google.protobuf.FieldType$Collection: com.google.protobuf.FieldType$Collection valueOf(java.lang.String)
io.flutter.plugins.camera.DartMessenger$DeviceEventType: io.flutter.plugins.camera.DartMessenger$DeviceEventType valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readColor(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleMargin()
androidx.browser.browseractions.BrowserActionsFallbackMenuView: BrowserActionsFallbackMenuView(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setChipEndPaddingResource(int)
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void repeat(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.widget.TextViewCompat$Api17Impl: void setTextDirection(android.view.View,int)
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
com.google.firebase.firestore.core.ViewSnapshot$SyncState: com.google.firebase.firestore.core.ViewSnapshot$SyncState valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void setLastInfo(java.util.List)
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$State getState()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
com.google.firebase.firestore.core.OnlineState: com.google.firebase.firestore.core.OnlineState valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getNestedScrollAxes()
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.core.view.ViewCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.View)
androidx.recyclerview.widget.RecyclerView: int getScrollState()
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status[] values()
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetTop(android.view.DisplayCutout)
com.google.firebase.components.ComponentDiscoveryService: ComponentDiscoveryService()
androidx.core.app.AlarmManagerCompat$Api23Impl: void setAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invokeSuspend(java.lang.Object)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.app.Person buildPerson(android.content.Context,com.dexterous.flutterlocalnotifications.models.PersonDetails)
androidx.core.view.GravityCompat$Api17Impl: void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readMessagingStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
com.google.android.material.button.MaterialButton: int getStrokeWidth()
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.core.view.ViewGroupCompat$Api21Impl: void setTransitionGroup(android.view.ViewGroup,boolean)
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
androidx.constraintlayout.widget.Barrier: Barrier(android.content.Context,android.util.AttributeSet)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setWindowLayoutType(android.widget.PopupWindow,int)
androidx.window.embedding.ActivityStack: int hashCode()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
com.google.android.material.chip.ChipGroup: int getChipSpacingVertical()
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.reflect.Method preHandler()
com.google.android.material.button.MaterialButton: void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setOnCheckedChangeListenerInternal(android.widget.CompoundButton$OnCheckedChangeListener)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateIntentPredicates(java.util.Set)
com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)
androidx.window.layout.WindowMetricsCalculator$Companion: WindowMetricsCalculator$Companion()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getAnimationMode()
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
com.razorpay.CheckoutBridge: void onCheckoutRendered()
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
io.grpc.okhttp.OkHttpFrameLogger$Direction: io.grpc.okhttp.OkHttpFrameLogger$Direction valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api17Impl: void setPaddingRelative(android.view.View,int,int,int,int)
com.google.android.material.card.MaterialCardView: void setCheckedIconSizeResource(int)
androidx.window.layout.HardwareFoldingFeature: HardwareFoldingFeature(androidx.window.core.Bounds,androidx.window.layout.HardwareFoldingFeature$Type,androidx.window.layout.FoldingFeature$State)
com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue: com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue[] values()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getExpandedComponentIdHint()
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitRules$window_release(android.content.Context,int)
com.google.android.material.textfield.TextInputLayout: void setEndIconVisible(boolean)
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
com.google.android.material.chip.ChipGroup: void setOnCheckedChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedChangeListener)
androidx.window.layout.EmptyDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.google.android.material.chip.Chip: void setChipIconResource(int)
com.google.firebase.firestore.core.LimboDocumentChange$Type: com.google.firebase.firestore.core.LimboDocumentChange$Type valueOf(java.lang.String)
com.google.firebase.firestore.Source: com.google.firebase.firestore.Source[] values()
com.google.android.material.appbar.AppBarLayout: int getPendingAction()
androidx.window.embedding.SplitPlaceholderRule: boolean equals(java.lang.Object)
androidx.window.embedding.EmbeddingAdapter: java.util.List translate(java.util.List)
androidx.core.content.ContextCompat$Api28Impl: java.util.concurrent.Executor getMainExecutor(android.content.Context)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void stopForegroundService(io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
com.google.android.material.chip.ChipGroup: void setSelectionRequired(boolean)
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction[] values()
androidx.core.widget.TextViewCompat$Api28Impl: android.text.PrecomputedText$Params getTextMetricsParams(android.widget.TextView)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void saveScheduledNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.google.android.material.chip.ChipGroup: void setSingleSelection(int)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
androidx.constraintlayout.widget.Guideline: Guideline(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.FlutterJNI: void lambda$decodeImage$0(long,android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
org.threeten.bp.format.ResolverStyle: org.threeten.bp.format.ResolverStyle[] values()
org.threeten.bp.format.TextStyle: org.threeten.bp.format.TextStyle[] values()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
com.google.protobuf.WireFormat$JavaType: com.google.protobuf.WireFormat$JavaType[] values()
org.threeten.bp.MonthDay: java.lang.Object writeReplace()
com.google.android.material.internal.NavigationMenuItemView: void setNeedsEmptyIcon(boolean)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails fromNotificationDetails(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnAttachStateChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnAttachStateChangeListener)
androidx.core.os.TraceCompat$Api18Impl: void beginSection(java.lang.String)
androidx.window.layout.WindowLayoutInfo: WindowLayoutInfo(java.util.List)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
com.google.android.gms.common.api.GoogleApiActivity: GoogleApiActivity()
com.google.android.material.internal.ForegroundLinearLayout: ForegroundLinearLayout(android.content.Context,android.util.AttributeSet)
com.google.protobuf.GeneratedMessageLite$MethodToInvoke: com.google.protobuf.GeneratedMessageLite$MethodToInvoke[] values()
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
androidx.media.AudioAttributesImplApi26: AudioAttributesImplApi26()
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: void close(java.io.FileDescriptor)
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String toString()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.window.layout.SidecarAdapter: SidecarAdapter()
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float getDistance(android.widget.EdgeEffect)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
androidx.core.view.ViewPropertyAnimatorCompat$Api19Impl: android.view.ViewPropertyAnimator setUpdateListener(android.view.ViewPropertyAnimator,android.animation.ValueAnimator$AnimatorUpdateListener)
com.google.android.material.chip.Chip: void setCloseIconSizeResource(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion()
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void createNotificationChannelGroup(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context,android.util.AttributeSet)
kotlin.jvm.internal.CallableReference: java.lang.String getName()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept(java.util.List)
com.google.android.material.card.MaterialCardView: void setCheckedIconTint(android.content.res.ColorStateList)
androidx.cardview.widget.CardView: void setMinimumWidth(int)
com.google.android.material.button.MaterialButtonToggleGroup: int getVisibleButtonCount()
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.window.embedding.SplitController: boolean isSplitSupported()
androidx.window.layout.DisplayCompatHelperApi17: DisplayCompatHelperApi17()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.core.app.ActivityCompat$Api23Impl: void onSharedElementsReady(java.lang.Object)
org.threeten.bp.chrono.Chronology: java.lang.Object readResolve()
io.grpc.internal.MessageDeframer$State: io.grpc.internal.MessageDeframer$State valueOf(java.lang.String)
com.razorpay.PluginCheckoutBridge: void invokePopup(java.lang.String)
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode valueOf(java.lang.String)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getHINGE()
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment getTopEdgeTreatment()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onDetachedFromActivityForConfigChanges()
com.google.android.material.card.MaterialCardView: void setPreventCornerOverlap(boolean)
io.grpc.internal.ClientStreamListener$RpcProgress: io.grpc.internal.ClientStreamListener$RpcProgress valueOf(java.lang.String)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsN$window_release(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
com.google.android.material.internal.FlowLayout: void setItemSpacing(int)
com.google.android.material.textfield.TextInputLayout: void setCounterTextAppearance(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: int getDrawableResourceId(android.content.Context,java.lang.String)
com.google.android.material.card.MaterialCardView: void setOnCheckedChangeListener(com.google.android.material.card.MaterialCardView$OnCheckedChangeListener)
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy[] values()
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
androidx.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
androidx.recyclerview.widget.RecyclerView: int getBaseline()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
com.google.common.util.concurrent.DirectExecutor: com.google.common.util.concurrent.DirectExecutor[] values()
com.google.android.material.chip.ChipGroup: void setSingleLine(int)
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
androidx.window.layout.WindowInfoTrackerImpl: WindowInfoTrackerImpl(androidx.window.layout.WindowMetricsCalculator,androidx.window.layout.WindowBackend)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void registerWith(io.flutter.plugin.common.PluginRegistry$Registrar)
androidx.window.layout.WindowInfoTracker$-CC: void reset()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
com.razorpay.CircularProgressView: CircularProgressView(android.content.Context,android.util.AttributeSet)
com.google.firebase.firestore.proto.Target$TargetTypeCase: com.google.firebase.firestore.proto.Target$TargetTypeCase[] values()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetBottom(android.view.DisplayCutout)
androidx.window.embedding.EmbeddingCompat$Companion: java.lang.Integer getExtensionApiLevel()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] values()
androidx.core.widget.EdgeEffectCompat$Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
com.google.android.gms.location.LocationRequest: LocationRequest()
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcel)
com.google.android.material.chip.Chip: void setChipStrokeColorResource(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View,int,int)
androidx.constraintlayout.widget.ConstraintLayout: int getMaxHeight()
androidx.constraintlayout.widget.ConstraintLayout: void setMinWidth(int)
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior(android.content.Context,android.util.AttributeSet)
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewAttachedToWindow(android.view.View)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(int)
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: NotificationDetails()
com.google.android.material.chip.Chip: float getChipStrokeWidth()
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
org.threeten.bp.MonthDay: java.lang.Object readResolve()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type getType$window_release()
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType[] values()
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity[] values()
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.Set getSplitRules()
androidx.window.core.Version: Version(int,int,int,java.lang.String)
com.google.android.material.internal.ForegroundLinearLayout: void setForegroundGravity(int)
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter access$getSidecarAdapter$p(androidx.window.layout.SidecarCompat)
com.google.android.material.chip.Chip: void setChipCornerRadius(float)
co.paystack.flutterpaystack.AuthActivity: AuthActivity()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: void setIconEndPaddingResource(int)
com.razorpay.CheckoutBridge: void ondismiss()
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpecResource(int)
androidx.core.widget.NestedScrollView: int getScrollRange()
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsIceCreamSandwich$window_release(android.app.Activity)
io.flutter.plugins.imagepicker.CameraDevice: io.flutter.plugins.imagepicker.CameraDevice[] values()
androidx.window.layout.SidecarCompat: java.util.Map access$getWindowListenerRegisteredContexts$p(androidx.window.layout.SidecarCompat)
com.google.android.material.card.MaterialCardView: void setChecked(boolean)
com.razorpay.CheckoutBridge: void setPaymentID(java.lang.String)
org.threeten.bp.LocalDateTime: java.lang.Object writeReplace()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction valueOf(java.lang.String)
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type[] values()
com.google.android.material.chip.Chip: void setShowMotionSpecResource(int)
com.google.android.material.chip.Chip: void setChipTextResource(int)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingService: FlutterFirebaseMessagingService()
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: int getErrorCurrentTextColors()
io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity valueOf(java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype[] values()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginStart(android.view.ViewGroup$MarginLayoutParams)
com.google.firebase.messaging.EnhancedIntentService: EnhancedIntentService()
androidx.window.layout.SidecarWindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumWidth()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior()
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencySortedChildren()
com.google.android.material.chip.Chip: void setChipBackgroundColor(android.content.res.ColorStateList)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int)
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource[] values()
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior()
androidx.window.layout.WindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.constraintlayout.widget.ConstraintLayout: void setMaxWidth(int)
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPredicates$lambda-6(java.util.Set,android.app.Activity)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect maximumWindowBounds(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,java.nio.ByteBuffer,int,long)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpecResource(int)
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(android.graphics.drawable.Drawable)
com.google.protobuf.ProtoSyntax: com.google.protobuf.ProtoSyntax valueOf(java.lang.String)
com.google.protobuf.FieldType: com.google.protobuf.FieldType[] values()
org.threeten.bp.ZonedDateTime: java.lang.Object readResolve()
org.threeten.bp.chrono.ChronoZonedDateTimeImpl: java.lang.Object readResolve()
androidx.core.view.ViewCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
androidx.core.view.ViewCompat$Api26Impl: boolean restoreDefaultFocus(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleMargin(float)
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException: GooglePlayServicesMissingManifestValueException()
com.dexterous.flutterlocalnotifications.models.SoundSource: com.dexterous.flutterlocalnotifications.models.SoundSource[] values()
com.google.firestore.v1.Value$ValueTypeCase: com.google.firestore.v1.Value$ValueTypeCase valueOf(java.lang.String)
kotlin.jvm.internal.CallableReference: boolean isAbstract()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZResource(int)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept$lambda-0(androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo)
androidx.window.embedding.SplitPairFilter: java.lang.String toString()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getBackgroundTintList()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
com.google.firebase.firestore.Query$Direction: com.google.firebase.firestore.Query$Direction[] values()
com.google.firebase.messaging.FirebaseMessagingRegistrar: com.google.firebase.messaging.FirebaseMessaging lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
androidx.window.core.Version: int compareTo(androidx.window.core.Version)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocused(int)
com.google.android.material.chip.ChipGroup: void setShowDividerHorizontal(int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.app.AlarmManagerCompat$Api19Impl: void setExact(android.app.AlarmManager,int,long,android.app.PendingIntent)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.net.Uri retrieveSoundResourceUri(android.content.Context,java.lang.String,com.dexterous.flutterlocalnotifications.models.SoundSource)
android.support.v4.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
com.google.android.material.textfield.TextInputLayout: void setHelperText(java.lang.CharSequence)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setLights(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion()
androidx.window.embedding.ActivityStack: boolean isEmpty()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSize()
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
androidx.window.embedding.ActivityStack: boolean equals(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: int getCounterMaxLength()
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
androidx.core.view.ViewCompat$Api26Impl: void setNextClusterForwardId(android.view.View,int)
androidx.core.graphics.TypefaceCompatUtil$Api19Impl: android.os.ParcelFileDescriptor openFileDescriptor(android.content.ContentResolver,android.net.Uri,java.lang.String,android.os.CancellationSignal)
com.google.android.material.chip.Chip: void setTextAppearance(int)
com.dexterous.flutterlocalnotifications.models.SoundSource: com.dexterous.flutterlocalnotifications.models.SoundSource valueOf(java.lang.String)
com.google.protobuf.FieldType$Collection: com.google.protobuf.FieldType$Collection[] values()
com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver: void onReceive(android.content.Context,android.content.Intent)
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy valueOf(java.lang.String)
io.flutter.plugins.camera.features.resolution.ResolutionPreset: io.flutter.plugins.camera.features.resolution.ResolutionPreset valueOf(java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout: int getMinHeight()
com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
com.google.firebase.firestore.core.FieldFilter$Operator: com.google.firebase.firestore.core.FieldFilter$Operator[] values()
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding valueOf(java.lang.String)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)
com.razorpay.CheckoutBridge: void callNativeIntent(java.lang.String,java.lang.String)
org.threeten.bp.format.SignStyle: org.threeten.bp.format.SignStyle[] values()
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
com.google.android.gms.cloudmessaging.CloudMessagingReceiver: CloudMessagingReceiver()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.app.NotificationManagerCompat getNotificationManager(android.content.Context)
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface access$getExtensionCallback$p(androidx.window.layout.SidecarCompat)
androidx.cardview.widget.CardView: float getMaxCardElevation()
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
com.google.firebase.firestore.DocumentSnapshot$ServerTimestampBehavior: com.google.firebase.firestore.DocumentSnapshot$ServerTimestampBehavior[] values()
androidx.core.app.RemoteInput$Api26Impl: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcelable)
androidx.window.layout.WindowInfoTracker$Companion: void reset()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
com.google.android.material.chip.Chip: void setCloseIconStartPadding(float)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void resumeWith(java.lang.Object)
androidx.core.content.ContextCompat$Api24Impl: java.io.File getDataDir(android.content.Context)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type[] values()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedPadding()
androidx.core.view.ViewConfigurationCompat$Api28Impl: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration)
io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setEndIconTintList(android.content.res.ColorStateList)
com.google.firebase.firestore.core.UserData$Source: com.google.firebase.firestore.core.UserData$Source[] values()
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setMediaStyle(androidx.core.app.NotificationCompat$Builder)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String,java.lang.String,java.util.List)
com.google.android.material.textfield.TextInputLayout: void setHintAnimationEnabled(boolean)
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
io.flutter.plugins.camera.features.flash.FlashMode: io.flutter.plugins.camera.features.flash.FlashMode valueOf(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
kotlin.jvm.internal.CallableReference: java.lang.Object getBoundReceiver()
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
com.google.android.material.button.MaterialButton: void setIconTint(android.content.res.ColorStateList)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTint(android.graphics.drawable.Drawable,int)
androidx.window.core.Bounds: java.lang.String toString()
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealScrimColor(int)
androidx.core.text.ICUCompat$Api24Impl: java.lang.String getScript(java.lang.Object)
androidx.window.embedding.SplitRuleParser: android.content.ComponentName buildClassName(java.lang.String,java.lang.CharSequence)
com.google.android.material.chip.Chip: float getChipCornerRadius()
com.google.android.material.textfield.TextInputLayout: android.graphics.Typeface getTypeface()
androidx.window.embedding.ActivityFilter: android.content.ComponentName getComponentName()
com.google.android.material.button.MaterialButton: void setPressed(boolean)
com.google.android.material.button.MaterialButton: void setCheckable(boolean)
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
com.google.gson.ToNumberPolicy: com.google.gson.ToNumberPolicy valueOf(java.lang.String)
androidx.window.embedding.SplitController: void setStaticSplitRules(java.util.Set)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: byte[] castObjectToByteArray(java.lang.Object)
com.google.android.material.chip.Chip: void setChipStrokeWidthResource(int)
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
com.google.android.material.chip.Chip: void setChipStartPaddingResource(int)
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getResId(java.lang.Object)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
androidx.window.layout.WindowMetricsCalculator$-CC: void reset()
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
androidx.core.app.NavUtils$Api16Impl: android.content.Intent getParentActivityIntent(android.app.Activity)
androidx.window.embedding.SplitPlaceholderRule: androidx.window.embedding.SplitPlaceholderRule plus$window_release(androidx.window.embedding.ActivityFilter)
com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
com.dexterous.flutterlocalnotifications.ScheduledNotificationBootReceiver: ScheduledNotificationBootReceiver()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateParentMetricsPredicate(androidx.window.embedding.SplitRule)
org.threeten.bp.chrono.IsoEra: org.threeten.bp.chrono.IsoEra[] values()
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend access$getWindowBackend$p(androidx.window.layout.WindowInfoTrackerImpl)
com.google.android.material.card.MaterialCardView: void setCheckedIconMargin(int)
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.appcompat.widget.SearchView: int getImeOptions()
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
com.google.android.material.textfield.TextInputLayout: void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
com.dexterous.flutterlocalnotifications.models.SoundSource: SoundSource(java.lang.String,int)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.window.embedding.ActivityFilter: boolean matchesActivity(android.app.Activity)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCardBackgroundColor()
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCardForegroundColor()
com.google.firebase.firestore.DocumentChange$Type: com.google.firebase.firestore.DocumentChange$Type[] values()
androidx.constraintlayout.widget.VirtualLayout: void setVisibility(int)
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean launchedActivityFromHistory(android.content.Intent)
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.grpc.okhttp.internal.framed.ErrorCode: io.grpc.okhttp.internal.framed.ErrorCode[] values()
io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: java.util.List getComponents()
org.threeten.bp.OffsetTime: java.lang.Object writeReplace()
com.google.android.material.chip.Chip: void setCloseIconTintResource(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
androidx.window.embedding.EmbeddingAdapter: boolean translateParentMetricsPredicate$lambda-4(androidx.window.embedding.SplitRule,android.view.WindowMetrics)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
com.razorpay.l: void setInt(java.lang.String,int)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityFilter parseActivityFilter(android.content.Context,android.content.res.XmlResourceParser)
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
androidx.core.app.RemoteInput$Api29Impl: int getEditChoicesBeforeSending(java.lang.Object)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void lambda$getPluginConstantsForFirebaseApp$0(com.google.firebase.FirebaseApp,com.google.android.gms.tasks.TaskCompletionSource)
androidx.constraintlayout.widget.Barrier: int getType()
androidx.core.view.ViewCompat$Api17Impl: void setLabelFor(android.view.View,int)
com.google.android.material.chip.Chip: void setTextStartPaddingResource(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$600(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpec(com.google.android.material.animation.MotionSpec)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getRippleColor()
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
org.threeten.bp.chrono.MinguoEra: org.threeten.bp.chrono.MinguoEra[] values()
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1(androidx.window.layout.SidecarCompat,android.app.Activity)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
io.grpc.okhttp.internal.framed.ErrorCode: io.grpc.okhttp.internal.framed.ErrorCode valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.google.android.material.card.MaterialCardView: void setCheckedIconResource(int)
com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
org.threeten.bp.temporal.IsoFields$Field: org.threeten.bp.temporal.IsoFields$Field[] values()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.WindowLayoutInfo translate$window_release(android.app.Activity,androidx.window.extensions.layout.WindowLayoutInfo)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion valueOf(java.lang.String)
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.SidecarWindowBackend getInstance(android.content.Context)
io.flutter.plugins.camera.CameraState: io.flutter.plugins.camera.CameraState valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
androidx.window.embedding.ActivityStack: boolean contains(android.app.Activity)
com.google.android.material.internal.NavigationMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtended(boolean)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture,java.lang.Runnable)
com.razorpay.RzpAssist: void copyToClipboard(java.lang.String)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.dexterous.flutterlocalnotifications.models.Time: com.dexterous.flutterlocalnotifications.models.Time from(java.util.Map)
androidx.core.content.ContextCompat$Api16Impl: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
androidx.core.widget.TextViewCompat$Api23Impl: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
kotlin.jvm.internal.FunctionReference: java.lang.String toString()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KFunction getReflected()
com.razorpay.RzpAssist: void trackEvent(java.lang.String,java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar: void setTitle(java.lang.CharSequence)
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View)
io.grpc.internal.ClientStreamListener$RpcProgress: io.grpc.internal.ClientStreamListener$RpcProgress[] values()
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
android.support.v4.media.AudioAttributesImplApi26Parcelizer: void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel)
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipIcon()
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(int)
io.flutter.plugins.camera.features.exposurelock.ExposureMode: io.flutter.plugins.camera.features.exposurelock.ExposureMode valueOf(java.lang.String)
com.google.firebase.installations.FirebaseInstallationsRegistrar: FirebaseInstallationsRegistrar()
kotlin.jvm.internal.Lambda: int getArity()
androidx.window.layout.WindowInfoTracker: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
kotlin.jvm.internal.CallableReference: java.lang.Object callBy(java.util.Map)
com.google.firebase.database.collection.LLRBNode$Color: com.google.firebase.database.collection.LLRBNode$Color[] values()
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)
androidx.core.content.ContextCompat$Api16Impl: void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
com.google.android.material.internal.NavigationMenuView: NavigationMenuView(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setLayoutDirection(int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
android.support.v4.media.AudioAttributesImplApi26Parcelizer: androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel)
com.google.android.material.chip.Chip: void setCheckable(boolean)
com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue: com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue valueOf(java.lang.String)
com.google.firestore.v1.TargetChange$TargetChangeType: com.google.firestore.v1.TargetChange$TargetChangeType valueOf(java.lang.String)
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.razorpay.CryptLib$EncryptMode: com.razorpay.CryptLib$EncryptMode valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifier(int)
androidx.window.layout.SidecarAdapter: java.util.List translate(java.util.List,androidx.window.sidecar.SidecarDeviceState)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior()
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
com.google.android.material.button.MaterialButton: void setRippleColorResource(int)
androidx.appcompat.app.AppCompatViewInflater: AppCompatViewInflater()
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean)
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getFOLD$cp()
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
com.google.android.material.internal.NavigationMenuItemView: void setActionView(android.view.View)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String getNextFireDateMatchingDateTimeComponents(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.Object invokeSuspend(java.lang.Object)
com.google.firestore.v1.Precondition$ConditionTypeCase: com.google.firestore.v1.Precondition$ConditionTypeCase valueOf(java.lang.String)
androidx.window.layout.WindowInfoTrackerDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getBackgroundTintList()
org.threeten.bp.chrono.IsoEra: org.threeten.bp.chrono.IsoEra valueOf(java.lang.String)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
android.support.v4.media.AudioAttributesImplApi26Parcelizer: AudioAttributesImplApi26Parcelizer()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealScrimColor(int)
com.dexterous.flutterlocalnotifications.utils.StringUtils: StringUtils()
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component1(android.util.Pair)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidBigPictureResources(io.flutter.plugin.common.MethodChannel$Result,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.models.MessageDetails: MessageDetails(java.lang.String,java.lang.Long,com.dexterous.flutterlocalnotifications.models.PersonDetails,java.lang.String,java.lang.String)
kotlin.jvm.internal.FunctionReference: FunctionReference(int)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
com.google.firebase.firestore.model.MutableDocument$DocumentType: com.google.firebase.firestore.model.MutableDocument$DocumentType valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundColor(int)
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale forLocale(java.util.Locale)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreRegistrar: FlutterFirebaseFirestoreRegistrar()
androidx.window.layout.FoldingFeature$Orientation: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
androidx.window.layout.DisplayCompatHelperApi28: DisplayCompatHelperApi28()
com.google.android.material.card.MaterialCardView: void setCheckedIcon(android.graphics.drawable.Drawable)
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api16Impl: int getWindowSystemUiVisibility(android.view.View)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api16Impl: void requestFitSystemWindows(android.view.View)
com.google.firebase.firestore.core.Query$LimitType: com.google.firebase.firestore.core.Query$LimitType valueOf(java.lang.String)
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface getSidecar()
com.google.android.material.internal.CheckableImageButton: void setCheckable(boolean)
androidx.window.layout.WindowLayoutInfo: java.util.List getDisplayFeatures()
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setAdapter(android.widget.ListAdapter)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: WindowMetricsCalculator$Companion$reset$1()
com.google.android.material.bottomappbar.BottomAppBar: int getLeftInset()
io.grpc.SecurityLevel: io.grpc.SecurityLevel[] values()
io.grpc.internal.ManagedChannelImpl$ResolutionState: io.grpc.internal.ManagedChannelImpl$ResolutionState valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getError()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
androidx.window.embedding.ActivityStack: java.lang.String toString()
org.threeten.bp.chrono.ChronoZonedDateTimeImpl: java.lang.Object writeReplace()
androidx.core.view.ViewGroupCompat$Api21Impl: boolean isTransitionGroup(android.view.ViewGroup)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
androidx.core.view.ViewCompat$Api26Impl: boolean hasExplicitFocusable(android.view.View)
androidx.window.layout.ActivityCompatHelperApi24: ActivityCompatHelperApi24()
io.grpc.internal.KeepAliveManager$State: io.grpc.internal.KeepAliveManager$State[] values()
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
androidx.window.embedding.ActivityRule: androidx.window.embedding.ActivityRule plus$window_release(androidx.window.embedding.ActivityFilter)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetRight(android.view.DisplayCutout)
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
com.google.firebase.messaging.threads.ThreadPriority: com.google.firebase.messaging.threads.ThreadPriority[] values()
com.google.firebase.datatransport.TransportRegistrar: java.util.List getComponents()
androidx.window.embedding.SplitController: void access$setGlobalInstance$cp(androidx.window.embedding.SplitController)
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getSuffixTextView()
androidx.window.layout.SidecarCompat$TranslatingCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
com.google.firebase.firestore.model.FieldIndex$Segment$Kind: com.google.firebase.firestore.model.FieldIndex$Segment$Kind valueOf(java.lang.String)
com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable getStatusBarForeground()
androidx.window.layout.HardwareFoldingFeature: boolean isSeparating()
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
androidx.window.embedding.EmbeddingCompat: void setSplitRules(java.util.Set)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
com.google.android.material.bottomappbar.BottomAppBar: int getRightInset()
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.core.provider.FontProvider$Api16Impl: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.Object)
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
androidx.core.widget.TextViewCompat$Api23Impl: void setHyphenationFrequency(android.widget.TextView,int)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: SidecarWindowBackend$WindowLayoutChangeCallbackWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
org.threeten.bp.chrono.JapaneseDate: void readObject(java.io.ObjectInputStream)
androidx.window.layout.SidecarCompat$DistinctElementCallback: SidecarCompat$DistinctElementCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: boolean isExtensionVersionSupported(java.lang.Integer)
androidx.window.embedding.EmbeddingInterfaceCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
androidx.window.core.Bounds: boolean equals(java.lang.Object)
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getRippleColorStateList()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setTimeoutAfter(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
androidx.window.core.Version: int hashCode()
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object)
com.google.firebase.firestore.core.UserData$Source: com.google.firebase.firestore.core.UserData$Source valueOf(java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout: void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener)
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$602(io.flutter.embedding.android.FlutterSplashView$SavedState,java.lang.String)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollY(android.view.accessibility.AccessibilityRecord)
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getDefault()
androidx.core.widget.ListViewCompat$Api19Impl: void scrollListBy(android.widget.ListView,int)
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
com.google.firestore.v1.StructuredQuery$Filter$FilterTypeCase: com.google.firestore.v1.StructuredQuery$Filter$FilterTypeCase[] values()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
com.google.firebase.firestore.util.Logger$Level: com.google.firebase.firestore.util.Logger$Level[] values()
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior(android.content.Context,android.util.AttributeSet)
io.flutter.plugins.firebase.messaging.FlutterFirebaseAppRegistrar: java.util.List getComponents()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setCategory(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
org.threeten.bp.chrono.IsoChronology: java.lang.Object readResolve()
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpecResource(int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View,int,int,int,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.razorpay.CheckoutBridge: boolean isUserRegistered(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
com.google.android.material.chip.Chip: void setElevation(float)
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion()
androidx.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility valueOf(java.lang.String)
kotlin.jvm.internal.FunctionReference: boolean isSuspend()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getHideMotionSpec()
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.card.MaterialCardView: void setCardElevation(float)
androidx.constraintlayout.widget.Guideline: void setVisibility(int)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
androidx.constraintlayout.widget.ConstraintHelper: ConstraintHelper(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHelperText()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
androidx.window.embedding.ExtensionEmbeddingBackend: void getSplitChangeCallbacks$annotations()
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
androidx.core.graphics.drawable.IconCompat$Api28Impl: android.net.Uri getUri(java.lang.Object)
androidx.window.layout.SidecarCompat$FirstAttachAdapter: SidecarCompat$FirstAttachAdapter(androidx.window.layout.SidecarCompat,android.app.Activity)
com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable()
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColor(int)
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setChipStrokeWidth(float)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButtonToggleGroup: java.util.List getCheckedButtonIds()
com.razorpay.RzpAssist: void onOtpParsed(java.lang.String)
io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType[] values()
com.google.android.material.internal.NavigationMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component2(android.util.Pair)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setVibrationPattern(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
com.razorpay.CheckoutBridge: void toast(java.lang.String,int)
com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator: com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator valueOf(java.lang.String)
org.threeten.bp.Ser: java.lang.Object readResolve()
androidx.core.view.ViewCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
com.google.firebase.auth.FirebaseAuthRegistrar: FirebaseAuthRegistrar()
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
com.google.android.material.textfield.TextInputLayout: void setExpandedHintEnabled(boolean)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
com.google.android.material.button.MaterialButton: void setIcon(android.graphics.drawable.Drawable)
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type[] values()
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: java.io.FileDescriptor dup(java.io.FileDescriptor)
io.flutter.plugins.firebase.messaging.JobIntentService: JobIntentService()
com.google.firebase.firestore.DocumentChange$Type: com.google.firebase.firestore.DocumentChange$Type valueOf(java.lang.String)
androidx.window.embedding.SplitInfo: boolean contains(android.app.Activity)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] values()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.app.NotificationCompat$MessagingStyle$Message createMessage(android.content.Context,com.dexterous.flutterlocalnotifications.models.MessageDetails)
org.threeten.bp.temporal.IsoFields$Unit: org.threeten.bp.temporal.IsoFields$Unit[] values()
com.google.android.material.textfield.TextInputLayout: void setEndIconCheckable(boolean)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getSuffixTextColor()
com.google.android.material.appbar.AppBarLayout: int getUpNestedPreScrollRange()
com.baseflow.geolocator.location.LocationAccuracyStatus: com.baseflow.geolocator.location.LocationAccuracyStatus[] values()
kotlin.jvm.internal.CallableReference: boolean isFinal()
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewDetachedFromWindow(android.view.View)
com.google.android.material.chip.ChipGroup: ChipGroup(android.content.Context,android.util.AttributeSet)
com.razorpay.AnalyticsProperty$Scope: com.razorpay.AnalyticsProperty$Scope[] values()
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeColor()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
com.google.android.material.textfield.TextInputLayout: void setStartIconCheckable(boolean)
androidx.window.layout.SidecarAdapter$Companion: int getSidecarDevicePosture$window_release(androidx.window.sidecar.SidecarDeviceState)
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
androidx.core.text.ICUCompat$Api21Impl: java.lang.String getScript(java.util.Locale)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderText(java.lang.CharSequence)
com.google.android.material.button.MaterialButton: void setBackgroundColor(int)
com.google.android.material.card.MaterialCardView: void setCheckable(boolean)
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion()
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnLongClickListener(android.view.View$OnLongClickListener)
com.google.android.material.card.MaterialCardView: void setStrokeColor(android.content.res.ColorStateList)
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect currentWindowBounds(android.app.Activity)
com.google.android.material.chip.Chip: void setCheckedIconResource(int)
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
com.google.android.material.chip.ChipGroup: int getCheckedChipId()
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPairPredicates$lambda-1(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthRegistrar: java.util.List getComponents()
androidx.window.embedding.SplitRule: int hashCode()
com.razorpay.l: float getFloat(java.lang.String)
androidx.window.layout.SidecarWindowBackend: boolean isActivityRegistered(android.app.Activity)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedScheduleNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.lang.Boolean)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation getCompletion()
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readGroupingInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: java.lang.Object invoke(java.lang.Object)
com.google.android.material.radiobutton.MaterialRadioButton: void setUseMaterialThemeColors(boolean)
androidx.core.view.ViewCompat$Api26Impl: void setKeyboardNavigationCluster(android.view.View,boolean)
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getCounterOverflowDescription()
com.google.android.material.chip.ChipGroup: void setShowDividerVertical(int)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedSize()
androidx.window.embedding.SplitRule: int getMinSmallestWidth()
org.threeten.bp.LocalDate: java.lang.Object readResolve()
androidx.window.embedding.SplitInfo: float getSplitRatio()
androidx.window.layout.FoldingFeature$OcclusionType: FoldingFeature$OcclusionType(java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: AppCompatCheckBox(android.content.Context,android.util.AttributeSet)
com.razorpay.NetworkType: com.razorpay.NetworkType[] values()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
androidx.window.embedding.EmbeddingAdapter: EmbeddingAdapter()
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$600(io.flutter.embedding.android.FlutterSplashView$SavedState)
com.google.android.material.chip.Chip: void setIconStartPadding(float)
androidx.core.view.ViewCompat$Api19Impl: boolean isLaidOut(android.view.View)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.layout.SidecarAdapter: androidx.window.layout.WindowLayoutInfo translate(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarDeviceState)
com.google.android.gms.auth.api.signin.internal.SignInHubActivity: SignInHubActivity()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
com.google.protobuf.Writer$FieldOrder: com.google.protobuf.Writer$FieldOrder valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
org.threeten.bp.temporal.IsoFields$Field: org.threeten.bp.temporal.IsoFields$Field valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle[] values()
com.dexterous.flutterlocalnotifications.NotificationStyle: NotificationStyle(java.lang.String,int)
com.google.firebase.firestore.core.CompositeFilter$Operator: com.google.firebase.firestore.core.CompositeFilter$Operator valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: NotificationChannelGroupDetails()
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.Class access$100(com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory)
org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser: org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser valueOf(java.lang.String)
org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition: org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition[] values()
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior()
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior()
com.google.firebase.firestore.local.IndexManager$IndexType: com.google.firebase.firestore.local.IndexManager$IndexType[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleY(float)
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
androidx.window.embedding.MatcherUtils: boolean wildcardMatch(java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
org.threeten.bp.format.SignStyle: org.threeten.bp.format.SignStyle valueOf(java.lang.String)
androidx.core.widget.TextViewCompat$Api16Impl: int getMinLines(android.widget.TextView)
com.google.android.gms.internal.firebase-auth-api.zzyo: com.google.android.gms.internal.firebase-auth-api.zzyo[] values()
io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error valueOf(java.lang.String)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getActionTextColorAlpha()
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior()
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
androidx.core.view.ViewCompat$Api26Impl: boolean isFocusedByDefault(android.view.View)
io.flutter.plugins.camera.features.flash.FlashMode: io.flutter.plugins.camera.features.flash.FlashMode[] values()
com.google.android.material.textfield.TextInputLayout: void setStartIconVisible(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI)
androidx.constraintlayout.widget.Placeholder: int getEmptyVisibility()
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField[] values()
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
com.google.android.material.bottomappbar.BottomAppBar: android.content.res.ColorStateList getBackgroundTint()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
io.grpc.okhttp.internal.framed.HeadersMode: io.grpc.okhttp.internal.framed.HeadersMode valueOf(java.lang.String)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: MessagingStyleInformation(com.dexterous.flutterlocalnotifications.models.PersonDetails,java.lang.String,java.lang.Boolean,java.util.ArrayList,java.lang.Boolean,java.lang.Boolean)
androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
com.google.firestore.v1.StructuredQuery$Filter$FilterTypeCase: com.google.firestore.v1.StructuredQuery$Filter$FilterTypeCase valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: int getHintCurrentCollapsedTextColor()
com.razorpay.CheckoutBridge: void callNativeIntent(java.lang.String)
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextColor(android.content.res.ColorStateList)
com.google.firebase.firestore.LoadBundleTaskProgress$TaskState: com.google.firebase.firestore.LoadBundleTaskProgress$TaskState[] values()
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHint()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
io.grpc.okhttp.internal.Platform$TlsExtensionType: io.grpc.okhttp.internal.Platform$TlsExtensionType[] values()
androidx.core.widget.ImageViewCompat$Api21Impl: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
com.google.android.material.timepicker.ClockFaceView: ClockFaceView(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
androidx.window.layout.DisplayFeature: android.graphics.Rect getBounds()
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeatures(java.util.List,java.util.List)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
com.google.android.material.textfield.TextInputLayout: void setHelperTextTextAppearance(int)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnClickListener(android.view.View$OnClickListener)
androidx.window.embedding.SplitRule: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context,android.util.AttributeSet)
com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()
com.google.android.gms.internal.firebase-auth-api.zzacq: com.google.android.gms.internal.firebase-auth-api.zzacq[] values()
androidx.window.embedding.SplitRule: float getSplitRatio()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShrinkMotionSpec()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void addListener(androidx.core.util.Consumer)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetBottom(android.view.DisplayCutout)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery: TransportBackendDiscovery()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void cancelAllNotifications(io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.button.MaterialButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.razorpay.CheckoutBridge: void relay(java.lang.String)
com.google.android.material.chip.ChipGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
androidx.window.embedding.SplitPairFilter: SplitPairFilter(android.content.ComponentName,android.content.ComponentName,java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
com.google.firebase.firestore.FirebaseFirestoreException$Code: com.google.firebase.firestore.FirebaseFirestoreException$Code[] values()
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onConfigurationChanged(android.content.res.Configuration)
androidx.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api29Impl: void rebase(android.content.res.Resources$Theme)
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes[] values()
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
io.grpc.internal.DnsNameResolver$JdkAddressResolver: io.grpc.internal.DnsNameResolver$JdkAddressResolver valueOf(java.lang.String)
androidx.core.app.RemoteInput$Api20Impl: android.os.Bundle getResultsFromIntent(android.content.Intent)
com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()
io.grpc.Context$DirectExecutor: io.grpc.Context$DirectExecutor valueOf(java.lang.String)
org.threeten.bp.format.TextStyle: org.threeten.bp.format.TextStyle valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setHint(int)
androidx.constraintlayout.widget.Placeholder: void setEmptyVisibility(int)
com.google.firebase.firestore.util.AsyncQueue$TimerId: com.google.firebase.firestore.util.AsyncQueue$TimerId valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.app.Notification createNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getErrorContentDescription()
com.google.android.material.chip.Chip: void setChecked(boolean)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer getCallback()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackground(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextColor(android.content.res.ColorStateList)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setExpandedComponentIdHint(int)
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
com.google.android.material.timepicker.TimePickerView: TimePickerView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority[] values()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View$AccessibilityDelegate,android.view.View)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
androidx.window.layout.WindowInfoTracker$Companion: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType: com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType[] values()
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents valueOf(java.lang.String)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.android.material.button.MaterialButton: void setBackground(android.graphics.drawable.Drawable)
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
io.grpc.internal.DnsNameResolver$JdkAddressResolver: io.grpc.internal.DnsNameResolver$JdkAddressResolver[] values()
com.google.android.material.internal.NavigationMenuItemView: void setTextColor(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getDefaultHintTextColor()
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval valueOf(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
com.google.firebase.firestore.FirestoreRegistrar: java.util.List getComponents()
com.google.android.material.chip.Chip: float getCloseIconSize()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
com.google.android.material.chip.Chip: void setRippleColor(android.content.res.ColorStateList)
androidx.core.text.TextUtilsCompat$Api17Impl: int getLayoutDirectionFromLocale(java.util.Locale)
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState,int)
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.FirebaseMessaging getInstance(com.google.firebase.FirebaseApp)
androidx.core.view.ViewCompat$Api16Impl: int getMinimumWidth(android.view.View)
org.threeten.bp.ZoneRegion: java.lang.Object readResolve()
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
io.flutter.plugins.camera.features.exposurelock.ExposureMode: io.flutter.plugins.camera.features.exposurelock.ExposureMode[] values()
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode[] values()
android.support.v4.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior()
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason valueOf(java.lang.String)
com.google.firebase.auth.internal.GenericIdpActivity: GenericIdpActivity()
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.button.MaterialButton: void setStrokeWidthResource(int)
com.google.protobuf.ProtoSyntax: com.google.protobuf.ProtoSyntax[] values()
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
androidx.window.embedding.EmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation)
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
androidx.window.embedding.EmbeddingBackend: void setSplitRules(java.util.Set)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: int getErrorTextCurrentColor()
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)
com.google.android.material.button.MaterialButton: void setStrokeWidth(int)
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context,android.util.AttributeSet)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getActiveNotifications(io.flutter.plugin.common.MethodChannel$Result)
io.grpc.okhttp.OkHttpChannelBuilder: io.grpc.okhttp.OkHttpChannelBuilder sslSocketFactory(javax.net.ssl.SSLSocketFactory)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEndIconDrawable()
org.threeten.bp.Month: org.threeten.bp.Month valueOf(java.lang.String)
com.razorpay.l: void setString(java.lang.String,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval[] values()
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
androidx.window.core.Version: java.lang.String getDescription()
androidx.core.widget.TextViewCompat$Api23Impl: int getBreakStrategy(android.widget.TextView)
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(android.content.res.ColorStateList)
com.google.firestore.admin.v1.Index$IndexField$Order: com.google.firestore.admin.v1.Index$IndexField$Order[] values()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: void invokeSuspend$lambda-0(kotlinx.coroutines.channels.Channel,androidx.window.layout.WindowLayoutInfo)
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy valueOf(java.lang.String)
androidx.window.core.Version$bigInteger$2: Version$bigInteger$2(androidx.window.core.Version)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeWindowLayoutInfoListener(androidx.core.util.Consumer)
androidx.window.embedding.ExtensionEmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Class,java.lang.String,java.lang.String,int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumHeight()
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
androidx.cardview.widget.CardView: void setPreventCornerOverlap(boolean)
com.razorpay.CheckoutBridge: java.lang.String getSdkPlugins()
androidx.window.layout.SidecarCompat$DistinctElementCallback: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
com.google.android.material.button.MaterialButtonToggleGroup: java.lang.CharSequence getAccessibilityClassName()
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
com.google.android.material.theme.MaterialComponentsViewInflater: MaterialComponentsViewInflater()
androidx.constraintlayout.widget.ConstraintLayout: int getPaddingWidth()
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable getReflected()
com.google.android.material.chip.Chip: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readBigTextStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
androidx.window.layout.SidecarCompat: SidecarCompat(android.content.Context)
com.google.android.gms.maps.GoogleMapOptions: GoogleMapOptions()
androidx.core.widget.TextViewCompat$Api16Impl: int getMaxLines(android.widget.TextView)
androidx.window.embedding.EmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.window.layout.SidecarWindowBackend: void access$setGlobalInstance$cp(androidx.window.layout.SidecarWindowBackend)
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
com.google.firebase.firestore.remote.ConnectivityMonitor$NetworkStatus: com.google.firebase.firestore.remote.ConnectivityMonitor$NetworkStatus valueOf(java.lang.String)
com.razorpay.CheckoutBridge: void onCheckoutBackPress()
androidx.cardview.widget.CardView: void setCardBackgroundColor(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
com.google.firebase.firestore.proto.Target$TargetTypeCase: com.google.firebase.firestore.proto.Target$TargetTypeCase valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getFOLD()
com.google.android.material.textview.MaterialTextView: MaterialTextView(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
org.threeten.bp.chrono.JapaneseDate: java.lang.Object writeReplace()
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setVisibility(int)
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getPrimaryActivityStack()
androidx.window.layout.WindowMetricsCalculatorCompat: android.view.DisplayCutout getCutoutForDisplay(android.view.Display)
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
com.google.android.material.chip.Chip: float getChipIconSize()
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(int)
com.google.protobuf.WireFormat$JavaType: com.google.protobuf.WireFormat$JavaType valueOf(java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable getIcon()
com.google.android.material.chip.Chip: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.core.view.ViewCompat$Api26Impl: boolean isImportantForAutofill(android.view.View)
io.grpc.okhttp.OkHttpChannelBuilder: io.grpc.okhttp.OkHttpChannelBuilder forTarget(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setVisibility(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: ExtensionEmbeddingBackend$SplitListenerWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.android.material.button.MaterialButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
com.google.android.datatransport.cct.CctBackendFactory: com.google.android.datatransport.runtime.backends.TransportBackend create(com.google.android.datatransport.runtime.backends.CreationContext)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBar$Behavior getBehavior()
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleRoundedCornerRadius(float)
com.google.firebase.firestore.Source: com.google.firebase.firestore.Source valueOf(java.lang.String)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateRefreshRate(float)
com.google.firebase.firestore.MetadataChanges: com.google.firebase.firestore.MetadataChanges[] values()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: BaseTransientBottomBar$SnackbarBaseLayout(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: void setSplashDrawable(android.graphics.drawable.Drawable)
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus[] values()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getAdjustedDefault()
androidx.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason[] values()
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setSmallIcon(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getIconTintMode()
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidthFocused()
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,java.lang.ref.WeakReference)
org.threeten.bp.temporal.ChronoUnit: org.threeten.bp.temporal.ChronoUnit valueOf(java.lang.String)
androidx.window.embedding.SplitController: void addSplitListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.protobuf.Writer$FieldOrder: com.google.protobuf.Writer$FieldOrder[] values()
androidx.window.embedding.SplitPairFilter: boolean equals(java.lang.Object)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: boolean isEmpty()
com.google.android.material.chip.ChipGroup: void setChipSpacingResource(int)
androidx.core.view.ViewCompat$Api17Impl: int generateViewId()
androidx.core.content.res.FontResourcesParserCompat$Api21Impl: int getType(android.content.res.TypedArray,int)
com.razorpay.PluginCheckoutBridge: void processPayment(java.lang.String)
kotlin.coroutines.jvm.internal.SuspendLambda: java.lang.String toString()
androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable getStatusBarBackground()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
androidx.constraintlayout.widget.ConstraintLayout: void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet)
com.baseflow.geolocator.location.LocationAccuracyStatus: com.baseflow.geolocator.location.LocationAccuracyStatus valueOf(java.lang.String)
com.google.firebase.auth.FirebaseAuthRegistrar: com.google.firebase.auth.FirebaseAuth lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButton: int getIconPadding()
androidx.core.app.RemoteInput$Api26Impl: android.app.RemoteInput$Builder setAllowDataType(android.app.RemoteInput$Builder,java.lang.String,boolean)
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
com.razorpay.AnalyticsProperty$Scope: com.razorpay.AnalyticsProperty$Scope valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
com.razorpay.CheckoutBridge: void onload()
org.threeten.bp.LocalDateTime: java.lang.Object readResolve()
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents[] values()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setMessagingStyle(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointRegionalIndicator(int)
androidx.window.core.Bounds: android.graphics.Rect toRect()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
org.threeten.bp.LocalTime: java.lang.Object writeReplace()
androidx.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType: io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType valueOf(java.lang.String)
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.ExtensionInterfaceCompat initAndVerifyExtension(android.content.Context)
com.google.android.material.chip.Chip: void setChipText(java.lang.CharSequence)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation getDefaultStyleInformation(java.util.Map)
io.grpc.SecurityLevel: io.grpc.SecurityLevel valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getNotificationAppLaunchDetails(io.flutter.plugin.common.MethodChannel$Result)
androidx.window.layout.SidecarWindowBackend: SidecarWindowBackend(androidx.window.layout.ExtensionInterfaceCompat)
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
androidx.window.core.Version: int compareTo(java.lang.Object)
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
androidx.window.embedding.SplitRule: SplitRule()
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
androidx.window.layout.EmptyDecorator: EmptyDecorator()
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy[] values()
com.google.android.material.chip.Chip: void setCheckableResource(int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeature(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDisplayFeature)
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addWindowLayoutInfoListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.android.material.appbar.AppBarLayout: int getLiftOnScrollTargetViewId()
com.google.gson.ToNumberPolicy: com.google.gson.ToNumberPolicy[] values()
androidx.core.app.BundleCompat$Api18Impl: android.os.IBinder getBinder(android.os.Bundle,java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
androidx.core.view.DisplayCutoutCompat$Api28Impl: java.util.List getBoundingRects(android.view.DisplayCutout)
com.google.android.material.textfield.TextInputLayout: TextInputLayout(android.content.Context,android.util.AttributeSet)
androidx.window.embedding.SplitController: void access$setStaticSplitRules(androidx.window.embedding.SplitController,java.util.Set)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void lambda$didReinitializeFirebaseCore$1(com.google.android.gms.tasks.TaskCompletionSource)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(int)
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.content.Intent getLaunchIntent(android.content.Context)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackground(android.graphics.drawable.Drawable)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void setLastInfo(androidx.window.layout.WindowLayoutInfo)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPairPredicates(java.util.Set)
com.google.android.material.chip.Chip: void setEnsureMinTouchTargetSize(boolean)
com.google.firebase.firestore.model.FieldIndex$Segment$Kind: com.google.firebase.firestore.model.FieldIndex$Segment$Kind[] values()
com.google.android.material.card.MaterialCardView: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.google.android.material.card.MaterialCardView: void setBackgroundInternal(android.graphics.drawable.Drawable)
androidx.window.layout.WindowLayoutInfo: int hashCode()
androidx.window.layout.SidecarAdapter: java.lang.String access$getTAG$cp()
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleRoundedCornerRadius()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidIcon(io.flutter.plugin.common.MethodChannel$Result,java.lang.String)
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.util.List)
com.google.android.material.card.MaterialCardView: int getContentPaddingLeft()
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KVisibility getVisibility()
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(java.lang.CharSequence)
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
androidx.core.app.Person$Api28Impl: androidx.core.app.Person fromAndroidPerson(android.app.Person)
com.google.firebase.firestore.FirebaseFirestoreException$Code: com.google.firebase.firestore.FirebaseFirestoreException$Code valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevationResource(int)
androidx.core.content.FileProvider$Api21Impl: java.io.File[] getExternalMediaDirs(android.content.Context)
androidx.core.view.ViewCompat$Api16Impl: void setHasTransientState(android.view.View,boolean)
androidx.window.core.Bounds: int getBottom()
com.google.android.material.textfield.TextInputLayout: float getHintCollapsedTextHeight()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.android.material.chip.Chip: void setTextAppearanceResource(int)
androidx.window.embedding.SplitPairRule: boolean getFinishPrimaryWithSecondary()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void applyGrouping(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAnimationMode()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getStartIconDrawable()
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails from(java.util.Map)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat getEmbeddingExtension()
com.razorpay.CheckoutBridge: void oncomplete(java.lang.String)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
com.google.android.material.chip.ChipGroup: void setChipSpacingVertical(int)
com.google.android.material.chip.Chip: void setChipIconVisible(boolean)
kotlin.jvm.internal.Lambda: Lambda(int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
com.google.firestore.v1.Precondition$ConditionTypeCase: com.google.firestore.v1.Precondition$ConditionTypeCase[] values()
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
org.threeten.bp.chrono.HijrahEra: java.lang.Object writeReplace()
androidx.cardview.widget.CardView: void setCardBackgroundColor(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
io.grpc.TlsChannelCredentials$Feature: io.grpc.TlsChannelCredentials$Feature valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
com.google.android.material.button.MaterialButton: void setShouldDrawSurfaceColorStroke(boolean)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: java.lang.Object invoke(java.lang.Object)
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getSecondaryActivityStack()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readSoundInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: void setStartIconTintMode(android.graphics.PorterDuff$Mode)
com.google.protobuf.NullValue: com.google.protobuf.NullValue[] values()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomStart()
kotlin.jvm.internal.FunctionReference: boolean isExternal()
androidx.core.app.ComponentActivity: ComponentActivity()
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.util.Map access$200(com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory)
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
com.razorpay.CheckoutBridge: void getPdfString(java.lang.String,java.lang.String)
com.google.android.material.appbar.AppBarLayout: void setOrientation(int)
com.google.android.material.button.MaterialButton: void setRippleColor(android.content.res.ColorStateList)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationX(float)
androidx.lifecycle.ViewModel: ViewModel()
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: int getCircularRevealScrimColor()
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
kotlin.jvm.internal.FunctionReference: boolean isOperator()
com.google.firestore.v1.StructuredQuery$FieldFilter$Operator: com.google.firestore.v1.StructuredQuery$FieldFilter$Operator[] values()
androidx.core.widget.PopupWindowCompat$Api23Impl: void setOverlapAnchor(android.widget.PopupWindow,boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
androidx.core.widget.TextViewCompat$Api28Impl: void setFirstBaselineToTopHeight(android.widget.TextView,int)
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
org.threeten.bp.ZoneOffset: java.lang.Object readResolve()
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
org.threeten.bp.Ser: Ser()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addListener(java.util.concurrent.Executor,androidx.core.util.Consumer,kotlinx.coroutines.flow.Flow)
androidx.window.layout.WindowMetricsCalculator$-CC: androidx.window.layout.WindowMetricsCalculator getOrCreate()
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)
androidx.window.layout.SidecarCompat$TranslatingCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
androidx.window.embedding.SplitRuleParser: SplitRuleParser()
androidx.cardview.widget.CardView: void setRadius(float)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void startForegroundService(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
androidx.core.graphics.drawable.IconCompat$Api30Impl: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputEditText: TextInputEditText(android.content.Context,android.util.AttributeSet)
com.google.android.material.snackbar.SnackbarContentLayout: void setMaxInlineActionWidth(int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode valueOf(java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend: void access$setGlobalInstance$cp(androidx.window.embedding.ExtensionEmbeddingBackend)
androidx.window.layout.WindowMetrics: WindowMetrics(android.graphics.Rect)
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
com.google.android.material.chip.Chip: float getTextStartPadding()
com.google.android.material.internal.CheckableImageButton: void setPressable(boolean)
android.support.v4.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
com.razorpay.CryptLib$EncryptMode: com.razorpay.CryptLib$EncryptMode[] values()
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.dexterous.flutterlocalnotifications.models.BitmapSource: BitmapSource(java.lang.String,int)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KDeclarationContainer getOwner()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidLargeIcon(io.flutter.plugin.common.MethodChannel$Result,java.lang.Object,com.dexterous.flutterlocalnotifications.models.BitmapSource)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPrefixText()
com.google.android.material.circularreveal.CircularRevealFrameLayout: int getCircularRevealScrimColor()
com.razorpay.RzpAssist: void trackEvent(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
com.google.firebase.messaging.FirebaseMessagingService: FirebaseMessagingService()
androidx.constraintlayout.widget.Placeholder: android.view.View getContent()
com.google.android.material.chip.Chip: void setOnCloseIconClickListener(android.view.View$OnClickListener)
io.grpc.stub.ClientCalls$StubType: io.grpc.stub.ClientCalls$StubType valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconEndPaddingResource(int)
androidx.window.embedding.SplitPairRule: java.util.Set getFilters()
androidx.window.layout.ExtensionInterfaceCompat: boolean validateExtensionInterface()
com.google.android.material.internal.FlowLayout: FlowLayout(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.widget.ConstraintLayout: void setId(int)
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior(android.content.Context,android.util.AttributeSet)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void showNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPlaceholderText()
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readPlatformSpecifics(java.util.Map,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status[] values()
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipDrawable()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomEnd()
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.lang.Object)
com.google.android.material.button.MaterialButton: void setIconResource(int)
com.google.android.material.internal.NavigationMenuItemView: void setHorizontalPadding(int)
androidx.core.app.ActivityCompat$Api23Impl: void requestPermissions(android.app.Activity,java.lang.String[],int)
androidx.core.view.ViewCompat$Api19Impl: boolean isAttachedToWindow(android.view.View)
androidx.window.embedding.EmbeddingBackend: boolean isSplitSupported()
com.google.android.material.chip.Chip: void setChipIconTintResource(int)
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status[] values()
androidx.window.embedding.SplitRule: int getLayoutDirection()
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSizeDimension()
io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State[] values()
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getNotificationChannels(io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.SearchView: int getPreferredHeight()
com.google.firebase.firestore.core.Query$LimitType: com.google.firebase.firestore.core.Query$LimitType[] values()
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: NotificationChannelAction(java.lang.String,int)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readLedInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.firestore.v1.BatchGetDocumentsResponse$ResultCase: com.google.firestore.v1.BatchGetDocumentsResponse$ResultCase valueOf(java.lang.String)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
androidx.core.view.ViewCompat$Api17Impl: void setLayerPaint(android.view.View,android.graphics.Paint)
androidx.window.layout.SidecarAdapter$Companion: int getRawSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition: org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition valueOf(java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
androidx.core.content.ContextCompat$Api24Impl: android.content.Context createDeviceProtectedStorageContext(android.content.Context)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus valueOf(java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar: void setSubtitle(java.lang.CharSequence)
com.google.firebase.firestore.core.DocumentViewChange$Type: com.google.firebase.firestore.core.DocumentViewChange$Type[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationZ(float)
com.google.android.material.bottomappbar.BottomAppBar: void setHideOnScroll(boolean)
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList getWindowLayoutChangeCallbacks()
androidx.appcompat.widget.Toolbar: int getPopupTheme()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior(android.content.Context,android.util.AttributeSet)
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
androidx.constraintlayout.widget.ConstraintLayout: ConstraintLayout(android.content.Context,android.util.AttributeSet)
com.google.firebase.datatransport.TransportRegistrar: TransportRegistrar()
org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser: org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser[] values()
org.threeten.bp.Month: org.threeten.bp.Month[] values()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
com.google.android.material.textfield.TextInputLayout: void setEndIconTintMode(android.graphics.PorterDuff$Mode)
kotlin.coroutines.jvm.internal.ContinuationImpl: void releaseIntercepted()
androidx.core.view.ViewCompat$Api17Impl: void setLayoutDirection(android.view.View,int)
androidx.window.core.Version$bigInteger$2: java.lang.Object invoke()
androidx.window.embedding.SplitController$Companion: SplitController$Companion()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(int)
androidx.constraintlayout.widget.VirtualLayout: void setElevation(float)
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior(android.content.Context,android.util.AttributeSet)
com.dexterous.flutterlocalnotifications.utils.BooleanUtils: boolean getValue(java.lang.Boolean)
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
com.google.android.gms.internal.firebase-auth-api.zzmt: com.google.android.gms.internal.firebase-auth-api.zzmt[] values()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setProgress(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.google.android.material.card.MaterialCardView: int getStrokeWidth()
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getPrefixTextView()
io.grpc.Status$Code: io.grpc.Status$Code[] values()
org.threeten.bp.chrono.Chronology: java.lang.Object writeReplace()
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.Button getActionView()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.window.embedding.EmbeddingCompat$Companion: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingComponent()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
com.google.android.material.bottomappbar.BottomAppBar: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: FlutterFirebaseCoreRegistrar()
androidx.window.embedding.EmbeddingCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(int)
com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)
com.google.firebase.firestore.remote.ConnectivityMonitor$NetworkStatus: com.google.firebase.firestore.remote.ConnectivityMonitor$NetworkStatus[] values()
androidx.window.embedding.ActivityFilter: java.lang.String getIntentAction()
com.google.android.material.textfield.TextInputLayout: void setStartIconTintList(android.content.res.ColorStateList)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlin.coroutines.AbstractCoroutineContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
com.google.android.material.bottomappbar.BottomAppBar: float getCradleVerticalOffset()
com.google.android.material.chip.Chip: void setSingleLine(boolean)
com.google.android.material.chip.Chip: void setBackgroundTintList(android.content.res.ColorStateList)
org.threeten.bp.chrono.ThaiBuddhistDate: java.lang.Object writeReplace()
com.baseflow.geolocator.permission.LocationPermission: com.baseflow.geolocator.permission.LocationPermission valueOf(java.lang.String)
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void scheduleNextRepeatingNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatHoveredFocusedTranslationZ()
androidx.window.core.Version$Companion: Version$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.internal.FlowLayout: int getLineSpacing()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
com.google.firebase.firestore.model.MutableDocument$DocumentState: com.google.firebase.firestore.model.MutableDocument$DocumentState[] values()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.card.MaterialCardView: void setCheckedIconMarginResource(int)
androidx.window.embedding.SplitController: SplitController(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: BaseContinuationImpl(kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.window.layout.SidecarCompat$Companion: android.os.IBinder getActivityWindowToken$window_release(android.app.Activity)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocusedResource(int)
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getExtendMotionSpec()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
io.grpc.okhttp.OkHttpFrameLogger$SettingParams: io.grpc.okhttp.OkHttpFrameLogger$SettingParams valueOf(java.lang.String)
androidx.window.embedding.SplitPairFilter: java.lang.String getSecondaryActivityIntentAction()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readProgressInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatElevation()
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
androidx.cardview.widget.CardView: void setMaxCardElevation(float)
androidx.constraintlayout.widget.ConstraintLayout: void setOptimizationLevel(int)
org.threeten.bp.chrono.MinguoDate: java.lang.Object writeReplace()
com.google.android.material.button.MaterialButtonToggleGroup: void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton)
androidx.window.core.Version: int getMinor()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getRippleColor()
androidx.core.app.BundleCompat$Api18Impl: void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
com.google.android.material.textfield.MaterialAutoCompleteTextView: java.lang.CharSequence getHint()
com.google.android.material.card.MaterialCardView: int getContentPaddingBottom()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode)
com.razorpay.l: int getInt(java.lang.String)
com.google.android.material.card.MaterialCardView: void setBackground(android.graphics.drawable.Drawable)
androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getRippleColor()
com.razorpay.RzpAssist: void openKeyboard()
com.baseflow.geolocator.permission.LocationPermission: com.baseflow.geolocator.permission.LocationPermission[] values()
org.threeten.bp.chrono.Ser: java.lang.Object readResolve()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void deleteNotificationChannel(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.cardview.widget.CardView: int getContentPaddingLeft()
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior(android.content.Context,android.util.AttributeSet)
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.firebase.auth.FirebaseAuth: com.google.firebase.auth.FirebaseAuth getInstance(com.google.firebase.FirebaseApp)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
com.google.firestore.bundle.BundledQuery$LimitType: com.google.firestore.bundle.BundledQuery$LimitType valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void attachToNative()
androidx.core.view.ViewCompat$Api26Impl: int getImportantForAutofill(android.view.View)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
com.razorpay.CheckoutBridge: void setMerchantOptions(java.lang.String)
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
androidx.core.widget.TextViewCompat$Api17Impl: java.util.Locale getTextLocale(android.widget.TextView)
io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType: io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType[] values()
org.threeten.bp.chrono.ThaiBuddhistEra: java.lang.Object writeReplace()
androidx.core.widget.TextViewCompat$Api16Impl: boolean getIncludeFontPadding(android.widget.TextView)
androidx.window.embedding.SplitController: java.util.Set getSplitRules()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.text.Spanned fromHtml(java.lang.String)
io.flutter.plugins.urllauncher.WebViewActivity: WebViewActivity()
com.google.android.material.chip.Chip: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getActiveNotificationMessagingStyle(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.firestore.core.CompositeFilter$Operator: com.google.firebase.firestore.core.CompositeFilter$Operator[] values()
com.google.firestore.v1.TargetChange$TargetChangeType: com.google.firestore.v1.TargetChange$TargetChangeType[] values()
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
io.grpc.okhttp.NegotiationType: io.grpc.okhttp.NegotiationType valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key getKey()
com.google.firebase.firestore.FirebaseFirestore: void setClientLanguage(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
com.google.android.material.textfield.TextInputLayout: int getEndIconMode()
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextAppearance(int)
androidx.core.view.ViewCompat$Api19Impl: int getAccessibilityLiveRegion(android.view.View)
androidx.core.app.ActivityCompat$Api16Impl: void finishAffinity(android.app.Activity)
androidx.window.embedding.SplitController$Companion: void initialize(android.content.Context,int)
com.google.android.datatransport.cct.CctBackendFactory: CctBackendFactory()
androidx.core.view.ViewGroupCompat$Api21Impl: int getNestedScrollAxes(android.view.ViewGroup)
com.google.firebase.provider.FirebaseInitProvider: FirebaseInitProvider()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
io.flutter.plugins.camera.features.noisereduction.NoiseReductionMode: io.flutter.plugins.camera.features.noisereduction.NoiseReductionMode valueOf(java.lang.String)
com.google.android.material.button.MaterialButtonToggleGroup: int getCheckedButtonId()
androidx.core.view.DisplayCutoutCompat$Api28Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List)
com.google.firebase.firestore.model.MutableDocument$DocumentType: com.google.firebase.firestore.model.MutableDocument$DocumentType[] values()
com.google.android.material.button.MaterialButtonToggleGroup: MaterialButtonToggleGroup(android.content.Context,android.util.AttributeSet)
androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)
com.google.android.material.textfield.TextInputLayout: void setErrorIconVisible(boolean)
androidx.window.layout.WindowMetrics: java.lang.String toString()
androidx.window.embedding.SplitController: SplitController()
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
com.razorpay.CheckoutBridge: boolean isUserRegisteredOnUPI(java.lang.String)
com.google.firebase.firestore.proto.MaybeDocument$DocumentTypeCase: com.google.firebase.firestore.proto.MaybeDocument$DocumentTypeCase[] values()
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend access$getGlobalInstance$cp()
androidx.window.core.Bounds: int getLeft()
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getDrawable(android.graphics.drawable.InsetDrawable)
androidx.core.view.ViewCompat$Api26Impl: boolean isKeyboardNavigationCluster(android.view.View)
com.google.android.material.internal.NavigationMenuItemView: void setIconTintList(android.content.res.ColorStateList)
com.google.android.material.bottomappbar.BottomAppBar: androidx.appcompat.widget.ActionMenuView getActionMenuView()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
androidx.core.view.ViewCompat$Api16Impl: boolean getFitsSystemWindows(android.view.View)
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityIntentPredicates(java.util.Set)
com.google.android.material.chip.ChipGroup: int getChipSpacingHorizontal()
com.google.firebase.firestore.core.FieldFilter$Operator: com.google.firebase.firestore.core.FieldFilter$Operator valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.embedding.ActivityFilter: ActivityFilter(android.content.ComponentName,java.lang.String)
androidx.core.widget.TextViewCompat$Api17Impl: int getTextDirection(android.view.View)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,java.lang.Object,android.view.View$OnFocusChangeListener)
androidx.window.layout.SidecarCompat$TranslatingCallback: SidecarCompat$TranslatingCallback(androidx.window.layout.SidecarCompat)
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCloseIconTint()
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
androidx.appcompat.widget.SearchView: int getMaxWidth()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
com.dexterous.flutterlocalnotifications.utils.StringUtils: java.lang.Boolean isNullOrEmpty(java.lang.String)
com.google.android.material.button.MaterialButton: int getTextHeight()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: ExtensionsWindowLayoutInfoAdapter()
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void cancel(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding[] values()
androidx.cardview.widget.CardView: android.content.res.ColorStateList getCardBackgroundColor()
com.google.android.material.chip.Chip: void setChipIconVisible(int)
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory[] values()
com.google.firestore.v1.Write$OperationCase: com.google.firestore.v1.Write$OperationCase[] values()
com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.ViewCompat$Api16Impl: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
androidx.window.embedding.ExtensionEmbeddingBackend: boolean isSplitSupported()
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: BigPictureStyleInformation(java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.Object,com.dexterous.flutterlocalnotifications.models.BitmapSource,java.lang.Object,com.dexterous.flutterlocalnotifications.models.BitmapSource,java.lang.Boolean)
androidx.window.embedding.SplitController$Companion: androidx.window.embedding.SplitController getInstance()
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarWindowLayoutInfo(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarWindowLayoutInfo)
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
android.support.v4.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
com.google.firebase.firestore.remote.Stream$State: com.google.firebase.firestore.remote.Stream$State valueOf(java.lang.String)
io.grpc.okhttp.internal.Platform$TlsExtensionType: io.grpc.okhttp.internal.Platform$TlsExtensionType valueOf(java.lang.String)
org.threeten.bp.ZoneOffset: java.lang.Object writeReplace()
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency[] values()
androidx.cardview.widget.CardView: void setCardElevation(float)
androidx.core.app.NavUtils$Api16Impl: boolean navigateUpTo(android.app.Activity,android.content.Intent)
androidx.cardview.widget.CardView: float getRadius()
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
androidx.core.widget.TextViewCompat$Api23Impl: void setBreakStrategy(android.widget.TextView,int)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleEnabled(boolean)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.android.material.chip.Chip: void setMaxWidth(int)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase: com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase valueOf(java.lang.String)
io.flutter.plugins.imagepicker.ImagePickerFileProvider: ImagePickerFileProvider()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
com.google.android.material.internal.BaselineLayout: int getBaseline()
org.threeten.bp.LocalDate: java.lang.Object writeReplace()
androidx.core.widget.PopupWindowCompat$Api23Impl: boolean getOverlapAnchor(android.widget.PopupWindow)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readInboxStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
com.google.android.material.checkbox.MaterialCheckBox: void setUseMaterialThemeColors(boolean)
com.google.android.gms.common.api.internal.BasePendingResult: BasePendingResult()
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setContentDescription(android.view.MenuItem,java.lang.CharSequence)
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
com.google.android.material.chip.Chip: void setCheckedIconTintResource(int)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.internal.NavigationMenuItemView: void setTextAppearance(int)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setMinLines(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.google.android.material.card.MaterialCardView: void setRadius(float)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList getSplitChangeCallbacks()
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion()
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior()
androidx.window.embedding.SplitPairFilter: boolean matchesActivityIntentPair(android.app.Activity,android.content.Intent)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readChannelInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
com.google.android.material.chip.Chip: float getChipMinHeight()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageResource(int)
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
com.google.android.material.card.MaterialCardView: android.graphics.RectF getBoundsAsRectF()
com.google.firestore.v1.StructuredQuery$FieldFilter$Operator: com.google.firestore.v1.StructuredQuery$FieldFilter$Operator valueOf(java.lang.String)
androidx.core.view.MenuItemCompat$Api26Impl: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
com.google.android.material.card.MaterialCardView: void setCheckedIconSize(int)
io.grpc.okhttp.OkHttpFrameLogger$SettingParams: io.grpc.okhttp.OkHttpFrameLogger$SettingParams[] values()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
com.google.android.material.chip.Chip: float getChipEndPadding()
androidx.constraintlayout.widget.ConstraintLayout: int getMaxWidth()
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] values()
io.flutter.embedding.android.FlutterView: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource[] values()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KType getReturnType()
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton)
com.google.android.gms.internal.firebase-auth-api.zzaff: com.google.android.gms.internal.firebase-auth-api.zzaff[] values()
com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()
com.google.android.material.chip.Chip: void setChipIconTint(android.content.res.ColorStateList)
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
androidx.window.layout.WindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
com.google.android.material.chip.ChipGroup: void setChipSpacingVerticalResource(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setActivity(android.app.Activity)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(int)
com.google.android.material.appbar.AppBarLayout: float getTargetElevation()
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundResource(int)
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
com.razorpay.NetworkType: com.razorpay.NetworkType valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void initAndroidThreeTen(android.content.Context)
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
org.threeten.bp.format.ResolverStyle: org.threeten.bp.format.ResolverStyle valueOf(java.lang.String)
androidx.window.embedding.SplitPlaceholderRule: int hashCode()
kotlin.jvm.internal.FunctionReference: boolean isInline()
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory registerSubtype(java.lang.Class)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory registerSubtype(java.lang.Class,java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.Boolean canCreateNotificationChannel(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails)
com.google.android.material.chip.ChipGroup: void setChipSpacing(int)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
androidx.window.core.Bounds: boolean isZero()
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
androidx.window.layout.SidecarWindowBackend: void callbackRemovedForActivity(android.app.Activity)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
com.google.android.material.chip.Chip: java.lang.CharSequence getCloseIconContentDescription()
com.google.android.material.card.MaterialCardView: int getCheckedIconMargin()
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: boolean performAccessibilityAction(android.view.View$AccessibilityDelegate,android.view.View,int,android.os.Bundle)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getBackgroundDrawable()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
com.google.android.material.appbar.AppBarLayout: void setExpanded(boolean)
com.dexterous.flutterlocalnotifications.models.Time: Time()
com.google.android.material.card.MaterialCardView: void setCardForegroundColor(android.content.res.ColorStateList)
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZ(float)
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: DateTimeComponents(java.lang.String,int)
org.threeten.bp.zone.StandardZoneRules: java.lang.Object writeReplace()
com.google.android.material.textfield.TextInputLayout: void setEndIconActivated(boolean)
com.google.firebase.messaging.FirebaseMessagingRegistrar: FirebaseMessagingRegistrar()
androidx.core.view.ViewCompat$Api16Impl: int getMinimumHeight(android.view.View)
io.grpc.okhttp.OkHttpChannelBuilder: io.grpc.okhttp.OkHttpChannelBuilder scheduledExecutorService(java.util.concurrent.ScheduledExecutorService)
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScroll(boolean)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
com.google.android.material.chip.Chip: com.google.android.material.resources.TextAppearance getTextAppearance()
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
android.support.v4.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.app.PendingIntent getActivityPendingIntent(android.content.Context,int,android.content.Intent)
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
androidx.window.embedding.SplitRule$Api30Impl: SplitRule$Api30Impl()
com.google.android.material.appbar.AppBarLayout: int getMinimumHeightForVisibleOverlappingContent()
io.flutter.plugins.camera.features.autofocus.FocusMode: io.flutter.plugins.camera.features.autofocus.FocusMode valueOf(java.lang.String)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspot(android.graphics.drawable.Drawable,float,float)
androidx.window.core.Version$Companion: androidx.window.core.Version getUNKNOWN()
com.razorpay.CheckoutBridge: void onfault(java.lang.String)
com.google.android.material.chip.Chip: void setMaxLines(int)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory of(java.lang.Class)
org.threeten.bp.chrono.ThaiBuddhistEra: org.threeten.bp.chrono.ThaiBuddhistEra valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
androidx.core.app.RemoteInput$Api26Impl: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void pendingNotificationRequests(io.flutter.plugin.common.MethodChannel$Result)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.util.Map describeIcon(androidx.core.graphics.drawable.IconCompat)
com.google.android.material.chip.Chip: void setCheckedIconTint(android.content.res.ColorStateList)
com.google.android.material.card.MaterialCardView: void setRippleColor(android.content.res.ColorStateList)
androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)
com.google.android.material.button.MaterialButton: void setIconTintResource(int)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundColor(int)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPredicates(java.util.Set)
com.google.firestore.v1.ListenResponse$ResponseTypeCase: com.google.firestore.v1.ListenResponse$ResponseTypeCase[] values()
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag[] values()
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
com.google.android.material.chip.Chip: void setRippleColorResource(int)
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat getWindowExtension()
com.google.android.material.internal.NavigationMenuItemView: void setCheckable(boolean)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopEnd()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
androidx.window.core.Version: Version(int,int,int,java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] values()
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.google.android.material.chip.Chip: void setIconEndPadding(float)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.String access$000(com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(int)
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
org.threeten.bp.LocalTime: java.lang.Object readResolve()
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType[] values()
com.google.firebase.firestore.Query$Direction: com.google.firebase.firestore.Query$Direction valueOf(java.lang.String)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setTooltipText(android.view.MenuItem,java.lang.CharSequence)
com.google.android.material.timepicker.RadialViewGroup: RadialViewGroup(android.content.Context,android.util.AttributeSet)
androidx.window.R: R()
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent getPlaceholderIntent()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable getReflected()
com.jhatfat.MainActivity: MainActivity()
com.google.protobuf.JavaType: com.google.protobuf.JavaType[] values()
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
androidx.window.core.Version$Companion: androidx.window.core.Version getCURRENT()
androidx.window.layout.SidecarWindowBackend: void setWindowExtension(androidx.window.layout.ExtensionInterfaceCompat)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
androidx.media.AudioAttributesImplApi21: AudioAttributesImplApi21()
androidx.window.embedding.EmbeddingBackend: java.util.Set getSplitRules()
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
com.razorpay.RzpAssist: void toast(java.lang.String)
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.String permissionToOp(java.lang.String)
com.google.android.material.chip.Chip: void setChipStrokeColor(android.content.res.ColorStateList)
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.EndIconDelegate getEndIconDelegate()
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(android.graphics.drawable.Drawable)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollX(android.view.accessibility.AccessibilityRecord)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
androidx.window.layout.WindowInfoTracker$-CC: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthRegistrar: FlutterFirebaseAuthRegistrar()
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: ExtensionEmbeddingBackend$EmbeddingCallbackImpl(androidx.window.embedding.ExtensionEmbeddingBackend)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void removeListener(androidx.core.util.Consumer)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector valueOf(java.lang.String)
com.google.firebase.auth.FirebaseAuthRegistrar: java.util.List getComponents()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipIconTint()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
com.google.android.material.radiobutton.MaterialRadioButton: android.content.res.ColorStateList getMaterialThemeColorsTintList()
com.razorpay.AnalyticsEvent: com.razorpay.AnalyticsEvent[] values()
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView getCurrentImageSurface()
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
androidx.core.widget.PopupWindowCompat$Api23Impl: int getWindowLayoutType(android.widget.PopupWindow)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
androidx.window.core.Bounds: boolean isEmpty()
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List getLastInfo()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider: FlutterFirebaseMessagingInitProvider()
androidx.window.embedding.ActivityFilter: int hashCode()
com.dexterous.flutterlocalnotifications.RepeatInterval: RepeatInterval(java.lang.String,int)
com.google.android.material.timepicker.ChipTextInputComboView: ChipTextInputComboView(android.content.Context,android.util.AttributeSet)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior()
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int)
org.threeten.bp.YearMonth: java.lang.Object readResolve()
androidx.core.view.ViewCompat$Api29Impl: void setSystemGestureExclusionRects(android.view.View,java.util.List)
androidx.core.view.ViewCompat$Api26Impl: void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.window.embedding.SplitController: void removeSplitListener(androidx.core.util.Consumer)
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundColor()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.google.android.gms.internal.firebase-auth-api.zzaca: com.google.android.gms.internal.firebase-auth-api.zzaca[] values()
io.grpc.internal.MessageDeframer$State: io.grpc.internal.MessageDeframer$State[] values()
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: ExtensionWindowLayoutInfoBackend$MulticastConsumer(android.app.Activity)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void registerPlugin(java.lang.String,io.flutter.plugins.firebase.core.FlutterFirebasePlugin)
androidx.window.embedding.SplitPairRule: boolean getClearTop()
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)
androidx.cardview.widget.CardView: int getContentPaddingTop()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
com.google.firebase.firestore.remote.Stream$State: com.google.firebase.firestore.remote.Stream$State[] values()
com.google.android.material.chip.Chip: void setChipStartPadding(float)
androidx.core.app.NavUtils$Api16Impl: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)
com.google.android.material.behavior.SwipeDismissBehavior: SwipeDismissBehavior()
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getPrimaryActivityName()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: long calculateRepeatIntervalMilliseconds(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
io.grpc.internal.ManagedChannelImpl$ResolutionState: io.grpc.internal.ManagedChannelImpl$ResolutionState[] values()
com.google.android.material.textfield.TextInputLayout: void setPrefixText(java.lang.CharSequence)
org.threeten.bp.chrono.HijrahChronology: java.lang.Object readResolve()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
com.google.android.material.internal.NavigationMenuItemView: void setTitle(java.lang.CharSequence)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterOverflowTextColor()
androidx.appcompat.widget.SearchView: void setImeOptions(int)
io.flutter.embedding.android.FlutterTextureView: void setRenderSurface(android.view.Surface)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHint()
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
com.google.android.material.chip.Chip: void setCloseIconStartPaddingResource(int)
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
androidx.window.embedding.EmbeddingTranslatingCallback: EmbeddingTranslatingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface,androidx.window.embedding.EmbeddingAdapter)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.bottomappbar.BottomAppBar: int getBottomInset()
androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onAttachedToEngine(android.content.Context,io.flutter.plugin.common.BinaryMessenger)
androidx.window.embedding.EmptyEmbeddingComponent: void setEmbeddingRules(java.util.Set)
com.google.android.material.chip.ChipGroup: void setSingleSelection(boolean)
com.google.android.material.button.MaterialButton: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.window.layout.ExtensionInterfaceCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
androidx.core.view.ViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
androidx.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.material.chip.Chip: void setBackgroundColor(int)
androidx.core.graphics.Insets$Api29Impl: android.graphics.Insets of(int,int,int,int)
com.google.android.material.appbar.AppBarLayout: void setVisibility(int)
com.google.android.material.internal.NavigationMenuItemView: void setMaxLines(int)
android.support.v4.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void requestPermission(com.dexterous.flutterlocalnotifications.PermissionRequestListener)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getSecondaryActivityName()
com.google.android.material.chip.Chip: float getCloseIconEndPadding()
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: java.lang.Object invoke(java.lang.Object)
com.google.firebase.firestore.core.OnlineState: com.google.firebase.firestore.core.OnlineState[] values()
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
com.google.android.material.textfield.TextInputLayout: void setCounterTextColor(android.content.res.ColorStateList)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior(android.content.Context,android.util.AttributeSet)
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface: void onSplitInfoChanged(java.util.List)
com.google.android.material.card.MaterialCardView: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase: com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase[] values()
androidx.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.jvm.internal.CallableReference: java.util.List getParameters()
com.google.android.material.chip.Chip: void setTextEndPaddingResource(int)
com.google.firebase.iid.FirebaseInstanceIdReceiver: FirebaseInstanceIdReceiver()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: com.google.gson.Gson buildGson()
com.google.android.material.chip.Chip: void setCloseIconContentDescription(java.lang.CharSequence)
androidx.constraintlayout.widget.ConstraintHelper: void setReferencedIds(int[])
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
io.grpc.ConnectivityState: io.grpc.ConnectivityState valueOf(java.lang.String)
io.grpc.Context$DirectExecutor: io.grpc.Context$DirectExecutor[] values()
com.google.android.material.appbar.AppBarLayout: int getTopInset()
androidx.core.view.ViewCompat$Api26Impl: void setAutofillHints(android.view.View,java.lang.String[])
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopStart()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(androidx.window.extensions.layout.WindowLayoutInfo)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmoji(int)
com.google.firebase.firestore.core.ViewSnapshot$SyncState: com.google.firebase.firestore.core.ViewSnapshot$SyncState[] values()
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails from(java.util.Map)
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
com.google.android.material.chip.Chip: void setIconStartPaddingResource(int)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
androidx.window.layout.SidecarWindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
androidx.constraintlayout.widget.ConstraintLayout: int getOptimizationLevel()
com.google.firebase.firestore.local.QueryPurpose: com.google.firebase.firestore.local.QueryPurpose valueOf(java.lang.String)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior(android.content.Context,android.util.AttributeSet)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setSound(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.android.material.button.MaterialButtonToggleGroup: void setSelectionRequired(boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onDetachedFromActivity()
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext)
android.support.v4.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
androidx.core.app.Person$Api28Impl: android.app.Person toAndroidPerson(androidx.core.app.Person)
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
androidx.constraintlayout.widget.ConstraintHelper: void setIds(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontalResource(int)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPlaceholderRule parseSplitPlaceholderRule(android.content.Context,android.content.res.XmlResourceParser)
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
com.google.android.material.card.MaterialCardView: float getProgress()
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode[] values()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
com.google.android.material.chip.Chip: void setCloseIconHovered(boolean)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
androidx.window.embedding.ActivityFilter: boolean matchesIntent(android.content.Intent)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setupNotificationChannel(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails)
com.google.android.material.chip.Chip: float getIconStartPadding()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingReceiver: FlutterFirebaseMessagingReceiver()
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void areNotificationsEnabled(io.flutter.plugin.common.MethodChannel$Result)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void releaseIntercepted()
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
com.google.android.material.button.MaterialButton: int getInsetTop()
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
io.flutter.embedding.engine.FlutterJNI: void cleanupMessageData(long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
io.grpc.internal.KeepAliveManager$State: io.grpc.internal.KeepAliveManager$State valueOf(java.lang.String)
androidx.window.embedding.SplitPairRule: boolean equals(java.lang.Object)
androidx.constraintlayout.widget.ConstraintLayout: int getMinWidth()
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextEnabled(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationY(float)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
org.threeten.bp.chrono.MinguoChronology: java.lang.Object readResolve()
com.google.android.material.internal.NavigationMenuView: int getWindowAnimations()
androidx.cardview.widget.CardView: boolean getUseCompatPadding()
com.google.android.material.textfield.TextInputLayout: void setSuffixTextAppearance(int)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setShortcut(android.view.MenuItem,char,char,int,int)
androidx.core.util.ObjectsCompat$Api19Impl: int hash(java.lang.Object[])
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: FlutterLocalNotificationsPlugin()
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
io.grpc.okhttp.NegotiationType: io.grpc.okhttp.NegotiationType[] values()
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: WindowMetricsCalculator$Companion$decorator$1()
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
androidx.constraintlayout.widget.Guideline: void setGuidelineBegin(int)
com.baseflow.geolocator.GeolocatorLocationService: GeolocatorLocationService()
io.flutter.plugins.camera.features.noisereduction.NoiseReductionMode: io.flutter.plugins.camera.features.noisereduction.NoiseReductionMode[] values()
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.android.material.button.MaterialButton: int getIconSize()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State getState()
com.google.android.material.internal.ForegroundLinearLayout: android.graphics.drawable.Drawable getForeground()
com.razorpay.CheckoutBridge: void onerror(java.lang.String)
androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getBackgroundOverlayColorAlpha()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.util.HashMap getMappedNotificationChannel(android.app.NotificationChannel)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readBigPictureStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnLongClickListener(android.view.View$OnLongClickListener)
io.flutter.plugins.imagepicker.CameraDevice: io.flutter.plugins.imagepicker.CameraDevice valueOf(java.lang.String)
androidx.window.core.Version: int getMajor()
androidx.window.core.Version: boolean equals(java.lang.Object)
com.google.android.gms.maps.MapsInitializer$Renderer: com.google.android.gms.maps.MapsInitializer$Renderer valueOf(java.lang.String)
androidx.core.content.res.ResourcesCompat$Api23Impl: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationY()
androidx.window.embedding.EmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
androidx.window.layout.FoldingFeature$State: java.lang.String toString()
org.threeten.bp.YearMonth: java.lang.Object writeReplace()
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion()
com.razorpay.CheckoutBridge: void setDimensions(int,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShadowPaddingEnabled(boolean)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCheckedIcon()
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale addLikelySubtags(java.lang.Object)
com.google.firestore.v1.StructuredQuery$Direction: com.google.firestore.v1.StructuredQuery$Direction valueOf(java.lang.String)
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior()
com.google.android.material.button.MaterialButtonToggleGroup: int getLastVisibleChildIndex()
androidx.exifinterface.media.ExifInterfaceUtils$Api23Impl: void setDataSource(android.media.MediaMetadataRetriever,android.media.MediaDataSource)
androidx.window.embedding.SplitRule: boolean checkParentMetrics(android.view.WindowMetrics)
org.threeten.bp.Period: java.lang.Object readResolve()
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: int getLayoutDirection(android.graphics.drawable.Drawable)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setElevation(float)
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$700(io.flutter.embedding.android.FlutterSplashView$SavedState)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
androidx.window.embedding.EmptyEmbeddingComponent: EmptyEmbeddingComponent()
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType[] values()
com.razorpay.l: java.lang.String getString(java.lang.String)
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type valueOf(java.lang.String)
com.google.android.material.textfield.TextInputEditText: void setTextInputLayoutFocusedRectEnabled(boolean)
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairRule parseSplitPairRule(android.content.Context,android.content.res.XmlResourceParser)
androidx.core.view.GravityCompat$Api17Impl: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType valueOf(java.lang.String)
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
com.google.android.material.internal.FlowLayout: void setSingleLine(boolean)
com.lyokone.location.FlutterLocationService: FlutterLocationService()
androidx.window.embedding.SplitRule$Api30Impl: android.graphics.Rect getBounds(android.view.WindowMetrics)
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag valueOf(java.lang.String)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)
com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconToUpdateDummyDrawable()
io.grpc.okhttp.OkHttpFrameLogger$Direction: io.grpc.okhttp.OkHttpFrameLogger$Direction[] values()
com.google.android.material.button.MaterialButton: void setChecked(boolean)
org.threeten.bp.chrono.ThaiBuddhistEra: org.threeten.bp.chrono.ThaiBuddhistEra[] values()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior(android.content.Context,android.util.AttributeSet)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getContentDescription(android.view.MenuItem)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityRule parseSplitActivityRule(android.content.Context,android.content.res.XmlResourceParser)
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver: AlarmManagerSchedulerBroadcastReceiver()
com.google.android.material.button.MaterialButton: void setElevation(float)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsQ$window_release(android.app.Activity)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: WindowMetricsCalculator$Companion$overrideDecorator$1(java.lang.Object)
androidx.constraintlayout.widget.ConstraintLayout: void setMaxHeight(int)
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
androidx.window.embedding.EmbeddingAdapter: java.util.Set translate(java.util.Set)
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColor(int)
androidx.window.layout.WindowInfoTrackerImpl: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSize(int)
androidx.window.core.Version$Companion: Version$Companion()
com.razorpay.RzpTokenReceiver: RzpTokenReceiver()
com.google.android.material.button.MaterialButtonToggleGroup: void setCheckedId(int)
com.google.firestore.admin.v1.Index$IndexField$ValueModeCase: com.google.firestore.admin.v1.Index$IndexField$ValueModeCase[] values()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
androidx.window.core.Bounds: int hashCode()
com.google.android.material.chip.Chip: void setTextAppearance(com.google.android.material.resources.TextAppearance)
org.threeten.bp.Instant: java.lang.Object readResolve()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat getLastWindowInsets()
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPrefixTextColor()
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.button.MaterialButtonToggleGroup: void setupButtonChild(com.google.android.material.button.MaterialButton)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
com.google.android.material.card.MaterialCardView: int getContentPaddingTop()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetRight(android.view.DisplayCutout)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScrollTargetViewId(int)
io.flutter.embedding.android.FlutterView: void setWindowInfoListenerDisplayFeatures(androidx.window.layout.WindowLayoutInfo)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.graphics.drawable.IconCompat getIconFromSource(android.content.Context,java.lang.Object,com.dexterous.flutterlocalnotifications.models.IconSource)
androidx.fragment.app.FragmentActivity: FragmentActivity()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void show(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
kotlin.jvm.internal.FunctionReference: boolean isInfix()
com.google.android.material.chip.Chip: void setCloseIconTint(android.content.res.ColorStateList)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$202(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
com.razorpay.PluginCheckoutBridge: void onCheckoutBackPress()
androidx.core.view.ViewCompat$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
com.google.android.material.internal.ForegroundLinearLayout: int getForegroundGravity()
com.google.android.material.chip.Chip: float getChipStartPadding()
androidx.core.graphics.drawable.IconCompat: IconCompat()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.android.material.internal.BaselineLayout: BaselineLayout(android.content.Context,android.util.AttributeSet)
androidx.window.core.Version: java.math.BigInteger getBigInteger()
androidx.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
com.google.firebase.firestore.core.LimboDocumentChange$Type: com.google.firebase.firestore.core.LimboDocumentChange$Type[] values()
io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error[] values()
org.threeten.bp.temporal.ChronoUnit: org.threeten.bp.temporal.ChronoUnit[] values()
androidx.core.content.ContextCompat$Api26Impl: android.content.ComponentName startForegroundService(android.content.Context,android.content.Intent)
androidx.constraintlayout.widget.Guideline: void setGuidelinePercent(float)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getStartIconContentDescription()
com.google.firebase.firestore.model.MutableDocument$DocumentState: com.google.firebase.firestore.model.MutableDocument$DocumentState valueOf(java.lang.String)
androidx.window.embedding.ActivityRule: int hashCode()
com.google.android.material.button.MaterialButton: int getInsetBottom()
io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType valueOf(java.lang.String)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior()
androidx.window.layout.WindowMetrics: WindowMetrics(androidx.window.core.Bounds)
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
org.threeten.bp.chrono.HijrahEra: org.threeten.bp.chrono.HijrahEra[] values()
com.google.android.material.textfield.TextInputLayout: void setEndIconMode(int)
androidx.media.AudioAttributesImplBase: AudioAttributesImplBase()
androidx.window.embedding.SplitPairFilter: boolean matchesActivityPair(android.app.Activity,android.app.Activity)
androidx.core.widget.TextViewCompat$Api23Impl: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
com.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()
com.google.android.material.button.MaterialButton: MaterialButton(android.content.Context,android.util.AttributeSet)
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource valueOf(java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer getCallback()
com.google.android.gms.maps.MapsInitializer$Renderer: com.google.android.gms.maps.MapsInitializer$Renderer[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setEnsureMinTouchTargetSize(boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void createNotificationChannel(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
androidx.window.layout.WindowLayoutInfo: boolean equals(java.lang.Object)
androidx.recyclerview.widget.RecyclerView$LayoutManager: RecyclerView$LayoutManager()
com.google.protobuf.JavaType: com.google.protobuf.JavaType valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)
androidx.core.widget.PopupWindowCompat$Api19Impl: void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledVerticalScrollFactor(android.view.ViewConfiguration)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
androidx.window.embedding.SplitInfo: SplitInfo(androidx.window.embedding.ActivityStack,androidx.window.embedding.ActivityStack,float)
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.app.PendingIntent getBroadcastPendingIntent(android.content.Context,int,android.content.Intent)
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
androidx.window.layout.HardwareFoldingFeature$Companion: void validateFeatureBounds$window_release(androidx.window.core.Bounds)
com.google.android.material.appbar.MaterialToolbar: void setNavigationIconTint(int)
com.google.android.material.chip.Chip: void setChipCornerRadiusResource(int)
com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable computeReflected()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidLedDetails(io.flutter.plugin.common.MethodChannel$Result,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController getInstance()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setUseCompatPadding(boolean)
com.google.android.material.card.MaterialCardView: void setStrokeWidth(int)
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
com.google.firestore.admin.v1.Index$IndexField$Order: com.google.firestore.admin.v1.Index$IndexField$Order valueOf(java.lang.String)
androidx.window.core.Version: androidx.window.core.Version access$getUNKNOWN$cp()
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
io.flutter.plugins.camera.features.autofocus.FocusMode: io.flutter.plugins.camera.features.autofocus.FocusMode[] values()
androidx.window.embedding.SplitController$Companion: SplitController$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundResource(int)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: FlutterFirebasePluginRegistry()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
com.google.android.material.snackbar.SnackbarContentLayout: SnackbarContentLayout(android.content.Context,android.util.AttributeSet)
androidx.window.layout.DisplayCompatHelperApi17: void getRealSize(android.view.Display,android.graphics.Point)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getBoxStrokeErrorColor()
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion()
androidx.window.layout.FoldingFeature$State: FoldingFeature$State(java.lang.String)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.button.MaterialButton: void setIconGravity(int)
com.google.android.material.textfield.TextInputLayout: int getPlaceholderTextAppearance()
com.razorpay.CheckoutBridge: void setDeviceToken(java.lang.String)
androidx.window.layout.WindowMetrics: boolean equals(java.lang.Object)
androidx.window.embedding.EmbeddingRule: EmbeddingRule()
androidx.core.view.ViewCompat$Api17Impl: int getPaddingEnd(android.view.View)
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo,java.util.List)
androidx.window.layout.HardwareFoldingFeature: android.graphics.Rect getBounds()
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setAnimateShowBeforeLayout(boolean)
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior(android.content.Context,android.util.AttributeSet)
com.dexterous.flutterlocalnotifications.ScheduledNotificationBootReceiver: void onReceive(android.content.Context,android.content.Intent)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: Snackbar$SnackbarLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$602(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.threeten.bp.Duration: java.lang.Object readResolve()
com.google.android.material.card.MaterialCardView: void setStrokeColor(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedScheduleNextNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.dexterous.flutterlocalnotifications.utils.BooleanUtils: BooleanUtils()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: int getAlpha(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipBackgroundColor()
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setChipIconSizeResource(int)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.constraintlayout.widget.Barrier: void setDpMargin(int)
com.google.firebase.firestore.DocumentSnapshot$ServerTimestampBehavior: com.google.firebase.firestore.DocumentSnapshot$ServerTimestampBehavior valueOf(java.lang.String)
com.google.android.material.card.MaterialCardView: android.graphics.drawable.Drawable getCheckedIcon()
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButton: void setBackgroundResource(int)
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextAppearance(int)
androidx.core.view.MenuItemCompat$Api26Impl: int getNumericModifiers(android.view.MenuItem)
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat[] values()
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void saveScheduledNotifications(android.content.Context,java.util.ArrayList)
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: WindowInfoTrackerCallbackAdapter$addListener$1$1(kotlinx.coroutines.flow.Flow,androidx.core.util.Consumer,kotlin.coroutines.Continuation)
androidx.window.embedding.SplitPlaceholderRule: java.util.Set getFilters()
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(int)
androidx.core.view.ViewCompat$Api17Impl: android.view.Display getDisplay(android.view.View)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Point getRealSizeForDisplay$window_release(android.view.Display)
androidx.window.embedding.SplitPairFilter: int hashCode()
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
androidx.core.util.ObjectsCompat$Api19Impl: boolean equals(java.lang.Object,java.lang.Object)
kotlin.jvm.internal.CallableReference: java.util.List getTypeParameters()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(android.content.res.ColorStateList)
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.TextView getMessageView()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.Boolean sendNotificationPayloadMessage(android.content.Intent)
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: InboxStyleInformation(java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.util.ArrayList,java.lang.Boolean)
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior: BaseTransientBottomBar$Behavior()
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)
androidx.core.widget.NestedScrollView$Api21Impl: boolean getClipToPadding(android.view.ViewGroup)
org.threeten.bp.zone.ZoneOffsetTransition: java.lang.Object writeReplace()
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType valueOf(java.lang.String)
com.google.android.material.card.MaterialCardView: void setMaxCardElevation(float)
androidx.window.embedding.ActivityFilter: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_0_1$cp()
androidx.core.view.ViewCompat$Api16Impl: boolean hasOverlappingRendering(android.view.View)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
androidx.window.core.Bounds: Bounds(android.graphics.Rect)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.ChipGroup: void setSingleLine(boolean)
androidx.core.view.ViewCompat$Api19Impl: void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(java.lang.Object)
com.google.android.gms.auth.api.signin.RevocationBoundService: RevocationBoundService()
kotlin.jvm.internal.FunctionReference: boolean equals(java.lang.Object)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getCustomSize()
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
androidx.core.app.RemoteInput$Api20Impl: void addResultsToIntent(java.lang.Object,android.content.Intent,android.os.Bundle)
com.google.android.material.chip.Chip: float getTextEndPadding()
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration)
com.razorpay.l: void setFloat(java.lang.String,float)
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator getOrCreate()
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService: JobInfoSchedulerService()
androidx.media.AudioAttributesCompat: AudioAttributesCompat()
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: NotificationChannelDetails()
androidx.window.core.Bounds: int getTop()
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.constraintlayout.widget.Barrier: void setAllowsGoneWidget(boolean)
androidx.core.view.ViewCompat$Api19Impl: boolean isLayoutDirectionResolved(android.view.View)
androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()
androidx.core.graphics.drawable.IconCompat$Api28Impl: java.lang.String getResPackage(java.lang.Object)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setAnimationMode(int)
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpecResource(int)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setVisibility(int)
com.google.firebase.firestore.FirestoreRegistrar: com.google.firebase.firestore.FirestoreMultiDbComponent lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getSuffixText()
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type[] values()
com.google.android.material.chip.Chip: void setTextStartPadding(float)
androidx.core.view.ViewCompat$Api16Impl: void setImportantForAccessibility(android.view.View,int)
kotlin.jvm.internal.CallableReference: CallableReference()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
androidx.window.layout.SidecarWindowBackend$Companion: void resetInstance()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointVariantSelector(int)
com.google.firebase.auth.internal.RecaptchaActivity: RecaptchaActivity()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
androidx.constraintlayout.widget.Barrier: void setType(int)
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: void onVsync(long,long,long)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
kotlin.jvm.internal.CallableReference: java.lang.String getSignature()
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.core.Version$bigInteger$2: java.math.BigInteger invoke()
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOp(android.app.AppOpsManager,java.lang.String,java.lang.String)
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus valueOf(java.lang.String)
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.String[] getDigitStrings(android.icu.text.DecimalFormatSymbols)
com.razorpay.l: void setBoolean(java.lang.String,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String,java.lang.String,java.util.List)
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
com.google.android.material.chip.ChipGroup: void setDividerDrawableHorizontal(android.graphics.drawable.Drawable)
com.baseflow.geolocator.location.ServiceStatus: com.baseflow.geolocator.location.ServiceStatus valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifierBase(int)
com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()
com.google.android.material.bottomappbar.BottomAppBar: int getFabAlignmentMode()
com.razorpay.b__J_: b__J_()
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalCacheDirs(android.content.Context)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getTooltipText(android.view.MenuItem)
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
com.google.android.material.chip.Chip: void setBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.google.android.gms.internal.firebase-auth-api.zzoa: com.google.android.gms.internal.firebase-auth-api.zzoa[] values()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void schedule(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.internal.ForegroundLinearLayout: void setForeground(android.graphics.drawable.Drawable)
androidx.window.embedding.EmptyEmbeddingComponent: void setSplitInfoCallback(java.util.function.Consumer)
com.google.android.material.bottomappbar.BottomAppBar: boolean getHideOnScroll()
io.flutter.embedding.engine.FlutterJNI: void updateRefreshRate()
com.google.android.material.button.MaterialButton: void setInsetBottom(int)
androidx.window.layout.ActivityCompatHelperApi30: ActivityCompatHelperApi30()
androidx.window.embedding.EmbeddingAdapter: boolean translateIntentPredicates$lambda-8(java.util.Set,android.content.Intent)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.firebase.firestore.proto.MaybeDocument$DocumentTypeCase: com.google.firebase.firestore.proto.MaybeDocument$DocumentTypeCase valueOf(java.lang.String)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType valueOf(java.lang.String)
com.google.firebase.firestore.local.IndexManager$IndexType: com.google.firebase.firestore.local.IndexManager$IndexType valueOf(java.lang.String)
org.threeten.bp.ZonedDateTime: java.lang.Object writeReplace()
com.google.android.material.button.MaterialButton: void setCornerRadiusResource(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpecResource(int)
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
io.flutter.embedding.engine.FlutterJNI: void nativeImageHeaderCallback(long,int,int)
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat(androidx.window.extensions.embedding.ActivityEmbeddingComponent,androidx.window.embedding.EmbeddingAdapter)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getMaterialThemeColorsTintList()
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
androidx.core.os.UserManagerCompat$Api24Impl: boolean isUserUnlocked(android.content.Context)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundMode(int)
com.google.android.material.card.MaterialCardView: int getContentPaddingRight()
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
kotlin.jvm.internal.CallableReference: boolean isOpen()
com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)
androidx.window.layout.SidecarAdapter$Companion: androidx.window.layout.DisplayFeature translate$window_release(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDeviceState)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] values()
androidx.core.view.GravityCompat$Api17Impl: void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)
com.google.firestore.v1.Write$OperationCase: com.google.firestore.v1.Write$OperationCase valueOf(java.lang.String)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setAlphabeticShortcut(android.view.MenuItem,char,int)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory of(java.lang.Class,java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar: void setCradleVerticalOffset(float)
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetLeft(android.view.DisplayCutout)
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
org.threeten.bp.chrono.MinguoEra: java.lang.Object writeReplace()
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairFilter parseSplitPairFilter(android.content.Context,android.content.res.XmlResourceParser)
androidx.core.view.ViewCompat$Api18Impl: boolean isInLayout(android.view.View)
androidx.window.layout.WindowMetricsCalculator$-CC: void overrideDecorator(androidx.window.layout.WindowMetricsCalculatorDecorator)
org.threeten.bp.chrono.ThaiBuddhistChronology: java.lang.Object readResolve()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable compute()
androidx.window.embedding.SplitController: void clearRegisteredRules()
com.google.android.material.chip.Chip: void setCloseIconEndPadding(float)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityIntentPredicates$lambda-3(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable: AbstractSafeParcelable()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidth(int)
androidx.core.widget.ListViewCompat$Api19Impl: boolean canScrollList(android.widget.ListView,int)
org.threeten.bp.Year: java.lang.Object writeReplace()
androidx.window.embedding.ExtensionEmbeddingBackend: void setEmbeddingExtension(androidx.window.embedding.EmbeddingInterfaceCompat)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidRawSoundResource(io.flutter.plugin.common.MethodChannel$Result,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo getLastInfo()
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
com.google.android.material.internal.NavigationMenuItemView: void setChecked(boolean)
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
com.google.firebase.firestore.util.Logger$Level: com.google.firebase.firestore.util.Logger$Level valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
com.google.android.material.chip.Chip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHintFromLayout()
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader getImageReader()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
kotlin.jvm.internal.Lambda: java.lang.String toString()
androidx.core.view.ViewCompat$Api17Impl: boolean isPaddingRelative(android.view.View)
org.threeten.bp.chrono.HijrahDate: java.lang.Object readResolve()
com.google.android.material.textfield.TextInputLayout: void setErrorTextAppearance(int)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
com.google.android.material.chip.Chip: void setEllipsize(android.text.TextUtils$TruncateAt)
com.google.android.material.chip.ChipGroup: void setCheckedId(int)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: boolean canApplyTheme(android.graphics.drawable.Drawable)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatPressedTranslationZ()
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior()
android.support.v4.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
io.flutter.plugins.camera.DartMessenger$CameraEventType: io.flutter.plugins.camera.DartMessenger$CameraEventType valueOf(java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)
androidx.core.app.AlarmManagerCompat$Api23Impl: void setExactAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent)
androidx.window.embedding.MatcherUtils: boolean areComponentsMatching$window_release(android.content.ComponentName,android.content.ComponentName)
com.google.android.material.chip.Chip: void setBackgroundResource(int)
com.google.android.material.chip.ChipGroup: void setFlexWrap(int)
androidx.constraintlayout.widget.Constraints: androidx.constraintlayout.widget.ConstraintSet getConstraintSet()
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreRegistrar: java.util.List getComponents()
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation: DefaultStyleInformation(java.lang.Boolean,java.lang.Boolean)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long parseLong(java.lang.Object)
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction[] values()
org.threeten.bp.chrono.JapaneseChronology: java.lang.Object readResolve()
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept(androidx.window.layout.WindowLayoutInfo)
androidx.window.layout.WindowMetricsCalculatorCompat: void getRectSizeFromDisplay(android.app.Activity,android.graphics.Rect)
androidx.core.content.ContextCompat$Api24Impl: boolean isDeviceProtectedStorage(android.content.Context)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
kotlin.coroutines.jvm.internal.SuspendLambda: int getArity()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void deleteNotificationChannelGroup(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.media.AudioAttributesImplApi26Parcelizer: void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel)
androidx.cardview.widget.CardView: void setMinimumHeight(int)
com.google.android.material.chip.Chip: void setLines(int)
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(boolean)
androidx.core.view.ViewCompat$Api16Impl: void setBackground(android.view.View,android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api26Impl: void setImportantForAutofill(android.view.View,int)
com.google.android.material.chip.Chip: float getIconEndPadding()
androidx.media.AudioAttributesImplApi26Parcelizer: androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel)
androidx.constraintlayout.widget.ConstraintLayout: void setMinHeight(int)
com.google.android.material.chip.Chip: void setCloseIconResource(int)
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList createLocaleList(java.util.Locale[])
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
androidx.window.layout.WindowMetricsCalculatorCompat: int getNavigationBarHeight(android.content.Context)
com.google.android.material.textfield.TextInputLayout: void setSuffixTextColor(android.content.res.ColorStateList)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
androidx.core.widget.TextViewCompat$Api23Impl: int getHyphenationFrequency(android.widget.TextView)
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
kotlin.jvm.internal.FunctionReference: int hashCode()
com.razorpay.CheckoutBridge: void invokePopup(java.lang.String)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleX(float)
com.google.firestore.v1.StructuredQuery$Direction: com.google.firestore.v1.StructuredQuery$Direction[] values()
androidx.window.core.Version: androidx.window.core.Version parse(java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
io.flutter.plugins.camera.DartMessenger$CameraEventType: io.flutter.plugins.camera.DartMessenger$CameraEventType[] values()
androidx.window.java.R: R()
com.google.android.material.bottomappbar.BottomAppBar: void setFabAnimationMode(int)
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: long calculateNextNotificationTrigger(long,long)
android.support.v4.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
com.google.android.material.internal.FlowLayout: int getItemSpacing()
androidx.core.view.ViewParentCompat$Api21Impl: void onStopNestedScroll(android.view.ViewParent,android.view.View)
io.grpc.okhttp.internal.Protocol: io.grpc.okhttp.internal.Protocol[] values()
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
org.threeten.bp.Duration: java.lang.Object writeReplace()
com.google.android.material.card.MaterialCardView: int getStrokeColor()
com.google.android.material.internal.CheckableImageButton: void setPressed(boolean)
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.core.view.accessibility.AccessibilityEventCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
com.google.android.material.chip.Chip: void setCloseIconSize(float)
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
com.dexterous.flutterlocalnotifications.models.IconSource: IconSource(java.lang.String,int)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api16Impl: void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int)
com.dexterous.flutterlocalnotifications.models.PersonDetails: PersonDetails(java.lang.Boolean,java.lang.Object,com.dexterous.flutterlocalnotifications.models.IconSource,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String)
androidx.window.layout.SidecarCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
androidx.core.view.ViewCompat$Api30Impl: void setStateDescription(android.view.View,java.lang.CharSequence)
io.flutter.embedding.android.FlutterActivity: FlutterActivity()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.drawable.Drawable getContentBackground()
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
com.google.android.material.button.MaterialButton: void setIconSize(int)
androidx.core.widget.ImageViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier[] values()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1(androidx.core.util.Consumer)
com.google.android.material.chip.ChipGroup: void setDividerDrawableVertical(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.constraintlayout.widget.Barrier: void setMargin(int)
com.google.android.material.chip.Chip: void setChipMinHeightResource(int)
com.google.firebase.firestore.local.QueryPurpose: com.google.firebase.firestore.local.QueryPurpose[] values()
androidx.window.layout.HardwareFoldingFeature$Type: HardwareFoldingFeature$Type(java.lang.String)
com.google.android.material.card.MaterialCardView: float getRadius()
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator: com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator[] values()
com.google.android.material.appbar.MaterialToolbar: void setElevation(float)
androidx.window.layout.FoldingFeature$Orientation: FoldingFeature$Orientation(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: com.dexterous.flutterlocalnotifications.models.NotificationDetails extractNotificationDetails(io.flutter.plugin.common.MethodChannel$Result,java.util.Map)
com.google.android.material.internal.FlowLayout: void setLineSpacing(int)
androidx.window.layout.ActivityCompatHelperApi24: boolean isInMultiWindowMode(android.app.Activity)
io.flutter.plugins.camera.features.resolution.ResolutionPreset: io.flutter.plugins.camera.features.resolution.ResolutionPreset[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeListener(androidx.core.util.Consumer)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorStateList(android.content.res.ColorStateList)
androidx.window.layout.SidecarCompat: boolean validateExtensionInterface()
com.google.android.material.chip.Chip: Chip(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setChipDrawable(com.google.android.material.chip.ChipDrawable)
androidx.window.core.Version: androidx.window.core.Version access$getCURRENT$cp()
androidx.core.widget.TextViewCompat$Api24Impl: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)
com.google.android.material.appbar.AppBarLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType[] values()
com.google.android.material.textfield.TextInputLayout: int getBaseline()
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
androidx.core.app.RemoteInput$Api26Impl: java.util.Set getAllowedDataTypes(java.lang.Object)
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void onSplitInfoChanged(java.util.List)
io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel[] values()
androidx.activity.ComponentActivity: ComponentActivity()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean isValidDrawableResource(android.content.Context,java.lang.String,io.flutter.plugin.common.MethodChannel$Result,java.lang.String)
androidx.core.view.ViewCompat$Api26Impl: android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int)
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setOnClickListener(android.view.View$OnClickListener)
androidx.window.embedding.SplitRule: int getMinWidth()
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] values()
androidx.window.layout.WindowMetrics: int hashCode()
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority valueOf(java.lang.String)
com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()
androidx.window.embedding.ActivityRule: java.util.Set getFilters()
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: SidecarWindowBackend$ExtensionListenerImpl(androidx.window.layout.SidecarWindowBackend)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
com.google.firebase.firestore.core.OrderBy$Direction: com.google.firebase.firestore.core.OrderBy$Direction valueOf(java.lang.String)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOpNoThrow(android.app.AppOpsManager,java.lang.String,java.lang.String)
androidx.window.core.Bounds: int getWidth()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
com.google.android.material.datepicker.MaterialCalendarGridView: MaterialCalendarGridView(android.content.Context,android.util.AttributeSet)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
com.google.android.gms.common.api.PendingResult: PendingResult()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZ(float)
io.flutter.embedding.engine.FlutterJNI: void nativeCleanupMessageData(long)
kotlin.coroutines.AbstractCoroutineContextElement: AbstractCoroutineContextElement(kotlin.coroutines.CoroutineContext$Key)
androidx.core.content.res.ResourcesCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)
io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion[] values()
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
com.google.android.material.button.MaterialButton: void setInternalBackground(android.graphics.drawable.Drawable)
com.google.android.material.internal.VisibilityAwareImageButton: void setVisibility(int)
com.razorpay.CheckoutBridge: void ondismiss(java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar: void setFabAlignmentMode(int)
androidx.window.layout.HardwareFoldingFeature: java.lang.String toString()
com.google.android.material.circularreveal.CircularRevealFrameLayout: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
androidx.window.embedding.SplitController: void registerRule(androidx.window.embedding.EmbeddingRule)
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
com.google.android.material.card.MaterialCardView: void setClickable(boolean)
com.google.android.gms.dynamite.descriptors.com.google.firebase.auth.ModuleDescriptor: ModuleDescriptor()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getHintTextColor()
androidx.cardview.widget.CardView: int getContentPaddingRight()
com.google.android.material.button.MaterialButton: void setIconPadding(int)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: WindowInfoTrackerImpl$windowLayoutInfo$1(androidx.window.layout.WindowInfoTrackerImpl,android.app.Activity,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
androidx.window.embedding.ExtensionEmbeddingBackend: ExtensionEmbeddingBackend(androidx.window.embedding.EmbeddingInterfaceCompat)
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier valueOf(java.lang.String)
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform[] values()
io.grpc.stub.ClientCalls$StubType: io.grpc.stub.ClientCalls$StubType[] values()
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: ExtensionWindowLayoutInfoBackend(androidx.window.extensions.layout.WindowLayoutComponent)
com.razorpay.RzpAssist: void setUseWideViewPort(boolean)
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
org.threeten.bp.chrono.MinguoEra: org.threeten.bp.chrono.MinguoEra valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.jhatfat.Application: Application()
androidx.appcompat.widget.SearchView: int getInputType()
kotlin.jvm.internal.CallableReference: java.util.List getAnnotations()
com.google.android.material.internal.NavigationMenuItemView: void setIconPadding(int)
com.google.firebase.installations.FirebaseInstallationsRegistrar: com.google.firebase.installations.FirebaseInstallationsApi lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
androidx.window.layout.WindowInfoTracker$Companion: WindowInfoTracker$Companion()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCheckedIconTint()
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: void setCloseIconPressed(boolean)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable computeReflected()
com.razorpay.AnalyticsEvent: com.razorpay.AnalyticsEvent valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPlaceholderTextColor()
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable getBoxBackground()
com.google.android.material.button.MaterialButton: void setIconTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
androidx.window.R$attr: R$attr()
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: ScheduledNotificationRepeatFrequency(java.lang.String,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: SidecarCompat$DistinctSidecarElementCallback(androidx.window.layout.SidecarAdapter,androidx.window.sidecar.SidecarInterface$SidecarCallback)
androidx.core.os.TraceCompat$Api18Impl: void endSection()
androidx.window.layout.WindowLayoutInfo: java.lang.String toString()
com.google.firebase.firestore.FirestoreRegistrar: FirestoreRegistrar()
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
androidx.core.view.ViewCompat$Api18Impl: android.graphics.Rect getClipBounds(android.view.View)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
androidx.window.embedding.EmbeddingCompat$Companion: boolean isEmbeddingAvailable()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void rescheduleNotifications(android.content.Context)
androidx.appcompat.widget.SearchView: int getPreferredWidth()
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
androidx.window.embedding.EmbeddingAdapter: androidx.window.embedding.SplitInfo translate(androidx.window.extensions.embedding.SplitInfo)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.google.android.material.chip.Chip: void setChipMinHeight(float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
com.google.android.material.appbar.MaterialToolbar: MaterialToolbar(android.content.Context,android.util.AttributeSet)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService: FlutterFirebaseMessagingBackgroundService()
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api26Impl: int getNextClusterForwardId(android.view.View)
androidx.window.embedding.SplitController: void initialize(android.content.Context,int)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.EmbeddingInterfaceCompat initAndVerifyEmbeddingExtension()
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowBackend windowBackend$window_release(android.content.Context)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus[] values()
androidx.core.app.RemoteInput$Api29Impl: android.app.RemoteInput$Builder setEditChoicesBeforeSending(android.app.RemoteInput$Builder,int)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
com.google.firebase.messaging.threads.ThreadPriority: com.google.firebase.messaging.threads.ThreadPriority valueOf(java.lang.String)
org.threeten.bp.OffsetTime: java.lang.Object readResolve()
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCheckedIconTint()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept$lambda-1(androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper,java.util.List)
com.google.android.material.appbar.MaterialToolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void repeatNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.lang.Boolean)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api26Impl: void setFocusedByDefault(android.view.View,boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
androidx.window.layout.SidecarCompat$Companion: androidx.window.core.Version getSidecarVersion()
com.google.firebase.firestore.core.OrderBy$Direction: com.google.firebase.firestore.core.OrderBy$Direction[] values()
org.threeten.bp.DayOfWeek: org.threeten.bp.DayOfWeek valueOf(java.lang.String)
com.razorpay.BaseCheckoutOtpelfActivity: BaseCheckoutOtpelfActivity()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevation(float)
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
androidx.window.layout.SidecarCompat: void registerConfigurationChangeListener(android.app.Activity)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getIconTint()
androidx.window.layout.SidecarCompat: void register(android.os.IBinder,android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
